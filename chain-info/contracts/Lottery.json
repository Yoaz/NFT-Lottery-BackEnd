{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vrfCoordinatorV2",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_gasLane",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "_subscriptionId",
          "type": "uint64"
        },
        {
          "internalType": "uint32",
          "name": "_callbackGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_interval",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Lottery__CantJoinClosed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Lottery__NFTValueNotMatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Lottery__NftValueTooLow",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treasuryBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "playersLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lotteryState",
          "type": "uint256"
        }
      ],
      "name": "Lottery__UpKeepNotNeeded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Lottery__transferTreasuryFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "have",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "want",
          "type": "address"
        }
      ],
      "name": "OnlyCoordinatorCanFulfill",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "collectionAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "LotteryEnter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "name": "requestedLotteryWinner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "name": "winnerPicked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upKeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collectionAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "enterLottery",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntranceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLotteryState",
      "outputs": [
        {
          "internalType": "enum Lottery.LOTTERY_STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLotteryTreasury",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNFTValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumOfParticipants",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumWords",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getPlayer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRecenetWinner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRequestConfirmations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTreasuryAvg",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "randomWords",
          "type": "uint256[]"
        }
      ],
      "name": "rawFulfillRandomWords",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_tresury",
      "outputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collectionAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "setNFTValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/yoazshmider/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/access/Ownable.sol",
    "1": "/Users/yoazshmider/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC721/IERC721.sol",
    "12": "/Users/yoazshmider/.brownie/packages/smartcontractkit/chainlink@1.11.0/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
    "13": "contracts/Lottery.sol",
    "2": "/Users/yoazshmider/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/Context.sol",
    "3": "/Users/yoazshmider/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/introspection/IERC165.sol",
    "6": "/Users/yoazshmider/.brownie/packages/smartcontractkit/chainlink@1.11.0/contracts/src/v0.8/VRFConsumerBaseV2.sol",
    "7": "/Users/yoazshmider/.brownie/packages/smartcontractkit/chainlink@1.11.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "8": "/Users/yoazshmider/.brownie/packages/smartcontractkit/chainlink@1.11.0/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol"
  },
  "ast": {
    "absolutePath": "contracts/Lottery.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1887
      ],
      "ConfirmedOwner": [
        1783
      ],
      "ConfirmedOwnerWithProposal": [
        2278
      ],
      "Context": [
        2104
      ],
      "IERC165": [
        2116
      ],
      "IERC721": [
        1763
      ],
      "KeeperCompatibleInterface": [
        2297
      ],
      "Lottery": [
        671
      ],
      "Lottery__CantJoinClosed": [
        15
      ],
      "Lottery__NFTValueNotMatch": [
        25
      ],
      "Lottery__NftValueTooLow": [
        11
      ],
      "Lottery__UpKeepNotNeeded": [
        23
      ],
      "Lottery__transferTreasuryFailed": [
        13
      ],
      "Ownable": [
        1647
      ],
      "OwnableInterface": [
        2313
      ],
      "VRFConsumerBaseV2": [
        1841
      ],
      "VRFCoordinatorV2Interface": [
        1987
      ]
    },
    "id": 672,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:13"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "57:33:13"
      },
      {
        "absolutePath": "/Users/yoazshmider/.brownie/packages/smartcontractkit/chainlink@1.11.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 672,
        "sourceUnit": 1888,
        "src": "302:76:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yoazshmider/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 672,
        "sourceUnit": 1648,
        "src": "379:52:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yoazshmider/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 672,
        "sourceUnit": 1764,
        "src": "432:58:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yoazshmider/.brownie/packages/smartcontractkit/chainlink@1.11.0/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 672,
        "sourceUnit": 1988,
        "src": "491:80:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yoazshmider/.brownie/packages/smartcontractkit/chainlink@1.11.0/contracts/src/v0.8/VRFConsumerBaseV2.sol",
        "file": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 672,
        "sourceUnit": 1842,
        "src": "572:61:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yoazshmider/.brownie/packages/smartcontractkit/chainlink@1.11.0/contracts/src/v0.8/ConfirmedOwner.sol",
        "file": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 672,
        "sourceUnit": 1784,
        "src": "634:58:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yoazshmider/.brownie/packages/smartcontractkit/chainlink@1.11.0/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 672,
        "sourceUnit": 1892,
        "src": "693:80:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11,
        "name": "Lottery__NftValueTooLow",
        "nameLocation": "781:23:13",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 10,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "804:2:13"
        },
        "src": "775:32:13"
      },
      {
        "id": 13,
        "name": "Lottery__transferTreasuryFailed",
        "nameLocation": "814:31:13",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 12,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "845:2:13"
        },
        "src": "808:40:13"
      },
      {
        "id": 15,
        "name": "Lottery__CantJoinClosed",
        "nameLocation": "855:23:13",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 14,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "878:2:13"
        },
        "src": "849:32:13"
      },
      {
        "id": 23,
        "name": "Lottery__UpKeepNotNeeded",
        "nameLocation": "888:24:13",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 22,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 17,
              "mutability": "mutable",
              "name": "treasuryBalance",
              "nameLocation": "923:15:13",
              "nodeType": "VariableDeclaration",
              "scope": 23,
              "src": "915:23:13",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 16,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "915:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": false,
              "id": 19,
              "mutability": "mutable",
              "name": "playersLength",
              "nameLocation": "949:13:13",
              "nodeType": "VariableDeclaration",
              "scope": 23,
              "src": "941:21:13",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 18,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "941:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": false,
              "id": 21,
              "mutability": "mutable",
              "name": "lotteryState",
              "nameLocation": "973:12:13",
              "nodeType": "VariableDeclaration",
              "scope": 23,
              "src": "965:20:13",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 20,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "965:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "912:75:13"
        },
        "src": "882:106:13"
      },
      {
        "id": 25,
        "name": "Lottery__NFTValueNotMatch",
        "nameLocation": "995:25:13",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 24,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1020:2:13"
        },
        "src": "989:34:13"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 26,
              "name": "VRFConsumerBaseV2",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1841,
              "src": "1045:17:13"
            },
            "id": 27,
            "nodeType": "InheritanceSpecifier",
            "src": "1045:17:13"
          },
          {
            "baseName": {
              "id": 28,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1647,
              "src": "1064:7:13"
            },
            "id": 29,
            "nodeType": "InheritanceSpecifier",
            "src": "1064:7:13"
          },
          {
            "baseName": {
              "id": 30,
              "name": "KeeperCompatibleInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2297,
              "src": "1073:25:13"
            },
            "id": 31,
            "nodeType": "InheritanceSpecifier",
            "src": "1073:25:13"
          }
        ],
        "canonicalName": "Lottery",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 671,
        "linearizedBaseContracts": [
          671,
          2297,
          1647,
          2104,
          1841
        ],
        "name": "Lottery",
        "nameLocation": "1034:7:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Lottery.LOTTERY_STATE",
            "id": 35,
            "members": [
              {
                "id": 32,
                "name": "OPEN",
                "nameLocation": "1146:4:13",
                "nodeType": "EnumValue",
                "src": "1146:4:13"
              },
              {
                "id": 33,
                "name": "CLOSED",
                "nameLocation": "1154:6:13",
                "nodeType": "EnumValue",
                "src": "1154:6:13"
              },
              {
                "id": 34,
                "name": "CALCULATING_WINNER",
                "nameLocation": "1164:18:13",
                "nodeType": "EnumValue",
                "src": "1164:18:13"
              }
            ],
            "name": "LOTTERY_STATE",
            "nameLocation": "1128:13:13",
            "nodeType": "EnumDefinition",
            "src": "1123:62:13"
          },
          {
            "canonicalName": "Lottery.nft",
            "id": 42,
            "members": [
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "_tokenAddress",
                "nameLocation": "1275:13:13",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "1267:21:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 36,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1267:7:13",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "_tokenId",
                "nameLocation": "1300:8:13",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "1292:16:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1292:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "mutability": "mutable",
                "name": "_owner",
                "nameLocation": "1320:6:13",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "1312:14:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 40,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1312:7:13",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "nft",
            "nameLocation": "1259:3:13",
            "nodeType": "StructDefinition",
            "scope": 671,
            "src": "1252:78:13",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 44,
            "mutability": "immutable",
            "name": "i_gasLane",
            "nameLocation": "1418:9:13",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "1392:35:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 43,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1392:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 46,
            "mutability": "immutable",
            "name": "i_subscriptionId",
            "nameLocation": "1455:16:13",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "1430:41:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 45,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1430:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 49,
            "mutability": "constant",
            "name": "REQUEST_CONFIRMATIONS",
            "nameLocation": "1498:21:13",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "1474:49:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 47,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "1474:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 48,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1522:1:13",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 51,
            "mutability": "immutable",
            "name": "i_callbackGasLimit",
            "nameLocation": "1551:18:13",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "1526:43:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 50,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1526:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 54,
            "mutability": "constant",
            "name": "NUM_WORDS",
            "nameLocation": "1596:9:13",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "1572:37:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 52,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1572:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 53,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1608:1:13",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 57,
            "mutability": "immutable",
            "name": "i_vrfCoordinator",
            "nameLocation": "1656:16:13",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "1612:60:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$1987",
              "typeString": "contract VRFCoordinatorV2Interface"
            },
            "typeName": {
              "id": 56,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 55,
                "name": "VRFCoordinatorV2Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1987,
                "src": "1612:25:13"
              },
              "referencedDeclaration": 1987,
              "src": "1612:25:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$1987",
                "typeString": "contract VRFCoordinatorV2Interface"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 60,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "1715:5:13",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "1698:22:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC721_$1763",
              "typeString": "contract IERC721"
            },
            "typeName": {
              "id": 59,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58,
                "name": "IERC721",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1763,
                "src": "1698:7:13"
              },
              "referencedDeclaration": 1763,
              "src": "1698:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721_$1763",
                "typeString": "contract IERC721"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 63,
            "mutability": "mutable",
            "name": "s_players",
            "nameLocation": "1749:9:13",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "1723:35:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 61,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1723:15:13",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 62,
              "nodeType": "ArrayTypeName",
              "src": "1723:17:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 65,
            "mutability": "immutable",
            "name": "i_initialNFTValue",
            "nameLocation": "1824:17:13",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "1798:43:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 64,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1798:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 68,
            "mutability": "mutable",
            "name": "ethUsdPriceFeed",
            "nameLocation": "1875:15:13",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "1844:46:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$1887",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 67,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 66,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1887,
                "src": "1844:21:13"
              },
              "referencedDeclaration": 1887,
              "src": "1844:21:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$1887",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 70,
            "mutability": "mutable",
            "name": "s_recentWinner",
            "nameLocation": "1917:14:13",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "1893:38:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 69,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1893:15:13",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 73,
            "mutability": "mutable",
            "name": "s_lotteryState",
            "nameLocation": "1956:14:13",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "1934:36:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
              "typeString": "enum Lottery.LOTTERY_STATE"
            },
            "typeName": {
              "id": 72,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 71,
                "name": "LOTTERY_STATE",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35,
                "src": "1934:13:13"
              },
              "referencedDeclaration": 35,
              "src": "1934:13:13",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                "typeString": "enum Lottery.LOTTERY_STATE"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 75,
            "mutability": "mutable",
            "name": "s_lastTimeStamp",
            "nameLocation": "1989:15:13",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "1973:31:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 74,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1973:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 77,
            "mutability": "immutable",
            "name": "i_interval",
            "nameLocation": "2033:10:13",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "2007:36:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2007:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 80,
            "mutability": "mutable",
            "name": "s_tempToken",
            "nameLocation": "2050:11:13",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "2046:15:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_nft_$42_storage",
              "typeString": "struct Lottery.nft"
            },
            "typeName": {
              "id": 79,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78,
                "name": "nft",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42,
                "src": "2046:3:13"
              },
              "referencedDeclaration": 42,
              "src": "2046:3:13",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_nft_$42_storage_ptr",
                "typeString": "struct Lottery.nft"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "a97e1f28",
            "id": 84,
            "mutability": "mutable",
            "name": "s_tresury",
            "nameLocation": "2227:9:13",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "2214:22:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_nft_$42_storage_$dyn_storage",
              "typeString": "struct Lottery.nft[]"
            },
            "typeName": {
              "baseType": {
                "id": 82,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 81,
                  "name": "nft",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42,
                  "src": "2214:3:13"
                },
                "referencedDeclaration": 42,
                "src": "2214:3:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_nft_$42_storage_ptr",
                  "typeString": "struct Lottery.nft"
                }
              },
              "id": 83,
              "nodeType": "ArrayTypeName",
              "src": "2214:5:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_nft_$42_storage_$dyn_storage_ptr",
                "typeString": "struct Lottery.nft[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 89,
            "mutability": "mutable",
            "name": "indexToNFT",
            "nameLocation": "2329:10:13",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "2297:42:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_nft_$42_storage_$",
              "typeString": "mapping(bytes32 => struct Lottery.nft)"
            },
            "typeName": {
              "id": 88,
              "keyType": {
                "id": 85,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2305:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2297:23:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_nft_$42_storage_$",
                "typeString": "mapping(bytes32 => struct Lottery.nft)"
              },
              "valueType": {
                "id": 87,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 86,
                  "name": "nft",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42,
                  "src": "2316:3:13"
                },
                "referencedDeclaration": 42,
                "src": "2316:3:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_nft_$42_storage_ptr",
                  "typeString": "struct Lottery.nft"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 97,
            "name": "LotteryEnter",
            "nameLocation": "2371:12:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "player",
                  "nameLocation": "2403:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "2387:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2387:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "collectionAddress",
                  "nameLocation": "2429:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "2413:33:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2413:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2466:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "2450:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2450:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2383:93:13"
            },
            "src": "2365:112:13"
          },
          {
            "anonymous": false,
            "id": 101,
            "name": "requestedLotteryWinner",
            "nameLocation": "2485:22:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "2516:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "2508:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2508:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2507:19:13"
            },
            "src": "2479:48:13"
          },
          {
            "anonymous": false,
            "id": 105,
            "name": "winnerPicked",
            "nameLocation": "2535:12:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "winner",
                  "nameLocation": "2564:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "2548:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2547:24:13"
            },
            "src": "2529:43:13"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "2805:636:13",
              "statements": [
                {
                  "expression": {
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 123,
                      "name": "i_initialNFTValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "2809:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_20000000000000000000_by_1",
                        "typeString": "int_const 20000000000000000000"
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3230",
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2829:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2835:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2839:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "2835:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          }
                        ],
                        "id": 128,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2834:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "2829:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_20000000000000000000_by_1",
                        "typeString": "int_const 20000000000000000000"
                      }
                    },
                    "src": "2809:33:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2809:33:13"
                },
                {
                  "expression": {
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 132,
                      "name": "ethUsdPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "2904:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1887",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 134,
                          "name": "_priceFeedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "2944:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 133,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1887,
                        "src": "2922:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1887_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2922:40:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1887",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "2904:58:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1887",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "2904:58:13"
                },
                {
                  "expression": {
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 138,
                      "name": "i_vrfCoordinator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "3004:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$1987",
                        "typeString": "contract VRFCoordinatorV2Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 140,
                          "name": "_vrfCoordinatorV2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "3049:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 139,
                        "name": "VRFCoordinatorV2Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1987,
                        "src": "3023:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_VRFCoordinatorV2Interface_$1987_$",
                          "typeString": "type(contract VRFCoordinatorV2Interface)"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3023:44:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$1987",
                        "typeString": "contract VRFCoordinatorV2Interface"
                      }
                    },
                    "src": "3004:63:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$1987",
                      "typeString": "contract VRFCoordinatorV2Interface"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "3004:63:13"
                },
                {
                  "expression": {
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 144,
                      "name": "s_lotteryState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "3102:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 145,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "3119:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$35_$",
                          "typeString": "type(enum Lottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "3119:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "src": "3102:37:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                      "typeString": "enum Lottery.LOTTERY_STATE"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "3102:37:13"
                },
                {
                  "expression": {
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 149,
                      "name": "i_gasLane",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "3143:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 150,
                      "name": "_gasLane",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "3155:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3143:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "3143:20:13"
                },
                {
                  "expression": {
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 153,
                      "name": "i_subscriptionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "3167:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 154,
                      "name": "_subscriptionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "3186:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3167:34:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "3167:34:13"
                },
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 157,
                      "name": "i_callbackGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "3205:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 158,
                      "name": "_callbackGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "3226:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3205:38:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "3205:38:13"
                },
                {
                  "expression": {
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 161,
                      "name": "s_lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "3247:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 162,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3265:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3265:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3247:33:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "3247:33:13"
                },
                {
                  "expression": {
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 166,
                      "name": "i_interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "3361:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 167,
                      "name": "_interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "3374:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3361:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "3361:22:13"
                }
              ]
            },
            "id": 171,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 120,
                    "name": "_vrfCoordinatorV2",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 109,
                    "src": "2786:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 121,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 119,
                  "name": "VRFConsumerBaseV2",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1841,
                  "src": "2768:17:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "2768:36:13"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "mutability": "mutable",
                  "name": "_priceFeedAddress",
                  "nameLocation": "2623:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "2615:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2615:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "_vrfCoordinatorV2",
                  "nameLocation": "2652:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "2644:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2644:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "_gasLane",
                  "nameLocation": "2681:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "2673:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2673:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "_subscriptionId",
                  "nameLocation": "2700:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "2693:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2693:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "_callbackGasLimit",
                  "nameLocation": "2726:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "2719:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2719:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "_interval",
                  "nameLocation": "2755:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "2747:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2747:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2611:156:13"
            },
            "returnParameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2805:0:13"
            },
            "scope": 671,
            "src": "2600:841:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2290
            ],
            "body": {
              "id": 232,
              "nodeType": "Block",
              "src": "3944:371:13",
              "statements": [
                {
                  "assignments": [
                    183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 183,
                      "mutability": "mutable",
                      "name": "isOpen",
                      "nameLocation": "3953:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 232,
                      "src": "3948:11:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 182,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3948:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 189,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                          "typeString": "enum Lottery.LOTTERY_STATE"
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 184,
                          "name": "s_lotteryState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "3963:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 185,
                            "name": "LOTTERY_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "3981:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$35_$",
                              "typeString": "type(enum Lottery.LOTTERY_STATE)"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32,
                          "src": "3981:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "src": "3963:36:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 188,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3962:38:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3948:52:13"
                },
                {
                  "assignments": [
                    191
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 191,
                      "mutability": "mutable",
                      "name": "timePassed",
                      "nameLocation": "4009:10:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 232,
                      "src": "4004:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 190,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4004:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 200,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 192,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "4024:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "4024:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 194,
                                "name": "s_lastTimeStamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75,
                                "src": "4042:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4024:33:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 196,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4023:35:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 197,
                          "name": "i_interval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "4062:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4023:49:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 199,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4022:51:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4004:69:13"
                },
                {
                  "assignments": [
                    202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 202,
                      "mutability": "mutable",
                      "name": "hasPlayers",
                      "nameLocation": "4082:10:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 232,
                      "src": "4077:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 201,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4077:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 208,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 203,
                            "name": "s_players",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "4096:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                              "typeString": "address payable[] storage ref"
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4096:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4115:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4096:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 207,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4095:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4077:40:13"
                },
                {
                  "assignments": [
                    210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 210,
                      "mutability": "mutable",
                      "name": "hasBalance",
                      "nameLocation": "4126:10:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 232,
                      "src": "4121:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 209,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4121:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 216,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 211,
                            "name": "s_tresury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "4140:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_nft_$42_storage_$dyn_storage",
                              "typeString": "struct Lottery.nft storage ref[] storage ref"
                            }
                          },
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4140:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4159:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4140:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 215,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4139:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4121:40:13"
                },
                {
                  "expression": {
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 217,
                      "name": "upKeepNeeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "4215:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 218,
                                "name": "isOpen",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 183,
                                "src": "4231:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 219,
                                "name": "timePassed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 191,
                                "src": "4241:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4231:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "id": 221,
                              "name": "hasPlayers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 202,
                              "src": "4255:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "4231:34:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 223,
                            "name": "hasBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 210,
                            "src": "4269:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4231:48:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 225,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4230:50:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4215:65:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "4215:65:13"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 228,
                        "name": "upKeepNeeded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "4292:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "3078",
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4306:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                          "typeString": "literal_string \"0x\""
                        },
                        "value": "0x"
                      }
                    ],
                    "id": 230,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4291:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837_$",
                      "typeString": "tuple(bool,literal_string \"0x\")"
                    }
                  },
                  "functionReturnParameters": 181,
                  "id": 231,
                  "nodeType": "Return",
                  "src": "4284:27:13"
                }
              ]
            },
            "documentation": {
              "id": 172,
              "nodeType": "StructuredDocumentation",
              "src": "3444:346:13",
              "text": " dev: This is the function that the chainlink keeper will look to return true to update state\n The following should be true in order to return true:\n 1. The time Interval should have passed\n 2. The Lottery should have at least one NFT added to treasury and 1 player\n 3. The Chainlink subscription is funded with Link Token"
            },
            "functionSelector": "6e04ff0d",
            "id": 233,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "3801:11:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 176,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3864:8:13"
            },
            "parameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "3816:12:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3816:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3812:33:13"
            },
            "returnParameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "upKeepNeeded",
                  "nameLocation": "3893:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "3888:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3888:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "3910:12:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3910:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3883:59:13"
            },
            "scope": 671,
            "src": "3792:523:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2296
            ],
            "body": {
              "id": 279,
              "nodeType": "Block",
              "src": "4521:474:13",
              "statements": [
                {
                  "assignments": [
                    241,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 241,
                      "mutability": "mutable",
                      "name": "upKeepNeeded",
                      "nameLocation": "4531:12:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 279,
                      "src": "4526:17:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 240,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4526:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 248,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4571:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "4561:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 243,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4565:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4561:12:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 242,
                      "name": "checkUpkeep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "4549:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4549:25:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4525:49:13"
                },
                {
                  "condition": {
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4582:13:13",
                    "subExpression": {
                      "id": 249,
                      "name": "upKeepNeeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 241,
                      "src": "4583:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 263,
                  "nodeType": "IfStatement",
                  "src": "4578:209:13",
                  "trueBody": {
                    "id": 262,
                    "nodeType": "Block",
                    "src": "4597:190:13",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 252,
                                "name": "s_tresury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84,
                                "src": "4710:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_nft_$42_storage_$dyn_storage",
                                  "typeString": "struct Lottery.nft storage ref[] storage ref"
                                }
                              },
                              "id": 253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4710:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 254,
                                "name": "s_players",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "4732:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                  "typeString": "address payable[] storage ref"
                                }
                              },
                              "id": 255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4732:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 258,
                                  "name": "s_lotteryState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73,
                                  "src": "4762:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                                    "typeString": "enum Lottery.LOTTERY_STATE"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                                    "typeString": "enum Lottery.LOTTERY_STATE"
                                  }
                                ],
                                "id": 257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4754:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 256,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4754:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4754:23:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 251,
                            "name": "Lottery__UpKeepNotNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "4680:24:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256) pure"
                            }
                          },
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4680:102:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 261,
                        "nodeType": "RevertStatement",
                        "src": "4673:109:13"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 265,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "4799:9:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 279,
                      "src": "4791:17:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 264,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4791:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 274,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 268,
                        "name": "i_gasLane",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "4851:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 269,
                        "name": "i_subscriptionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "4865:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 270,
                        "name": "REQUEST_CONFIRMATIONS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "4886:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 271,
                        "name": "i_callbackGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "4912:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 272,
                        "name": "NUM_WORDS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "4935:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 266,
                        "name": "i_vrfCoordinator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "4811:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$1987",
                          "typeString": "contract VRFCoordinatorV2Interface"
                        }
                      },
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestRandomWords",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1920,
                      "src": "4811:35:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4811:137:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4791:157:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 276,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "4981:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 275,
                      "name": "requestedLotteryWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "4958:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4958:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 278,
                  "nodeType": "EmitStatement",
                  "src": "4953:38:13"
                }
              ]
            },
            "documentation": {
              "id": 234,
              "nodeType": "StructuredDocumentation",
              "src": "4318:121:13",
              "text": " dev: This the function that will perform the upkeep based upon interval and is acting as endLottery function"
            },
            "functionSelector": "4585e33b",
            "id": 280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nameLocation": "4450:13:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 238,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4512:8:13"
            },
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "4467:14:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4467:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4463:39:13"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4521:0:13"
            },
            "scope": 671,
            "src": "4441:554:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 390,
              "nodeType": "Block",
              "src": "5086:1197:13",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                      "typeString": "enum Lottery.LOTTERY_STATE"
                    },
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 287,
                      "name": "s_lotteryState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "5094:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 288,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "5112:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$35_$",
                          "typeString": "type(enum Lottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "5112:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "src": "5094:38:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 295,
                  "nodeType": "IfStatement",
                  "src": "5090:86:13",
                  "trueBody": {
                    "id": 294,
                    "nodeType": "Block",
                    "src": "5134:42:13",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 291,
                            "name": "Lottery__CantJoinClosed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "5146:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5146:25:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 293,
                        "nodeType": "RevertStatement",
                        "src": "5139:32:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 296,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "5315:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$1763",
                        "typeString": "contract IERC721"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 298,
                          "name": "_collectionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "5331:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 297,
                        "name": "IERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1763,
                        "src": "5323:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC721_$1763_$",
                          "typeString": "type(contract IERC721)"
                        }
                      },
                      "id": 299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5323:27:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$1763",
                        "typeString": "contract IERC721"
                      }
                    },
                    "src": "5315:35:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$1763",
                      "typeString": "contract IERC721"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "5315:35:13"
                },
                {
                  "expression": {
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 302,
                        "name": "s_tempToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "5407:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_nft_$42_storage",
                          "typeString": "struct Lottery.nft storage ref"
                        }
                      },
                      "id": 304,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_tokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "5407:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 305,
                      "name": "_collectionAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "5435:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5407:46:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "5407:46:13"
                },
                {
                  "expression": {
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 308,
                        "name": "s_tempToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "5457:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_nft_$42_storage",
                          "typeString": "struct Lottery.nft storage ref"
                        }
                      },
                      "id": 310,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "5457:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 311,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "5480:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5457:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "5457:31:13"
                },
                {
                  "expression": {
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 314,
                        "name": "s_tempToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "5492:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_nft_$42_storage",
                          "typeString": "struct Lottery.nft storage ref"
                        }
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "5492:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 317,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5513:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5513:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5492:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "5492:31:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 321,
                        "name": "s_tresury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "5570:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_nft_$42_storage_$dyn_storage",
                          "typeString": "struct Lottery.nft storage ref[] storage ref"
                        }
                      },
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5570:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5590:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5570:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 353,
                    "nodeType": "Block",
                    "src": "5737:278:13",
                    "statements": [
                      {
                        "condition": {
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5822:93:13",
                          "subExpression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 336,
                                  "name": "getNFTValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 576,
                                  "src": "5839:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                    "typeString": "function () pure returns (uint256)"
                                  }
                                },
                                "id": 337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5839:13:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3835",
                                  "id": 338,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5859:2:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_85_by_1",
                                    "typeString": "int_const 85"
                                  },
                                  "value": "85"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 339,
                                    "name": "getTreasuryAvg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 548,
                                    "src": "5864:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                                      "typeString": "function () returns (uint256)"
                                    }
                                  },
                                  "id": 340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5864:16:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5859:21:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 345,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "313135",
                                  "id": 342,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5887:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_115_by_1",
                                    "typeString": "int_const 115"
                                  },
                                  "value": "115"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 343,
                                    "name": "getTreasuryAvg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 548,
                                    "src": "5893:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                                      "typeString": "function () returns (uint256)"
                                    }
                                  },
                                  "id": 344,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5893:16:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5887:22:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 335,
                              "name": "inBetween",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 417,
                              "src": "5823:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (bool)"
                              }
                            },
                            "id": 346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5823:92:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 352,
                        "nodeType": "IfStatement",
                        "src": "5813:154:13",
                        "trueBody": {
                          "id": 351,
                          "nodeType": "Block",
                          "src": "5921:46:13",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 348,
                                  "name": "Lottery__NFTValueNotMatch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25,
                                  "src": "5934:25:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 349,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5934:27:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 350,
                              "nodeType": "RevertStatement",
                              "src": "5927:34:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 354,
                  "nodeType": "IfStatement",
                  "src": "5566:449:13",
                  "trueBody": {
                    "id": 334,
                    "nodeType": "Block",
                    "src": "5593:93:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 325,
                              "name": "getNFTValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 576,
                              "src": "5602:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                "typeString": "function () pure returns (uint256)"
                              }
                            },
                            "id": 326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5602:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 327,
                            "name": "i_initialNFTValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "5619:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5602:34:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 333,
                        "nodeType": "IfStatement",
                        "src": "5598:84:13",
                        "trueBody": {
                          "id": 332,
                          "nodeType": "Block",
                          "src": "5638:44:13",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 329,
                                  "name": "Lottery__NftValueTooLow",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11,
                                  "src": "5651:23:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5651:25:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 331,
                              "nodeType": "RevertStatement",
                              "src": "5644:32:13"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 358,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6037:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6037:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 362,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6057:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lottery_$671",
                              "typeString": "contract Lottery"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lottery_$671",
                              "typeString": "contract Lottery"
                            }
                          ],
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6049:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 360,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6049:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6049:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 364,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "6064:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 355,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "6018:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$1763",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1728,
                      "src": "6018:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6018:55:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "6018:55:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 370,
                        "name": "s_tempToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "6092:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_nft_$42_storage",
                          "typeString": "struct Lottery.nft storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_nft_$42_storage",
                          "typeString": "struct Lottery.nft storage ref"
                        }
                      ],
                      "expression": {
                        "id": 367,
                        "name": "s_tresury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "6077:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_nft_$42_storage_$dyn_storage",
                          "typeString": "struct Lottery.nft storage ref[] storage ref"
                        }
                      },
                      "id": 369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6077:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_nft_$42_storage_$dyn_storage_ptr_$_t_struct$_nft_$42_storage_$returns$__$bound_to$_t_array$_t_struct$_nft_$42_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Lottery.nft storage ref[] storage pointer,struct Lottery.nft storage ref)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6077:27:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "6077:27:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 378,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6160:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6160:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6152:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 376,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6152:8:13",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6152:19:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 373,
                        "name": "s_players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "6137:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6137:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
                        "typeString": "function (address payable[] storage pointer,address payable)"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6137:35:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "6137:35:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 384,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6238:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6238:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 386,
                        "name": "_collectionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "6250:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 387,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "6270:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 383,
                      "name": "LotteryEnter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "6225:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6225:54:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "EmitStatement",
                  "src": "6220:59:13"
                }
              ]
            },
            "functionSelector": "194b78f8",
            "id": 391,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enterLottery",
            "nameLocation": "5007:12:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "_collectionAddress",
                  "nameLocation": "5028:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 391,
                  "src": "5020:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5020:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5056:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 391,
                  "src": "5048:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5048:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5019:46:13"
            },
            "returnParameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5086:0:13"
            },
            "scope": 671,
            "src": "4998:1285:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 416,
              "nodeType": "Block",
              "src": "6384:65:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 403,
                          "name": "min",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 395,
                          "src": "6396:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 404,
                          "name": "max",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "6402:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6396:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6388:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6388:18:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "6388:18:13"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 408,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "6417:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 409,
                        "name": "min",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "6426:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6417:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 411,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "6433:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 412,
                        "name": "max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "6442:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6433:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6417:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 401,
                  "id": 415,
                  "nodeType": "Return",
                  "src": "6410:35:13"
                }
              ]
            },
            "id": 417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "inBetween",
            "nameLocation": "6295:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "6316:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "6308:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6308:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 395,
                  "mutability": "mutable",
                  "name": "min",
                  "nameLocation": "6333:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "6325:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6325:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "max",
                  "nameLocation": "6348:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "6340:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6340:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6304:50:13"
            },
            "returnParameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 400,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "6378:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6378:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6377:6:13"
            },
            "scope": 671,
            "src": "6286:163:13",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 428,
              "nodeType": "Block",
              "src": "6630:2:13",
              "statements": []
            },
            "functionSelector": "e9d513e4",
            "id": 429,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 426,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 425,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1566,
                  "src": "6620:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "6620:9:13"
              }
            ],
            "name": "setNFTValue",
            "nameLocation": "6530:11:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "_collectionAddress",
                  "nameLocation": "6553:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "6545:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6545:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 421,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6583:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "6575:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6575:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "6603:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "6595:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6595:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6541:71:13"
            },
            "returnParameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6630:0:13"
            },
            "scope": 671,
            "src": "6521:111:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1814
            ],
            "body": {
              "id": 511,
              "nodeType": "Block",
              "src": "6743:731:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                          "typeString": "enum Lottery.LOTTERY_STATE"
                        },
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 439,
                          "name": "s_lotteryState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "6759:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 440,
                            "name": "LOTTERY_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "6777:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$35_$",
                              "typeString": "type(enum Lottery.LOTTERY_STATE)"
                            }
                          },
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CALCULATING_WINNER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34,
                          "src": "6777:32:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "src": "6759:50:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74207468657265207965742121",
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6814:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b118507b5462306ec67e5ec980dea7d3d0915cb4138593e3a6ce764e8053fa99",
                          "typeString": "literal_string \"Not there yet!!\""
                        },
                        "value": "Not there yet!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b118507b5462306ec67e5ec980dea7d3d0915cb4138593e3a6ce764e8053fa99",
                          "typeString": "literal_string \"Not there yet!!\""
                        }
                      ],
                      "id": 438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6747:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6747:88:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "6747:88:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 447,
                            "name": "_randomWords",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 434,
                            "src": "6847:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6847:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6869:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6847:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52616e646f6d206e6f7420666f756e6421",
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6872:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6781fde8beae735bb4788b322b9873324742fed003004c3fa98fa9ebefb897e",
                          "typeString": "literal_string \"Random not found!\""
                        },
                        "value": "Random not found!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6781fde8beae735bb4788b322b9873324742fed003004c3fa98fa9ebefb897e",
                          "typeString": "literal_string \"Random not found!\""
                        }
                      ],
                      "id": 446,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6839:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6839:53:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "6839:53:13"
                },
                {
                  "assignments": [
                    455
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 455,
                      "mutability": "mutable",
                      "name": "indexOfWinner",
                      "nameLocation": "6904:13:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 511,
                      "src": "6896:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 454,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6896:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 462,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 456,
                        "name": "_randomWords",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "6920:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 458,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6933:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6920:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "expression": {
                        "id": 459,
                        "name": "s_players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "6938:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6938:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6920:34:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6896:58:13"
                },
                {
                  "expression": {
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 463,
                      "name": "s_recentWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "6958:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 464,
                        "name": "s_players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "6975:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 466,
                      "indexExpression": {
                        "id": 465,
                        "name": "indexOfWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "6985:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6975:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6958:41:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "6958:41:13"
                },
                {
                  "expression": {
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 469,
                      "name": "s_lotteryState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "7003:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 470,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "7020:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$35_$",
                          "typeString": "type(enum Lottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "7020:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "src": "7003:35:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                      "typeString": "enum Lottery.LOTTERY_STATE"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "7003:35:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 475,
                        "name": "s_recentWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "7060:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 474,
                      "name": "winnerPicked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "7047:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7047:28:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 477,
                  "nodeType": "EmitStatement",
                  "src": "7042:33:13"
                },
                {
                  "assignments": [
                    479,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 479,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "7085:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 511,
                      "src": "7080:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 478,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7080:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 490,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7154:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 480,
                          "name": "s_recentWinner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "7098:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "7098:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 484,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7134:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Lottery_$671",
                                  "typeString": "contract Lottery"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Lottery_$671",
                                  "typeString": "contract Lottery"
                                }
                              ],
                              "id": 483,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7126:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 482,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7126:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7126:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "7126:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "7098:51:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7098:62:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7079:81:13"
                },
                {
                  "condition": {
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7223:8:13",
                    "subExpression": {
                      "id": 491,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 479,
                      "src": "7224:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 497,
                  "nodeType": "IfStatement",
                  "src": "7219:64:13",
                  "trueBody": {
                    "id": 496,
                    "nodeType": "Block",
                    "src": "7233:50:13",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 493,
                            "name": "Lottery__transferTreasuryFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "7245:31:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7245:33:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 495,
                        "nodeType": "RevertStatement",
                        "src": "7238:40:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 498,
                      "name": "s_players",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "7312:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7346:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "7324:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address payable[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 499,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7328:15:13",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 500,
                          "nodeType": "ArrayTypeName",
                          "src": "7328:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                            "typeString": "address payable[]"
                          }
                        }
                      },
                      "id": 503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7324:24:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                        "typeString": "address payable[] memory"
                      }
                    },
                    "src": "7312:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                      "typeString": "address payable[] storage ref"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "7312:36:13"
                },
                {
                  "expression": {
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 506,
                      "name": "s_lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "7413:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 507,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7431:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7431:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7413:33:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 510,
                  "nodeType": "ExpressionStatement",
                  "src": "7413:33:13"
                }
              ]
            },
            "id": 512,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomWords",
            "nameLocation": "6644:18:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 436,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6734:8:13"
            },
            "parameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 431,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "6666:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6666:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 434,
                  "mutability": "mutable",
                  "name": "_randomWords",
                  "nameLocation": "6709:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "6692:29:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 432,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6692:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 433,
                    "nodeType": "ArrayTypeName",
                    "src": "6692:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6662:62:13"
            },
            "returnParameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6743:0:13"
            },
            "scope": 671,
            "src": "6635:839:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 547,
              "nodeType": "Block",
              "src": "7565:222:13",
              "statements": [
                {
                  "assignments": [
                    518
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 518,
                      "mutability": "mutable",
                      "name": "avg",
                      "nameLocation": "7577:3:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 547,
                      "src": "7569:11:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 517,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7569:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 520,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7583:1:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7569:15:13"
                },
                {
                  "body": {
                    "id": 543,
                    "nodeType": "Block",
                    "src": "7694:76:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 532,
                            "name": "s_tempToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "7699:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_nft_$42_storage",
                              "typeString": "struct Lottery.nft storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 533,
                              "name": "s_tresury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84,
                              "src": "7713:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_nft_$42_storage_$dyn_storage",
                                "typeString": "struct Lottery.nft storage ref[] storage ref"
                              }
                            },
                            "id": 535,
                            "indexExpression": {
                              "id": 534,
                              "name": "nftTreasuryIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "7723:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7713:27:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_nft_$42_storage",
                              "typeString": "struct Lottery.nft storage ref"
                            }
                          },
                          "src": "7699:41:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_nft_$42_storage",
                            "typeString": "struct Lottery.nft storage ref"
                          }
                        },
                        "id": 537,
                        "nodeType": "ExpressionStatement",
                        "src": "7699:41:13"
                      },
                      {
                        "expression": {
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 538,
                            "name": "avg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 518,
                            "src": "7745:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 539,
                              "name": "getNFTValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 576,
                              "src": "7752:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                "typeString": "function () pure returns (uint256)"
                              }
                            },
                            "id": 540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7752:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7745:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 542,
                        "nodeType": "ExpressionStatement",
                        "src": "7745:20:13"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 525,
                      "name": "nftTreasuryIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 522,
                      "src": "7630:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 526,
                        "name": "s_tresury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "7650:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_nft_$42_storage_$dyn_storage",
                          "typeString": "struct Lottery.nft storage ref[] storage ref"
                        }
                      },
                      "id": 527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7650:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7630:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 544,
                  "initializationExpression": {
                    "assignments": [
                      522
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 522,
                        "mutability": "mutable",
                        "name": "nftTreasuryIndex",
                        "nameLocation": "7605:16:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 544,
                        "src": "7597:24:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 521,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7597:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 524,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7624:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7597:28:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7671:18:13",
                      "subExpression": {
                        "id": 529,
                        "name": "nftTreasuryIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "7671:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 531,
                    "nodeType": "ExpressionStatement",
                    "src": "7671:18:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "7588:182:13"
                },
                {
                  "expression": {
                    "id": 545,
                    "name": "avg",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 518,
                    "src": "7780:3:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 516,
                  "id": 546,
                  "nodeType": "Return",
                  "src": "7773:10:13"
                }
              ]
            },
            "functionSelector": "5d659408",
            "id": 548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTreasuryAvg",
            "nameLocation": "7523:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7537:2:13"
            },
            "returnParameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 515,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "7556:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7556:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7555:9:13"
            },
            "scope": 671,
            "src": "7514:273:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 559,
              "nodeType": "Block",
              "src": "7854:31:13",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 555,
                      "name": "s_players",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "7865:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "id": 557,
                    "indexExpression": {
                      "id": 556,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "7875:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7865:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 554,
                  "id": 558,
                  "nodeType": "Return",
                  "src": "7858:23:13"
                }
              ]
            },
            "functionSelector": "e55ae4e8",
            "id": 560,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPlayer",
            "nameLocation": "7799:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 550,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "7817:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "7809:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7809:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7808:15:13"
            },
            "returnParameters": {
              "id": 554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 553,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "7845:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7845:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7844:9:13"
            },
            "scope": 671,
            "src": "7790:95:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 567,
              "nodeType": "Block",
              "src": "7946:29:13",
              "statements": [
                {
                  "expression": {
                    "id": 565,
                    "name": "s_recentWinner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 70,
                    "src": "7957:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 564,
                  "id": 566,
                  "nodeType": "Return",
                  "src": "7950:21:13"
                }
              ]
            },
            "functionSelector": "b7a832af",
            "id": 568,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRecenetWinner",
            "nameLocation": "7897:16:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7913:2:13"
            },
            "returnParameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 563,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "7937:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7937:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7936:9:13"
            },
            "scope": 671,
            "src": "7888:87:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 575,
              "nodeType": "Block",
              "src": "8066:16:13",
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8077:1:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 572,
                  "id": 574,
                  "nodeType": "Return",
                  "src": "8070:8:13"
                }
              ]
            },
            "functionSelector": "7a2d1e21",
            "id": 576,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNFTValue",
            "nameLocation": "8022:11:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8033:2:13"
            },
            "returnParameters": {
              "id": 572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 571,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 576,
                  "src": "8057:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8057:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8056:9:13"
            },
            "scope": 671,
            "src": "8013:69:13",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 591,
              "nodeType": "Block",
              "src": "8145:65:13",
              "statements": [
                {
                  "assignments": [
                    582
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 582,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "8157:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 591,
                      "src": "8149:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 581,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8149:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 588,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 585,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "8175:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Lottery_$671",
                            "typeString": "contract Lottery"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Lottery_$671",
                            "typeString": "contract Lottery"
                          }
                        ],
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8167:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 583,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8167:7:13",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8167:13:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "8167:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8149:39:13"
                },
                {
                  "expression": {
                    "id": 589,
                    "name": "balance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 582,
                    "src": "8199:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 580,
                  "id": 590,
                  "nodeType": "Return",
                  "src": "8192:14:13"
                }
              ]
            },
            "functionSelector": "24c45b1e",
            "id": 592,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLotteryTreasury",
            "nameLocation": "8094:18:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8112:2:13"
            },
            "returnParameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 579,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 592,
                  "src": "8136:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8136:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8135:9:13"
            },
            "scope": 671,
            "src": "8085:125:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 600,
              "nodeType": "Block",
              "src": "8275:31:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 597,
                      "name": "s_players",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "8286:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "8286:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 596,
                  "id": 599,
                  "nodeType": "Return",
                  "src": "8279:23:13"
                }
              ]
            },
            "functionSelector": "5481bbcd",
            "id": 601,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumOfParticipants",
            "nameLocation": "8222:20:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8242:2:13"
            },
            "returnParameters": {
              "id": 596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 595,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 601,
                  "src": "8266:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 594,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8266:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8265:9:13"
            },
            "scope": 671,
            "src": "8213:93:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 636,
              "nodeType": "Block",
              "src": "8365:359:13",
              "statements": [
                {
                  "assignments": [
                    null,
                    607,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 607,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "8379:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 636,
                      "src": "8372:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 606,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8372:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 611,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 608,
                        "name": "ethUsdPriceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "8394:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1887",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1886,
                      "src": "8394:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8394:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8369:58:13"
                },
                {
                  "assignments": [
                    613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 613,
                      "mutability": "mutable",
                      "name": "adjustedPrice",
                      "nameLocation": "8484:13:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 636,
                      "src": "8476:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 612,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8476:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 622,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 616,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 607,
                          "src": "8508:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8500:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 614,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8500:7:13",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8500:14:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      },
                      "id": 620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8517:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8521:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "8517:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      }
                    },
                    "src": "8500:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8476:47:13"
                },
                {
                  "assignments": [
                    624
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 624,
                      "mutability": "mutable",
                      "name": "costToEnter",
                      "nameLocation": "8591:11:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 636,
                      "src": "8583:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 623,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8583:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 633,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 625,
                            "name": "i_initialNFTValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "8606:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8626:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8630:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "8626:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "8606:26:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 630,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8605:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 631,
                      "name": "adjustedPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 613,
                      "src": "8636:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8605:44:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8583:66:13"
                },
                {
                  "expression": {
                    "id": 634,
                    "name": "costToEnter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 624,
                    "src": "8709:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 605,
                  "id": 635,
                  "nodeType": "Return",
                  "src": "8702:18:13"
                }
              ]
            },
            "functionSelector": "09bc33a7",
            "id": 637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntranceFee",
            "nameLocation": "8318:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8332:2:13"
            },
            "returnParameters": {
              "id": 605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 604,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "8356:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8356:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8355:9:13"
            },
            "scope": 671,
            "src": "8309:415:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 645,
              "nodeType": "Block",
              "src": "8790:29:13",
              "statements": [
                {
                  "expression": {
                    "id": 643,
                    "name": "s_lotteryState",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73,
                    "src": "8801:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                      "typeString": "enum Lottery.LOTTERY_STATE"
                    }
                  },
                  "functionReturnParameters": 642,
                  "id": 644,
                  "nodeType": "Return",
                  "src": "8794:21:13"
                }
              ]
            },
            "functionSelector": "6b68c03c",
            "id": 646,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLotteryState",
            "nameLocation": "8736:15:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8751:2:13"
            },
            "returnParameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 641,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "8775:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                    "typeString": "enum Lottery.LOTTERY_STATE"
                  },
                  "typeName": {
                    "id": 640,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 639,
                      "name": "LOTTERY_STATE",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35,
                      "src": "8775:13:13"
                    },
                    "referencedDeclaration": 35,
                    "src": "8775:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$35",
                      "typeString": "enum Lottery.LOTTERY_STATE"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8774:15:13"
            },
            "scope": 671,
            "src": "8727:92:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 653,
              "nodeType": "Block",
              "src": "8875:24:13",
              "statements": [
                {
                  "expression": {
                    "id": 651,
                    "name": "NUM_WORDS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54,
                    "src": "8886:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 650,
                  "id": 652,
                  "nodeType": "Return",
                  "src": "8879:16:13"
                }
              ]
            },
            "functionSelector": "53a2c19a",
            "id": 654,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumWords",
            "nameLocation": "8831:11:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8842:2:13"
            },
            "returnParameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 649,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 654,
                  "src": "8866:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8866:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8865:9:13"
            },
            "scope": 671,
            "src": "8822:77:13",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 661,
              "nodeType": "Block",
              "src": "8967:36:13",
              "statements": [
                {
                  "expression": {
                    "id": 659,
                    "name": "REQUEST_CONFIRMATIONS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49,
                    "src": "8978:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 658,
                  "id": 660,
                  "nodeType": "Return",
                  "src": "8971:28:13"
                }
              ]
            },
            "functionSelector": "5f1b0fd8",
            "id": 662,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRequestConfirmations",
            "nameLocation": "8911:23:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8934:2:13"
            },
            "returnParameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 662,
                  "src": "8958:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8958:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8957:9:13"
            },
            "scope": 671,
            "src": "8902:101:13",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 669,
              "nodeType": "Block",
              "src": "9066:30:13",
              "statements": [
                {
                  "expression": {
                    "id": 667,
                    "name": "s_lastTimeStamp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75,
                    "src": "9077:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 666,
                  "id": 668,
                  "nodeType": "Return",
                  "src": "9070:22:13"
                }
              ]
            },
            "functionSelector": "320229eb",
            "id": 670,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestTimeStamp",
            "nameLocation": "9015:18:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9033:2:13"
            },
            "returnParameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 665,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "9057:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9057:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9056:9:13"
            },
            "scope": 671,
            "src": "9006:90:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 672,
        "src": "1025:8073:13",
        "usedErrors": [
          11,
          13,
          15,
          23,
          25,
          1792
        ]
      }
    ],
    "src": "33:9066:13"
  },
  "bytecode": "6101606040523480156200001257600080fd5b50604051620015b0380380620015b083398101604081905262000035916200012a565b6001600160a01b0385166080526200004d33620000bd565b6801158e460913d0000061012052600380546001600160a01b0319166001600160a01b0397881617905593909416610100526004805460ff60a01b1916600160a01b17905560a0919091526001600160401b031660c05263ffffffff90911660e0524260055561014052620001b4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200012557600080fd5b919050565b60008060008060008060c087890312156200014457600080fd5b6200014f876200010d565b95506200015f602088016200010d565b6040880151606089015191965094506001600160401b03811681146200018457600080fd5b608088015190935063ffffffff811681146200019f57600080fd5b8092505060a087015190509295509295509295565b60805160a05160c05160e0516101005161012051610140516113936200021d6000396000610a1201526000818161041c01526104de01526000610899015260006108680152600061083501526000610806015260008181610703015261074501526113936000f3fe60806040526004361061011f5760003560e01c80636b68c03c116100a0578063a97e1f2811610064578063a97e1f28146102b7578063b7a832af14610301578063e55ae4e81461031f578063e9d513e41461033f578063f2fde38b1461035f57600080fd5b80636b68c03c1461021b5780636e04ff0d14610242578063715018a6146102705780637a2d1e21146101c95780638da5cb5b1461028557600080fd5b80634585e33b116100e75780634585e33b146101a957806353a2c19a146101c95780635481bbcd146101dd5780635d659408146101f25780635f1b0fd81461020757600080fd5b806309bc33a714610124578063194b78f81461014c5780631fe543e31461016157806324c45b1e14610181578063320229eb14610194575b600080fd5b34801561013057600080fd5b5061013961037f565b6040519081526020015b60405180910390f35b61015f61015a366004610ed2565b61045b565b005b34801561016d57600080fd5b5061015f61017c366004610f43565b6106f8565b34801561018d57600080fd5b5047610139565b3480156101a057600080fd5b50600554610139565b3480156101b557600080fd5b5061015f6101c4366004610ff5565b610785565b3480156101d557600080fd5b506001610139565b3480156101e957600080fd5b50600254610139565b3480156101fe57600080fd5b5061013961094f565b34801561021357600080fd5b506003610139565b34801561022757600080fd5b50600454600160a01b900460ff16604051610143919061107d565b34801561024e57600080fd5b5061026261025d3660046110a5565b6109e7565b60405161014392919061113a565b34801561027c57600080fd5b5061015f610a94565b34801561029157600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610143565b3480156102c357600080fd5b506102d76102d2366004611199565b610aa8565b604080516001600160a01b0394851681526020810193909352921691810191909152606001610143565b34801561030d57600080fd5b506004546001600160a01b031661029f565b34801561032b57600080fd5b5061029f61033a366004611199565b610ae6565b34801561034b57600080fd5b5061015f61035a3660046111b2565b610b16565b34801561036b57600080fd5b5061015f61037a3660046111e5565b610b23565b600080600360009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156103d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f99190611221565b5050509150506000816402540be4006104129190611287565b90506000816104497f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a7640000611287565b61045391906112bc565b949350505050565b6001600454600160a01b900460ff16600281111561047b5761047b611067565b141561049a576040516316d60d6560e11b815260040160405180910390fd5b600180546001600160a01b0384166001600160a01b0319918216811790925560068054821690921790915560078290556008805490911633179055600954610522577f000000000000000000000000000000000000000000000000000000000000000060011061051d57604051631bfbb56160e01b815260040160405180910390fd5b61056f565b610552600161052f61094f565b61053a9060556112d0565b61054261094f565b61054d9060736112d0565b610b9c565b61056f57604051639fd0f74360e01b815260040160405180910390fd5b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401600060405180830381600087803b1580156105c157600080fd5b505af11580156105d5573d6000803e3d6000fd5b505060098054600181810190925560065460039091027f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af810180546001600160a01b03199081166001600160a01b03948516179091556007547f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b08301556008547f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b1909201805482169284169290921790915560028054938401815560009081527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9093018054909116339081179091556040518695509187169350917f8a55a3fc25c5da9cee33cc44a5e2f374da2c9cf5deb3ce9a346aa77e464700bc91a45050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107775760405163073e64fd60e21b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b6107818282610bbf565b5050565b6040805160008082526020820190925261079e906109e7565b509050806107f757600954600280546004549091600160a01b90910460ff16908111156107cd576107cd611067565b60405163a9e3cfef60e01b815260048101939093526024830191909152604482015260640161076e565b6040516305d3b1d360e41b81527f0000000000000000000000000000000000000000000000000000000000000000600482015267ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001660248201526003604482015263ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166064820152600160848201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635d3b1d309060a4016020604051808303816000875af11580156108ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090e91906112e4565b90507f8436886e362e85384c64d5af46721d434cb451102c48870819d9f8420f5531768160405161094191815260200190565b60405180910390a150505050565b600080805b60095481116109e15760098181548110610970576109706112fd565b600091825260209091206003909102018054600680546001600160a01b03199081166001600160a01b039384161790915560018301546007556002909201546008805490931691161790556109c3600190565b6109cd9083611313565b9150806109d98161132b565b915050610954565b50919050565b600060608180600454600160a01b900460ff166002811115610a0b57610a0b611067565b14905060007f000000000000000000000000000000000000000000000000000000000000000060055442610a3f9190611346565b600254600954929091101592501515901515838015610a5b5750825b8015610a645750815b8015610a6d5750805b604080518082019091526002815261060f60f31b6020820152909890975095505050505050565b610a9c610d92565b610aa66000610dec565b565b60098181548110610ab857600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b0391821693501683565b600060028281548110610afb57610afb6112fd565b6000918252602090912001546001600160a01b031692915050565b610b1e610d92565b505050565b610b2b610d92565b6001600160a01b038116610b905760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161076e565b610b9981610dec565b50565b6000818310610baa57600080fd5b82841015801561045357505090911115919050565b6002600454600160a01b900460ff166002811115610bdf57610bdf611067565b14610c1e5760405162461bcd60e51b815260206004820152600f60248201526e4e6f7420746865726520796574212160881b604482015260640161076e565b6000815111610c635760405162461bcd60e51b815260206004820152601160248201527052616e646f6d206e6f7420666f756e642160781b604482015260640161076e565b600060028054905082600081518110610c7e57610c7e6112fd565b6020026020010151610c9091906112d0565b905060028181548110610ca557610ca56112fd565b6000918252602082200154600480546001600160a81b0319166001600160a01b03909216918217905560405190917f794919b0f484b8e90b1b817ac7f880f846fbd8a9813dee2a378e820db094e3d191a26004546040516000916001600160a01b03169047908381818185875af1925050503d8060008114610d43576040519150601f19603f3d011682016040523d82523d6000602084013e610d48565b606091505b5050905080610d6a57604051639245f21560e01b815260040160405180910390fd5b6040805160008152602081019182905251610d8791600291610e3c565b505042600555505050565b6000546001600160a01b03163314610aa65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161076e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610e91579160200282015b82811115610e9157825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610e5c565b50610e9d929150610ea1565b5090565b5b80821115610e9d5760008155600101610ea2565b80356001600160a01b0381168114610ecd57600080fd5b919050565b60008060408385031215610ee557600080fd5b610eee83610eb6565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610f3b57610f3b610efc565b604052919050565b60008060408385031215610f5657600080fd5b8235915060208084013567ffffffffffffffff80821115610f7657600080fd5b818601915086601f830112610f8a57600080fd5b813581811115610f9c57610f9c610efc565b8060051b9150610fad848301610f12565b8181529183018401918481019089841115610fc757600080fd5b938501935b83851015610fe557843582529385019390850190610fcc565b8096505050505050509250929050565b6000806020838503121561100857600080fd5b823567ffffffffffffffff8082111561102057600080fd5b818501915085601f83011261103457600080fd5b81358181111561104357600080fd5b86602082850101111561105557600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061109f57634e487b7160e01b600052602160045260246000fd5b91905290565b600060208083850312156110b857600080fd5b823567ffffffffffffffff808211156110d057600080fd5b818501915085601f8301126110e457600080fd5b8135818111156110f6576110f6610efc565b611108601f8201601f19168501610f12565b9150808252868482850101111561111e57600080fd5b8084840185840137600090820190930192909252509392505050565b821515815260006020604081840152835180604085015260005b8181101561117057858101830151858201606001528201611154565b81811115611182576000606083870101525b50601f01601f191692909201606001949350505050565b6000602082840312156111ab57600080fd5b5035919050565b6000806000606084860312156111c757600080fd5b6111d084610eb6565b95602085013595506040909401359392505050565b6000602082840312156111f757600080fd5b61120082610eb6565b9392505050565b805169ffffffffffffffffffff81168114610ecd57600080fd5b600080600080600060a0868803121561123957600080fd5b61124286611207565b945060208601519350604086015192506060860151915061126560808701611207565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156112a1576112a1611271565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826112cb576112cb6112a6565b500490565b6000826112df576112df6112a6565b500690565b6000602082840312156112f657600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000821982111561132657611326611271565b500190565b600060001982141561133f5761133f611271565b5060010190565b60008282101561135857611358611271565b50039056fea2646970667358221220e0d7218ec4c5108dcb0aa88196e2695307f24209dc51f4cf46c8eb287a7d75d964736f6c634300080c0033",
  "bytecodeSha1": "a5f9a829dac2f12e8a6250a3374811f40d083a71",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Lottery",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "54": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "53": [
            2169,
            2191,
            true
          ]
        }
      },
      "1": {},
      "12": {},
      "13": {
        "Lottery.enterLottery": {
          "45": [
            5094,
            5132,
            false
          ],
          "46": [
            5602,
            5636,
            false
          ],
          "47": [
            5823,
            5915,
            false
          ]
        },
        "Lottery.fulfillRandomWords": {
          "50": [
            6759,
            6809,
            true
          ],
          "51": [
            6847,
            6870,
            true
          ],
          "52": [
            7224,
            7231,
            false
          ]
        },
        "Lottery.inBetween": {
          "49": [
            6396,
            6405,
            true
          ]
        },
        "Lottery.performUpkeep": {
          "48": [
            4583,
            4595,
            false
          ]
        }
      },
      "2": {},
      "3": {},
      "6": {
        "VRFConsumerBaseV2.rawFulfillRandomWords": {
          "55": [
            6717,
            6745,
            false
          ]
        }
      },
      "7": {},
      "8": {}
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "42": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "43": [
            2541,
            2558
          ],
          "44": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "3": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "27": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "29": [
            2161,
            2234
          ],
          "30": [
            2244,
            2272
          ]
        }
      },
      "1": {},
      "12": {},
      "13": {
        "Lottery.checkUpkeep": {
          "25": [
            4215,
            4280
          ],
          "26": [
            4284,
            4311
          ]
        },
        "Lottery.enterLottery": {
          "5": [
            5090,
            5176
          ],
          "6": [
            5315,
            5350
          ],
          "7": [
            5407,
            5453
          ],
          "8": [
            5457,
            5488
          ],
          "9": [
            5492,
            5523
          ],
          "10": [
            5598,
            5682
          ],
          "12": [
            5813,
            5967
          ],
          "13": [
            6018,
            6073
          ],
          "14": [
            6077,
            6104
          ],
          "15": [
            6137,
            6172
          ],
          "16": [
            6220,
            6279
          ]
        },
        "Lottery.fulfillRandomWords": {
          "33": [
            6747,
            6835
          ],
          "34": [
            6839,
            6892
          ],
          "35": [
            6958,
            6999
          ],
          "36": [
            7003,
            7038
          ],
          "37": [
            7042,
            7075
          ],
          "38": [
            7219,
            7283
          ],
          "39": [
            7312,
            7348
          ],
          "40": [
            7413,
            7446
          ]
        },
        "Lottery.getLatestTimeStamp": {
          "0": [
            9070,
            9092
          ]
        },
        "Lottery.getLotteryState": {
          "2": [
            8794,
            8815
          ]
        },
        "Lottery.getNFTValue": {
          "11": [
            8070,
            8078
          ]
        },
        "Lottery.getNumOfParticipants": {
          "1": [
            8279,
            8302
          ]
        },
        "Lottery.getPlayer": {
          "28": [
            7858,
            7881
          ]
        },
        "Lottery.getRecenetWinner": {
          "4": [
            7950,
            7971
          ]
        },
        "Lottery.getTreasuryAvg": {
          "21": [
            7699,
            7740
          ],
          "22": [
            7745,
            7765
          ],
          "23": [
            7671,
            7689
          ],
          "24": [
            7773,
            7783
          ]
        },
        "Lottery.inBetween": {
          "31": [
            6388,
            6406
          ],
          "32": [
            6410,
            6445
          ]
        },
        "Lottery.performUpkeep": {
          "19": [
            4578,
            4787
          ],
          "20": [
            4953,
            4991
          ]
        }
      },
      "2": {
        "Context._msgSender": {
          "41": [
            712,
            729
          ]
        }
      },
      "3": {},
      "6": {
        "VRFConsumerBaseV2.rawFulfillRandomWords": {
          "17": [
            6713,
            6822
          ],
          "18": [
            6827,
            6869
          ]
        }
      },
      "7": {},
      "8": {}
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink@1.11.0/AggregatorV3Interface",
    "smartcontractkit/chainlink@1.11.0/AutomationCompatibleInterface",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/Ownable",
    "smartcontractkit/chainlink@1.11.0/VRFConsumerBaseV2",
    "smartcontractkit/chainlink@1.11.0/VRFCoordinatorV2Interface"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "1025:8073:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8309:415;;;;;;;;;;;;;:::i;:::-;;;160:25:15;;;148:2;133:18;8309:415:13;;;;;;;;4998:1285;;;;;;:::i;:::-;;:::i;:::-;;6618:256:6;;;;;;;;;;-1:-1:-1;6618:256:6;;;;;:::i;:::-;;:::i;8085:125:13:-;;;;;;;;;;-1:-1:-1;8167:21:13;8085:125;;9006:90;;;;;;;;;;-1:-1:-1;9077:15:13;;9006:90;;4441:554;;;;;;;;;;-1:-1:-1;4441:554:13;;;;;:::i;:::-;;:::i;8822:77::-;;;;;;;;;;-1:-1:-1;1608:1:13;8822:77;;8213:93;;;;;;;;;;-1:-1:-1;8286:9:13;:16;8213:93;;7514:273;;;;;;;;;;;;;:::i;8902:101::-;;;;;;;;;;-1:-1:-1;1522:1:13;8902:101;;8727:92;;;;;;;;;;-1:-1:-1;8801:14:13;;-1:-1:-1;;;8801:14:13;;;;8727:92;;;;;;:::i;3792:523::-;;;;;;;;;;-1:-1:-1;3792:523:13;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1831:101:0:-;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;;-1:-1:-1;;;;;4754:32:15;;;4736:51;;4724:2;4709:18;1201:85:0;4590:203:15;2214:22:13;;;;;;;;;;-1:-1:-1;2214:22:13;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5241:15:15;;;5223:34;;5288:2;5273:18;;5266:34;;;;5336:15;;5316:18;;;5309:43;;;;5173:2;5158:18;2214:22:13;4983:375:15;7888:87:13;;;;;;;;;;-1:-1:-1;7957:14:13;;-1:-1:-1;;;;;7957:14:13;7888:87;;7790:95;;;;;;;;;;-1:-1:-1;7790:95:13;;;;;:::i;:::-;;:::i;6521:111::-;;;;;;;;;;-1:-1:-1;6521:111:13;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;8309:415:13:-;8356:7;8372:12;8394:15;;;;;;;;;-1:-1:-1;;;;;8394:15:13;-1:-1:-1;;;;;8394:31:13;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8369:58;;;;;;8476:21;8508:5;8517:6;8500:23;;;;:::i;:::-;8476:47;-1:-1:-1;8583:19:13;8476:47;8606:26;:17;8626:6;8606:26;:::i;:::-;8605:44;;;;:::i;:::-;8583:66;8309:415;-1:-1:-1;;;;8309:415:13:o;4998:1285::-;5112:20;5094:14;;-1:-1:-1;;;5094:14:13;;;;:38;;;;;;;;:::i;:::-;;5090:86;;;5146:25;;-1:-1:-1;;;5146:25:13;;;;;;;;;;;5090:86;5315:5;:35;;-1:-1:-1;;;;;5315:35:13;;-1:-1:-1;;;;;;5315:35:13;;;;;;;;5407:11;:46;;;;;;;;;;5457:20;:31;;;5492:18;:31;;;;;5513:10;5492:31;;;5570:9;:16;5566:449;;5619:17;8077:1;5602:34;5598:84;;5651:25;;-1:-1:-1;;;5651:25:13;;;;;;;;;;;5598:84;5566:449;;;5823:92;8077:1;5864:16;:14;:16::i;:::-;5859:21;;:2;:21;:::i;:::-;5893:16;:14;:16::i;:::-;5887:22;;:3;:22;:::i;:::-;5823:9;:92::i;:::-;5813:154;;5934:27;;-1:-1:-1;;;5934:27:13;;;;;;;;;;;5813:154;6018:5;;:55;;-1:-1:-1;;;6018:55:13;;6037:10;6018:55;;;7462:34:15;6057:4:13;7512:18:15;;;7505:43;7564:18;;;7557:34;;;-1:-1:-1;;;;;6018:5:13;;;;:18;;7397::15;;6018:55:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6077:9:13;:27;;;;;;;;;6092:11;6077:27;;;;;;;;;;-1:-1:-1;;;;;;6077:27:13;;;-1:-1:-1;;;;;6077:27:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6137:35;;;;;;;-1:-1:-1;6137:35:13;;;;;;;;;;;;6160:10;6137:35;;;;;;6225:54;;6270:8;;-1:-1:-1;6225:54:13;;;;-1:-1:-1;6160:10:13;6225:54;;;4998:1285;;:::o;6618:256:6:-;6717:10;-1:-1:-1;;;;;6731:14:6;6717:28;;6713:109;;6762:53;;-1:-1:-1;;;6762:53:6;;6788:10;6762:53;;;7814:34:15;-1:-1:-1;;;;;6800:14:6;7884:15:15;7864:18;;;7857:43;7749:18;;6762:53:6;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;4441:554:13:-;4561:12;;;4526:17;4561:12;;;;;;;;;4549:25;;:11;:25::i;:::-;4525:49;;;4583:12;4578:209;;4710:9;:16;4732:9;:16;;4762:14;;4732:16;;-1:-1:-1;;;4762:14:13;;;;;;4754:23;;;;;;;:::i;:::-;4680:102;;-1:-1:-1;;;4680:102:13;;;;;8113:25:15;;;;8154:18;;;8147:34;;;;8197:18;;;8190:34;8086:18;;4680:102:13;7911:319:15;4578:209:13;4811:137;;-1:-1:-1;;;4811:137:13;;4851:9;4811:137;;;8486:25:15;8559:18;4865:16:13;8547:31:15;8527:18;;;8520:59;1522:1:13;8595:18:15;;;8588:47;8654:10;4912:18:13;8700:15:15;8680:18;;;8673:43;1608:1:13;8732:19:15;;;8725:44;4791:17:13;;4811:16;-1:-1:-1;;;;;4811:35:13;;;;8458:19:15;;4811:137:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4791:157;;4958:33;4981:9;4958:33;;;;160:25:15;;148:2;133:18;;14:177;4958:33:13;;;;;;;;4521:474;;4441:554;;:::o;7514:273::-;7556:7;;;7588:182;7650:9;:16;7630:36;;7588:182;;7713:9;7723:16;7713:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;7699:41;;:11;:41;;-1:-1:-1;;;;;;7699:41:13;;;-1:-1:-1;;;;;7699:41:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7752:13;8077:1;;8013:69;7752:13;7745:20;;;;:::i;:::-;;-1:-1:-1;7671:18:13;;;;:::i;:::-;;;;7588:182;;;-1:-1:-1;7780:3:13;7514:273;-1:-1:-1;7514:273:13:o;3792:523::-;3888:17;3910:12;3888:17;;3963:14;;-1:-1:-1;;;3963:14:13;;;;:36;;;;;;;;:::i;:::-;;3948:52;;4004:15;4062:10;4042:15;;4024;:33;;;;:::i;:::-;4096:9;:16;4140:9;:16;4023:49;;;;;;-1:-1:-1;4096:20:13;;;4140;;4231:6;:20;;;;;4241:10;4231:20;:34;;;;;4255:10;4231:34;:48;;;;;4269:10;4231:48;4284:27;;;;;;;;;;;;-1:-1:-1;;;4284:27:13;;;;4215:65;;4284:27;;-1:-1:-1;3792:523:13;-1:-1:-1;;;;;;3792:523:13:o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2214:22:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2214:22:13;;;;-1:-1:-1;2214:22:13;;:::o;7790:95::-;7845:7;7865:9;7875:5;7865:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;7865:16:13;;7790:95;-1:-1:-1;;7790:95:13:o;6521:111::-;1094:13:0;:11;:13::i;:::-;6521:111:13;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;9706:2:15;2161:73:0::1;::::0;::::1;9688:21:15::0;9745:2;9725:18;;;9718:30;9784:34;9764:18;;;9757:62;-1:-1:-1;;;9835:18:15;;;9828:36;9881:19;;2161:73:0::1;9504:402:15::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;6286:163:13:-;6378:4;6402:3;6396;:9;6388:18;;;;;;6426:3;6417:5;:12;;:28;;;;-1:-1:-1;;6433:12:13;;;;;6410:35;-1:-1:-1;6286:163:13:o;6635:839::-;6777:32;6759:14;;-1:-1:-1;;;6759:14:13;;;;:50;;;;;;;;:::i;:::-;;6747:88;;;;-1:-1:-1;;;6747:88:13;;10113:2:15;6747:88:13;;;10095:21:15;10152:2;10132:18;;;10125:30;-1:-1:-1;;;10171:18:15;;;10164:45;10226:18;;6747:88:13;9911:339:15;6747:88:13;6869:1;6847:12;:19;:23;6839:53;;;;-1:-1:-1;;;6839:53:13;;10457:2:15;6839:53:13;;;10439:21:15;10496:2;10476:18;;;10469:30;-1:-1:-1;;;10515:18:15;;;10508:47;10572:18;;6839:53:13;10255:341:15;6839:53:13;6896:21;6938:9;:16;;;;6920:12;6933:1;6920:15;;;;;;;;:::i;:::-;;;;;;;:34;;;;:::i;:::-;6896:58;;6975:9;6985:13;6975:24;;;;;;;;:::i;:::-;;;;;;;;;;6958:14;:41;;-1:-1:-1;;;;;;7003:35:13;-1:-1:-1;;;;;6975:24:13;;;7003:35;;;;;7047:28;;6975:24;;7047:28;;;7098:14;;:62;;7080:12;;-1:-1:-1;;;;;7098:14:13;;7126:21;;7080:12;7098:62;7080:12;7098:62;7126:21;7098:14;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7079:81;;;7224:7;7219:64;;7245:33;;-1:-1:-1;;;7245:33:13;;;;;;;;;;;7219:64;7324:24;;;7346:1;7324:24;;;;;;;;;7312:36;;;:9;;:36;:::i;:::-;-1:-1:-1;;7431:15:13;7413;:33;-1:-1:-1;;;6635:839:13:o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:2;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;11013:2:15;1414:68:0;;;10995:21:15;;;11032:18;;;11025:30;11091:34;11071:18;;;11064:62;11143:18;;1414:68:0;10811:356:15;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:173:15;264:20;;-1:-1:-1;;;;;313:31:15;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:254::-;442:6;450;503:2;491:9;482:7;478:23;474:32;471:52;;;519:1;516;509:12;471:52;542:29;561:9;542:29;:::i;:::-;532:39;618:2;603:18;;;;590:32;;-1:-1:-1;;;374:254:15:o;633:127::-;694:10;689:3;685:20;682:1;675:31;725:4;722:1;715:15;749:4;746:1;739:15;765:275;836:2;830:9;901:2;882:13;;-1:-1:-1;;878:27:15;866:40;;936:18;921:34;;957:22;;;918:62;915:88;;;983:18;;:::i;:::-;1019:2;1012:22;765:275;;-1:-1:-1;765:275:15:o;1045:1014::-;1138:6;1146;1199:2;1187:9;1178:7;1174:23;1170:32;1167:52;;;1215:1;1212;1205:12;1167:52;1251:9;1238:23;1228:33;;1280:2;1333;1322:9;1318:18;1305:32;1356:18;1397:2;1389:6;1386:14;1383:34;;;1413:1;1410;1403:12;1383:34;1451:6;1440:9;1436:22;1426:32;;1496:7;1489:4;1485:2;1481:13;1477:27;1467:55;;1518:1;1515;1508:12;1467:55;1554:2;1541:16;1576:2;1572;1569:10;1566:36;;;1582:18;;:::i;:::-;1628:2;1625:1;1621:10;1611:20;;1651:28;1675:2;1671;1667:11;1651:28;:::i;:::-;1713:15;;;1783:11;;;1779:20;;;1744:12;;;;1811:19;;;1808:39;;;1843:1;1840;1833:12;1808:39;1867:11;;;;1887:142;1903:6;1898:3;1895:15;1887:142;;;1969:17;;1957:30;;1920:12;;;;2007;;;;1887:142;;;2048:5;2038:15;;;;;;;;1045:1014;;;;;:::o;2064:591::-;2134:6;2142;2195:2;2183:9;2174:7;2170:23;2166:32;2163:52;;;2211:1;2208;2201:12;2163:52;2251:9;2238:23;2280:18;2321:2;2313:6;2310:14;2307:34;;;2337:1;2334;2327:12;2307:34;2375:6;2364:9;2360:22;2350:32;;2420:7;2413:4;2409:2;2405:13;2401:27;2391:55;;2442:1;2439;2432:12;2391:55;2482:2;2469:16;2508:2;2500:6;2497:14;2494:34;;;2524:1;2521;2514:12;2494:34;2569:7;2564:2;2555:6;2551:2;2547:15;2543:24;2540:37;2537:57;;;2590:1;2587;2580:12;2537:57;2621:2;2613:11;;;;;2643:6;;-1:-1:-1;2064:591:15;;-1:-1:-1;;;;2064:591:15:o;2660:127::-;2721:10;2716:3;2712:20;2709:1;2702:31;2752:4;2749:1;2742:15;2776:4;2773:1;2766:15;2792:344;2940:2;2925:18;;2973:1;2962:13;;2952:144;;3018:10;3013:3;3009:20;3006:1;2999:31;3053:4;3050:1;3043:15;3081:4;3078:1;3071:15;2952:144;3105:25;;;2792:344;:::o;3141:763::-;3209:6;3240:2;3283;3271:9;3262:7;3258:23;3254:32;3251:52;;;3299:1;3296;3289:12;3251:52;3339:9;3326:23;3368:18;3409:2;3401:6;3398:14;3395:34;;;3425:1;3422;3415:12;3395:34;3463:6;3452:9;3448:22;3438:32;;3508:7;3501:4;3497:2;3493:13;3489:27;3479:55;;3530:1;3527;3520:12;3479:55;3566:2;3553:16;3588:2;3584;3581:10;3578:36;;;3594:18;;:::i;:::-;3636:53;3679:2;3660:13;;-1:-1:-1;;3656:27:15;3652:36;;3636:53;:::i;:::-;3623:66;;3712:2;3705:5;3698:17;3752:7;3747:2;3742;3738;3734:11;3730:20;3727:33;3724:53;;;3773:1;3770;3763:12;3724:53;3828:2;3823;3819;3815:11;3810:2;3803:5;3799:14;3786:45;3872:1;3851:14;;;3847:23;;;3840:34;;;;-1:-1:-1;3855:5:15;3141:763;-1:-1:-1;;;3141:763:15:o;3909:676::-;4092:6;4085:14;4078:22;4067:9;4060:41;4041:4;4120:2;4158;4153;4142:9;4138:18;4131:30;4190:6;4184:13;4233:6;4228:2;4217:9;4213:18;4206:34;4258:1;4268:140;4282:6;4279:1;4276:13;4268:140;;;4377:14;;;4373:23;;4367:30;4343:17;;;4362:2;4339:26;4332:66;4297:10;;4268:140;;;4426:6;4423:1;4420:13;4417:91;;;4496:1;4491:2;4482:6;4471:9;4467:22;4463:31;4456:42;4417:91;-1:-1:-1;4569:2:15;4548:15;-1:-1:-1;;4544:29:15;4529:45;;;;4576:2;4525:54;;3909:676;-1:-1:-1;;;;3909:676:15:o;4798:180::-;4857:6;4910:2;4898:9;4889:7;4885:23;4881:32;4878:52;;;4926:1;4923;4916:12;4878:52;-1:-1:-1;4949:23:15;;4798:180;-1:-1:-1;4798:180:15:o;5363:322::-;5440:6;5448;5456;5509:2;5497:9;5488:7;5484:23;5480:32;5477:52;;;5525:1;5522;5515:12;5477:52;5548:29;5567:9;5548:29;:::i;:::-;5538:39;5624:2;5609:18;;5596:32;;-1:-1:-1;5675:2:15;5660:18;;;5647:32;;5363:322;-1:-1:-1;;;5363:322:15:o;5690:186::-;5749:6;5802:2;5790:9;5781:7;5777:23;5773:32;5770:52;;;5818:1;5815;5808:12;5770:52;5841:29;5860:9;5841:29;:::i;:::-;5831:39;5690:186;-1:-1:-1;;;5690:186:15:o;5881:179::-;5959:13;;6012:22;6001:34;;5991:45;;5981:73;;6050:1;6047;6040:12;6065:473;6168:6;6176;6184;6192;6200;6253:3;6241:9;6232:7;6228:23;6224:33;6221:53;;;6270:1;6267;6260:12;6221:53;6293:39;6322:9;6293:39;:::i;:::-;6283:49;;6372:2;6361:9;6357:18;6351:25;6341:35;;6416:2;6405:9;6401:18;6395:25;6385:35;;6460:2;6449:9;6445:18;6439:25;6429:35;;6483:49;6527:3;6516:9;6512:19;6483:49;:::i;:::-;6473:59;;6065:473;;;;;;;;:::o;6543:127::-;6604:10;6599:3;6595:20;6592:1;6585:31;6635:4;6632:1;6625:15;6659:4;6656:1;6649:15;6675:168;6715:7;6781:1;6777;6773:6;6769:14;6766:1;6763:21;6758:1;6751:9;6744:17;6740:45;6737:71;;;6788:18;;:::i;:::-;-1:-1:-1;6828:9:15;;6675:168::o;6848:127::-;6909:10;6904:3;6900:20;6897:1;6890:31;6940:4;6937:1;6930:15;6964:4;6961:1;6954:15;6980:120;7020:1;7046;7036:35;;7051:18;;:::i;:::-;-1:-1:-1;7085:9:15;;6980:120::o;7105:112::-;7137:1;7163;7153:35;;7168:18;;:::i;:::-;-1:-1:-1;7202:9:15;;7105:112::o;8780:184::-;8850:6;8903:2;8891:9;8882:7;8878:23;8874:32;8871:52;;;8919:1;8916;8909:12;8871:52;-1:-1:-1;8942:16:15;;8780:184;-1:-1:-1;8780:184:15:o;8969:127::-;9030:10;9025:3;9021:20;9018:1;9011:31;9061:4;9058:1;9051:15;9085:4;9082:1;9075:15;9101:128;9141:3;9172:1;9168:6;9165:1;9162:13;9159:39;;;9178:18;;:::i;:::-;-1:-1:-1;9214:9:15;;9101:128::o;9234:135::-;9273:3;-1:-1:-1;;9294:17:15;;9291:43;;;9314:18;;:::i;:::-;-1:-1:-1;9361:1:15;9350:13;;9234:135::o;9374:125::-;9414:4;9442:1;9439;9436:8;9433:34;;;9447:18;;:::i;:::-;-1:-1:-1;9484:9:15;;9374:125::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "checkUpkeep(bytes)": {
        "notice": "dev: This is the function that the chainlink keeper will look to return true to update state The following should be true in order to return true: 1. The time Interval should have passed 2. The Lottery should have at least one NFT added to treasury and 1 player 3. The Chainlink subscription is funded with Link Token"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "performUpkeep(bytes)": {
        "notice": "dev: This the function that will perform the upkeep based upon interval and is acting as endLottery function"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    1025,
    9098
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B68C03C GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA97E1F28 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA97E1F28 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xB7A832AF EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xE55AE4E8 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xE9D513E4 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6B68C03C EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x7A2D1E21 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4585E33B GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x53A2C19A EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x5481BBCD EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x5D659408 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x5F1B0FD8 EQ PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x194B78F8 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x24C45B1E EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x320229EB EQ PUSH2 0x194 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x37F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xED2 JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0xF43 JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x139 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x139 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF5 JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0x139 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x139 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x94F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 PUSH2 0x139 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x262 PUSH2 0x25D CALLDATASIZE PUSH1 0x4 PUSH2 0x10A5 JUMP JUMPDEST PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP3 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0xA94 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x143 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD PUSH2 0x143 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29F PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0xAE6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0x11B2 JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x11E5 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x1221 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 PUSH5 0x2540BE400 PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x449 PUSH32 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1287 JUMP JUMPDEST PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x12BC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x47B JUMPI PUSH2 0x47B PUSH2 0x1067 JUMP JUMPDEST EQ ISZERO PUSH2 0x49A JUMPI PUSH1 0x40 MLOAD PUSH4 0x16D60D65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x6 DUP1 SLOAD DUP3 AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP3 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP1 SWAP2 AND CALLER OR SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH2 0x522 JUMPI PUSH32 0x0 PUSH1 0x1 LT PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BFBB561 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x56F JUMP JUMPDEST PUSH2 0x552 PUSH1 0x1 PUSH2 0x52F PUSH2 0x94F JUMP JUMPDEST PUSH2 0x53A SWAP1 PUSH1 0x55 PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0x542 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x54D SWAP1 PUSH1 0x73 PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x56F JUMPI PUSH1 0x40 MLOAD PUSH4 0x9FD0F743 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD SWAP1 SWAP3 SSTORE PUSH1 0x6 SLOAD PUSH1 0x3 SWAP1 SWAP2 MUL PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x7 SLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B0 DUP4 ADD SSTORE PUSH1 0x8 SLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B1 SWAP1 SWAP3 ADD DUP1 SLOAD DUP3 AND SWAP3 DUP5 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 SWAP4 ADD DUP1 SLOAD SWAP1 SWAP2 AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP7 SWAP6 POP SWAP2 DUP8 AND SWAP4 POP SWAP2 PUSH32 0x8A55A3FC25C5DA9CEE33CC44A5E2F374DA2C9CF5DEB3CE9A346AA77E464700BC SWAP2 LOG4 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x781 DUP3 DUP3 PUSH2 0xBBF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x79E SWAP1 PUSH2 0x9E7 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x7F7 JUMPI PUSH1 0x9 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x4 SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x7CD JUMPI PUSH2 0x7CD PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9E3CFEF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5D3B1D3 PUSH1 0xE4 SHL DUP2 MSTORE PUSH32 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF PUSH32 0x0 AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x5D3B1D30 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x90E SWAP2 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST SWAP1 POP PUSH32 0x8436886E362E85384C64D5AF46721D434CB451102C48870819D9F8420F553176 DUP2 PUSH1 0x40 MLOAD PUSH2 0x941 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x9 SLOAD DUP2 GT PUSH2 0x9E1 JUMPI PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x970 JUMPI PUSH2 0x970 PUSH2 0x12FD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x7 SSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x8 DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x9C3 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x9CD SWAP1 DUP4 PUSH2 0x1313 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x9D9 DUP2 PUSH2 0x132B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x954 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP2 DUP1 PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA0B JUMPI PUSH2 0xA0B PUSH2 0x1067 JUMP JUMPDEST EQ SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0xA3F SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x9 SLOAD SWAP3 SWAP1 SWAP2 LT ISZERO SWAP3 POP ISZERO ISZERO SWAP1 ISZERO ISZERO DUP4 DUP1 ISZERO PUSH2 0xA5B JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0xA64 JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0xA6D JUMPI POP DUP1 JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x60F PUSH1 0xF3 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA9C PUSH2 0xD92 JUMP JUMPDEST PUSH2 0xAA6 PUSH1 0x0 PUSH2 0xDEC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 POP AND DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAFB JUMPI PUSH2 0xAFB PUSH2 0x12FD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB1E PUSH2 0xD92 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB2B PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x76E JUMP JUMPDEST PUSH2 0xB99 DUP2 PUSH2 0xDEC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xBAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP5 LT ISZERO DUP1 ISZERO PUSH2 0x453 JUMPI POP POP SWAP1 SWAP2 GT ISZERO SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xBDF JUMPI PUSH2 0xBDF PUSH2 0x1067 JUMP JUMPDEST EQ PUSH2 0xC1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F74207468657265207965742121 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x76E JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xC63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x52616E646F6D206E6F7420666F756E6421 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x76E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC7E JUMPI PUSH2 0xC7E PUSH2 0x12FD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xC90 SWAP2 SWAP1 PUSH2 0x12D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xCA5 JUMPI PUSH2 0xCA5 PUSH2 0x12FD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x794919B0F484B8E90B1B817AC7F880F846FBD8A9813DEE2A378E820DB094E3D1 SWAP2 LOG2 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD43 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xD6A JUMPI PUSH1 0x40 MLOAD PUSH4 0x9245F215 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE MLOAD PUSH2 0xD87 SWAP2 PUSH1 0x2 SWAP2 PUSH2 0xE3C JUMP JUMPDEST POP POP TIMESTAMP PUSH1 0x5 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x76E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xE91 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xE91 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xE5C JUMP JUMPDEST POP PUSH2 0xE9D SWAP3 SWAP2 POP PUSH2 0xEA1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xE9D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xEA2 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xECD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEEE DUP4 PUSH2 0xEB6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xF3B JUMPI PUSH2 0xF3B PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF9C JUMPI PUSH2 0xF9C PUSH2 0xEFC JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0xFAD DUP5 DUP4 ADD PUSH2 0xF12 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0xFC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0xFE5 JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0xFCC JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1008 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1020 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1034 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1043 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x109F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x10F6 JUMPI PUSH2 0x10F6 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x1108 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0xF12 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP7 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x111E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x40 DUP2 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1170 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x60 ADD MSTORE DUP3 ADD PUSH2 0x1154 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1182 JUMPI PUSH1 0x0 PUSH1 0x60 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x60 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11D0 DUP5 PUSH2 0xEB6 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1200 DUP3 PUSH2 0xEB6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xECD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1242 DUP7 PUSH2 0x1207 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x1265 PUSH1 0x80 DUP8 ADD PUSH2 0x1207 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x12A1 JUMPI PUSH2 0x12A1 PUSH2 0x1271 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12CB JUMPI PUSH2 0x12CB PUSH2 0x12A6 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12DF JUMPI PUSH2 0x12DF PUSH2 0x12A6 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1326 JUMPI PUSH2 0x1326 PUSH2 0x1271 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x133F JUMPI PUSH2 0x133F PUSH2 0x1271 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1358 JUMPI PUSH2 0x1358 PUSH2 0x1271 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xD7 0x21 DUP15 0xC4 0xC5 LT DUP14 0xCB EXP 0xA8 DUP2 SWAP7 0xE2 PUSH10 0x5307F24209DC51F4CF46 0xC8 0xEB 0x28 PUSH27 0x7D75D964736F6C634300080C003300000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "8": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "LT",
      "path": "13"
    },
    "9": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x11F"
    },
    "12": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "13": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "16": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "SHR",
      "path": "13"
    },
    "19": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "20": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x6B68C03C"
    },
    "25": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "GT",
      "path": "13"
    },
    "26": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA0"
    },
    "29": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "30": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "31": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xA97E1F28"
    },
    "36": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "GT",
      "path": "13"
    },
    "37": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "41": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "42": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xA97E1F28"
    },
    "47": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "48": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2B7"
    },
    "51": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "52": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "53": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xB7A832AF"
    },
    "58": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "59": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x301"
    },
    "62": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "63": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "64": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xE55AE4E8"
    },
    "69": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "70": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x31F"
    },
    "73": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "74": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "75": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xE9D513E4"
    },
    "80": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "81": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x33F"
    },
    "84": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "85": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "86": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF2FDE38B"
    },
    "91": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "92": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x35F"
    },
    "95": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "96": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "99": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "REVERT",
      "path": "13"
    },
    "100": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "101": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "102": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x6B68C03C"
    },
    "107": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "108": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x21B"
    },
    "111": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "112": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "113": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x6E04FF0D"
    },
    "118": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "119": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x242"
    },
    "122": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "123": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "124": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x715018A6"
    },
    "129": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "130": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x270"
    },
    "133": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "134": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "135": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7A2D1E21"
    },
    "140": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "141": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1C9"
    },
    "144": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "145": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "146": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8DA5CB5B"
    },
    "151": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "152": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x285"
    },
    "155": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "156": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "159": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "REVERT",
      "path": "13"
    },
    "160": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "161": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "162": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x4585E33B"
    },
    "167": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "GT",
      "path": "13"
    },
    "168": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE7"
    },
    "171": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "172": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "173": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x4585E33B"
    },
    "178": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "179": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1A9"
    },
    "182": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "183": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "184": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x53A2C19A"
    },
    "189": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "190": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1C9"
    },
    "193": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "194": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "195": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x5481BBCD"
    },
    "200": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "201": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1DD"
    },
    "204": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "205": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "206": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x5D659408"
    },
    "211": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "212": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F2"
    },
    "215": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "216": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "217": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x5F1B0FD8"
    },
    "222": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "223": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x207"
    },
    "226": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "227": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "229": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "230": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "REVERT",
      "path": "13"
    },
    "231": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "232": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "233": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x9BC33A7"
    },
    "238": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "239": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x124"
    },
    "242": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "243": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "244": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x194B78F8"
    },
    "249": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "250": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14C"
    },
    "253": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "254": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "255": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x1FE543E3"
    },
    "260": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "261": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x161"
    },
    "264": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "265": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "266": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x24C45B1E"
    },
    "271": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "272": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x181"
    },
    "275": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "276": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "277": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x320229EB"
    },
    "282": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "EQ",
      "path": "13"
    },
    "283": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x194"
    },
    "286": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "287": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "288": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "290": {
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "DUP1",
      "path": "13"
    },
    "291": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1025,
        9098
      ],
      "op": "REVERT",
      "path": "13"
    },
    "292": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "293": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "294": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "DUP1",
      "path": "13"
    },
    "295": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "296": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x130"
    },
    "299": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "300": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "302": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "DUP1",
      "path": "13"
    },
    "303": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "REVERT",
      "path": "13"
    },
    "304": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "305": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "POP",
      "path": "13"
    },
    "306": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x139"
    },
    "309": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x37F"
    },
    "312": {
      "fn": "Lottery.getEntranceFee",
      "jump": "i",
      "offset": [
        8309,
        8724
      ],
      "op": "JUMP",
      "path": "13"
    },
    "313": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "314": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "316": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "317": {
      "op": "SWAP1"
    },
    "318": {
      "op": "DUP2"
    },
    "319": {
      "op": "MSTORE"
    },
    "320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "322": {
      "op": "ADD"
    },
    "323": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "324": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "326": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "327": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "DUP1",
      "path": "13"
    },
    "328": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "329": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "SUB",
      "path": "13"
    },
    "330": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "331": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "RETURN",
      "path": "13"
    },
    "332": {
      "fn": "Lottery.enterLottery",
      "offset": [
        4998,
        6283
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "333": {
      "fn": "Lottery.enterLottery",
      "offset": [
        4998,
        6283
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15F"
    },
    "336": {
      "fn": "Lottery.enterLottery",
      "offset": [
        4998,
        6283
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15A"
    },
    "339": {
      "fn": "Lottery.enterLottery",
      "offset": [
        4998,
        6283
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "340": {
      "fn": "Lottery.enterLottery",
      "offset": [
        4998,
        6283
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "342": {
      "fn": "Lottery.enterLottery",
      "offset": [
        4998,
        6283
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xED2"
    },
    "345": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        4998,
        6283
      ],
      "op": "JUMP",
      "path": "13"
    },
    "346": {
      "fn": "Lottery.enterLottery",
      "offset": [
        4998,
        6283
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "347": {
      "fn": "Lottery.enterLottery",
      "offset": [
        4998,
        6283
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x45B"
    },
    "350": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        4998,
        6283
      ],
      "op": "JUMP",
      "path": "13"
    },
    "351": {
      "fn": "Lottery.enterLottery",
      "offset": [
        4998,
        6283
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "352": {
      "fn": "Lottery.enterLottery",
      "offset": [
        4998,
        6283
      ],
      "op": "STOP",
      "path": "13"
    },
    "353": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "354": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "355": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "DUP1",
      "path": "6"
    },
    "356": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "357": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16D"
    },
    "360": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "361": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "363": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "DUP1",
      "path": "6"
    },
    "364": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "REVERT",
      "path": "6"
    },
    "365": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "366": {
      "op": "POP"
    },
    "367": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15F"
    },
    "370": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17C"
    },
    "373": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "374": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "376": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF43"
    },
    "379": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "jump": "i",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMP",
      "path": "6"
    },
    "380": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "381": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6F8"
    },
    "384": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "jump": "i",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMP",
      "path": "6"
    },
    "385": {
      "fn": "Lottery.getLotteryTreasury",
      "offset": [
        8085,
        8210
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "386": {
      "fn": "Lottery.getLotteryTreasury",
      "offset": [
        8085,
        8210
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "387": {
      "fn": "Lottery.getLotteryTreasury",
      "offset": [
        8085,
        8210
      ],
      "op": "DUP1",
      "path": "13"
    },
    "388": {
      "fn": "Lottery.getLotteryTreasury",
      "offset": [
        8085,
        8210
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "389": {
      "fn": "Lottery.getLotteryTreasury",
      "offset": [
        8085,
        8210
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x18D"
    },
    "392": {
      "fn": "Lottery.getLotteryTreasury",
      "offset": [
        8085,
        8210
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "393": {
      "fn": "Lottery.getLotteryTreasury",
      "offset": [
        8085,
        8210
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "395": {
      "fn": "Lottery.getLotteryTreasury",
      "offset": [
        8085,
        8210
      ],
      "op": "DUP1",
      "path": "13"
    },
    "396": {
      "fn": "Lottery.getLotteryTreasury",
      "offset": [
        8085,
        8210
      ],
      "op": "REVERT",
      "path": "13"
    },
    "397": {
      "fn": "Lottery.getLotteryTreasury",
      "offset": [
        8085,
        8210
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "398": {
      "op": "POP"
    },
    "399": {
      "fn": "Lottery.getLotteryTreasury",
      "offset": [
        8167,
        8188
      ],
      "op": "SELFBALANCE",
      "path": "13"
    },
    "400": {
      "fn": "Lottery.getLotteryTreasury",
      "offset": [
        8085,
        8210
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x139"
    },
    "403": {
      "fn": "Lottery.getLotteryTreasury",
      "offset": [
        8085,
        8210
      ],
      "op": "JUMP",
      "path": "13"
    },
    "404": {
      "fn": "Lottery.getLatestTimeStamp",
      "offset": [
        9006,
        9096
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "405": {
      "fn": "Lottery.getLatestTimeStamp",
      "offset": [
        9006,
        9096
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "406": {
      "fn": "Lottery.getLatestTimeStamp",
      "offset": [
        9006,
        9096
      ],
      "op": "DUP1",
      "path": "13"
    },
    "407": {
      "fn": "Lottery.getLatestTimeStamp",
      "offset": [
        9006,
        9096
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "408": {
      "fn": "Lottery.getLatestTimeStamp",
      "offset": [
        9006,
        9096
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1A0"
    },
    "411": {
      "fn": "Lottery.getLatestTimeStamp",
      "offset": [
        9006,
        9096
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "412": {
      "fn": "Lottery.getLatestTimeStamp",
      "offset": [
        9006,
        9096
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "414": {
      "fn": "Lottery.getLatestTimeStamp",
      "offset": [
        9006,
        9096
      ],
      "op": "DUP1",
      "path": "13"
    },
    "415": {
      "fn": "Lottery.getLatestTimeStamp",
      "offset": [
        9006,
        9096
      ],
      "op": "REVERT",
      "path": "13"
    },
    "416": {
      "fn": "Lottery.getLatestTimeStamp",
      "offset": [
        9006,
        9096
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "417": {
      "op": "POP"
    },
    "418": {
      "fn": "Lottery.getLatestTimeStamp",
      "offset": [
        9077,
        9092
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 0,
      "value": "0x5"
    },
    "420": {
      "fn": "Lottery.getLatestTimeStamp",
      "offset": [
        9077,
        9092
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "421": {
      "fn": "Lottery.getLatestTimeStamp",
      "offset": [
        9006,
        9096
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x139"
    },
    "424": {
      "fn": "Lottery.getLatestTimeStamp",
      "offset": [
        9006,
        9096
      ],
      "op": "JUMP",
      "path": "13"
    },
    "425": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "426": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "427": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "DUP1",
      "path": "13"
    },
    "428": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "429": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1B5"
    },
    "432": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "433": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "435": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "DUP1",
      "path": "13"
    },
    "436": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "REVERT",
      "path": "13"
    },
    "437": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "438": {
      "op": "POP"
    },
    "439": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15F"
    },
    "442": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1C4"
    },
    "445": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "446": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "448": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFF5"
    },
    "451": {
      "fn": "Lottery.performUpkeep",
      "jump": "i",
      "offset": [
        4441,
        4995
      ],
      "op": "JUMP",
      "path": "13"
    },
    "452": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "453": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x785"
    },
    "456": {
      "fn": "Lottery.performUpkeep",
      "jump": "i",
      "offset": [
        4441,
        4995
      ],
      "op": "JUMP",
      "path": "13"
    },
    "457": {
      "fn": "Lottery.getNumWords",
      "offset": [
        8822,
        8899
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "458": {
      "fn": "Lottery.getNumWords",
      "offset": [
        8822,
        8899
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "459": {
      "fn": "Lottery.getNumWords",
      "offset": [
        8822,
        8899
      ],
      "op": "DUP1",
      "path": "13"
    },
    "460": {
      "fn": "Lottery.getNumWords",
      "offset": [
        8822,
        8899
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "461": {
      "fn": "Lottery.getNumWords",
      "offset": [
        8822,
        8899
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1D5"
    },
    "464": {
      "fn": "Lottery.getNumWords",
      "offset": [
        8822,
        8899
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "465": {
      "fn": "Lottery.getNumWords",
      "offset": [
        8822,
        8899
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "467": {
      "fn": "Lottery.getNumWords",
      "offset": [
        8822,
        8899
      ],
      "op": "DUP1",
      "path": "13"
    },
    "468": {
      "fn": "Lottery.getNumWords",
      "offset": [
        8822,
        8899
      ],
      "op": "REVERT",
      "path": "13"
    },
    "469": {
      "fn": "Lottery.getNumWords",
      "offset": [
        8822,
        8899
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "470": {
      "op": "POP"
    },
    "471": {
      "offset": [
        1608,
        1609
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "473": {
      "fn": "Lottery.getNumWords",
      "offset": [
        8822,
        8899
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x139"
    },
    "476": {
      "fn": "Lottery.getNumWords",
      "offset": [
        8822,
        8899
      ],
      "op": "JUMP",
      "path": "13"
    },
    "477": {
      "fn": "Lottery.getNumOfParticipants",
      "offset": [
        8213,
        8306
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "478": {
      "fn": "Lottery.getNumOfParticipants",
      "offset": [
        8213,
        8306
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "479": {
      "fn": "Lottery.getNumOfParticipants",
      "offset": [
        8213,
        8306
      ],
      "op": "DUP1",
      "path": "13"
    },
    "480": {
      "fn": "Lottery.getNumOfParticipants",
      "offset": [
        8213,
        8306
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "481": {
      "fn": "Lottery.getNumOfParticipants",
      "offset": [
        8213,
        8306
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1E9"
    },
    "484": {
      "fn": "Lottery.getNumOfParticipants",
      "offset": [
        8213,
        8306
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "485": {
      "fn": "Lottery.getNumOfParticipants",
      "offset": [
        8213,
        8306
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "487": {
      "fn": "Lottery.getNumOfParticipants",
      "offset": [
        8213,
        8306
      ],
      "op": "DUP1",
      "path": "13"
    },
    "488": {
      "fn": "Lottery.getNumOfParticipants",
      "offset": [
        8213,
        8306
      ],
      "op": "REVERT",
      "path": "13"
    },
    "489": {
      "fn": "Lottery.getNumOfParticipants",
      "offset": [
        8213,
        8306
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "490": {
      "op": "POP"
    },
    "491": {
      "fn": "Lottery.getNumOfParticipants",
      "offset": [
        8286,
        8295
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 1,
      "value": "0x2"
    },
    "493": {
      "fn": "Lottery.getNumOfParticipants",
      "offset": [
        8286,
        8302
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "494": {
      "fn": "Lottery.getNumOfParticipants",
      "offset": [
        8213,
        8306
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x139"
    },
    "497": {
      "fn": "Lottery.getNumOfParticipants",
      "offset": [
        8213,
        8306
      ],
      "op": "JUMP",
      "path": "13"
    },
    "498": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7514,
        7787
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "499": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7514,
        7787
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "500": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7514,
        7787
      ],
      "op": "DUP1",
      "path": "13"
    },
    "501": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7514,
        7787
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "502": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7514,
        7787
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1FE"
    },
    "505": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7514,
        7787
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "506": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7514,
        7787
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "508": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7514,
        7787
      ],
      "op": "DUP1",
      "path": "13"
    },
    "509": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7514,
        7787
      ],
      "op": "REVERT",
      "path": "13"
    },
    "510": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7514,
        7787
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "511": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7514,
        7787
      ],
      "op": "POP",
      "path": "13"
    },
    "512": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7514,
        7787
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x139"
    },
    "515": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7514,
        7787
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x94F"
    },
    "518": {
      "fn": "Lottery.getTreasuryAvg",
      "jump": "i",
      "offset": [
        7514,
        7787
      ],
      "op": "JUMP",
      "path": "13"
    },
    "519": {
      "fn": "Lottery.getRequestConfirmations",
      "offset": [
        8902,
        9003
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "520": {
      "fn": "Lottery.getRequestConfirmations",
      "offset": [
        8902,
        9003
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "521": {
      "fn": "Lottery.getRequestConfirmations",
      "offset": [
        8902,
        9003
      ],
      "op": "DUP1",
      "path": "13"
    },
    "522": {
      "fn": "Lottery.getRequestConfirmations",
      "offset": [
        8902,
        9003
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "523": {
      "fn": "Lottery.getRequestConfirmations",
      "offset": [
        8902,
        9003
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x213"
    },
    "526": {
      "fn": "Lottery.getRequestConfirmations",
      "offset": [
        8902,
        9003
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "527": {
      "fn": "Lottery.getRequestConfirmations",
      "offset": [
        8902,
        9003
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "529": {
      "fn": "Lottery.getRequestConfirmations",
      "offset": [
        8902,
        9003
      ],
      "op": "DUP1",
      "path": "13"
    },
    "530": {
      "fn": "Lottery.getRequestConfirmations",
      "offset": [
        8902,
        9003
      ],
      "op": "REVERT",
      "path": "13"
    },
    "531": {
      "fn": "Lottery.getRequestConfirmations",
      "offset": [
        8902,
        9003
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "532": {
      "op": "POP"
    },
    "533": {
      "offset": [
        1522,
        1523
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "535": {
      "fn": "Lottery.getRequestConfirmations",
      "offset": [
        8902,
        9003
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x139"
    },
    "538": {
      "fn": "Lottery.getRequestConfirmations",
      "offset": [
        8902,
        9003
      ],
      "op": "JUMP",
      "path": "13"
    },
    "539": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8727,
        8819
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "540": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8727,
        8819
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "541": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8727,
        8819
      ],
      "op": "DUP1",
      "path": "13"
    },
    "542": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8727,
        8819
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "543": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8727,
        8819
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x227"
    },
    "546": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8727,
        8819
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "547": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8727,
        8819
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "549": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8727,
        8819
      ],
      "op": "DUP1",
      "path": "13"
    },
    "550": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8727,
        8819
      ],
      "op": "REVERT",
      "path": "13"
    },
    "551": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8727,
        8819
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "552": {
      "op": "POP"
    },
    "553": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8801,
        8815
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 2,
      "value": "0x4"
    },
    "555": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8801,
        8815
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "560": {
      "op": "SHL"
    },
    "561": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8801,
        8815
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "562": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8801,
        8815
      ],
      "op": "DIV",
      "path": "13"
    },
    "563": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8801,
        8815
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "565": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8801,
        8815
      ],
      "op": "AND",
      "path": "13"
    },
    "566": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8727,
        8819
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "568": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8727,
        8819
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "569": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8727,
        8819
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x143"
    },
    "572": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8727,
        8819
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "573": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8727,
        8819
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "574": {
      "fn": "Lottery.getLotteryState",
      "offset": [
        8727,
        8819
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x107D"
    },
    "577": {
      "fn": "Lottery.getLotteryState",
      "jump": "i",
      "offset": [
        8727,
        8819
      ],
      "op": "JUMP",
      "path": "13"
    },
    "578": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "579": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "580": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "DUP1",
      "path": "13"
    },
    "581": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "582": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x24E"
    },
    "585": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "586": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "588": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "DUP1",
      "path": "13"
    },
    "589": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "REVERT",
      "path": "13"
    },
    "590": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "591": {
      "op": "POP"
    },
    "592": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x262"
    },
    "595": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x25D"
    },
    "598": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "599": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "601": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10A5"
    },
    "604": {
      "fn": "Lottery.checkUpkeep",
      "jump": "i",
      "offset": [
        3792,
        4315
      ],
      "op": "JUMP",
      "path": "13"
    },
    "605": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "606": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9E7"
    },
    "609": {
      "fn": "Lottery.checkUpkeep",
      "jump": "i",
      "offset": [
        3792,
        4315
      ],
      "op": "JUMP",
      "path": "13"
    },
    "610": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "611": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "613": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "614": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x143"
    },
    "617": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "618": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "619": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "620": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x113A"
    },
    "623": {
      "fn": "Lottery.checkUpkeep",
      "jump": "i",
      "offset": [
        3792,
        4315
      ],
      "op": "JUMP",
      "path": "13"
    },
    "624": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "625": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "626": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "627": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "628": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27C"
    },
    "631": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "632": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "634": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "635": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "REVERT",
      "path": "0"
    },
    "636": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "637": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "POP",
      "path": "0"
    },
    "638": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15F"
    },
    "641": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA94"
    },
    "644": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "645": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "646": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "647": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "648": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "649": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x291"
    },
    "652": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "653": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "655": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "656": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "REVERT",
      "path": "0"
    },
    "657": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "658": {
      "op": "POP"
    },
    "659": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "661": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 3
    },
    "662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "668": {
      "op": "SHL"
    },
    "669": {
      "op": "SUB"
    },
    "670": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "671": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "672": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "674": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "681": {
      "op": "SHL"
    },
    "682": {
      "op": "SUB"
    },
    "683": {
      "op": "SWAP1"
    },
    "684": {
      "op": "SWAP2"
    },
    "685": {
      "op": "AND"
    },
    "686": {
      "op": "DUP2"
    },
    "687": {
      "op": "MSTORE"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "690": {
      "op": "ADD"
    },
    "691": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143"
    },
    "694": {
      "op": "JUMP"
    },
    "695": {
      "offset": [
        2214,
        2236
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "696": {
      "fn": "Ownable.owner",
      "offset": [
        2214,
        2236
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "697": {
      "fn": "Ownable.owner",
      "offset": [
        2214,
        2236
      ],
      "op": "DUP1",
      "path": "13"
    },
    "698": {
      "fn": "Ownable.owner",
      "offset": [
        2214,
        2236
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "699": {
      "fn": "Ownable.owner",
      "offset": [
        2214,
        2236
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2C3"
    },
    "702": {
      "fn": "Ownable.owner",
      "offset": [
        2214,
        2236
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "703": {
      "fn": "Ownable.owner",
      "offset": [
        2214,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "705": {
      "fn": "Ownable.owner",
      "offset": [
        2214,
        2236
      ],
      "op": "DUP1",
      "path": "13"
    },
    "706": {
      "fn": "Ownable.owner",
      "offset": [
        2214,
        2236
      ],
      "op": "REVERT",
      "path": "13"
    },
    "707": {
      "fn": "Ownable.owner",
      "offset": [
        2214,
        2236
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "708": {
      "op": "POP"
    },
    "709": {
      "offset": [
        2214,
        2236
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2D7"
    },
    "712": {
      "fn": "Ownable.owner",
      "offset": [
        2214,
        2236
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2D2"
    },
    "715": {
      "fn": "Ownable.owner",
      "offset": [
        2214,
        2236
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "716": {
      "fn": "Ownable.owner",
      "offset": [
        2214,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "718": {
      "fn": "Ownable.owner",
      "offset": [
        2214,
        2236
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1199"
    },
    "721": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        2214,
        2236
      ],
      "op": "JUMP",
      "path": "13"
    },
    "722": {
      "fn": "Ownable.owner",
      "offset": [
        2214,
        2236
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "723": {
      "fn": "Ownable.owner",
      "offset": [
        2214,
        2236
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAA8"
    },
    "726": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        2214,
        2236
      ],
      "op": "JUMP",
      "path": "13"
    },
    "727": {
      "fn": "Ownable.owner",
      "offset": [
        2214,
        2236
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "728": {
      "fn": "Ownable.owner",
      "offset": [
        2214,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "730": {
      "fn": "Ownable.owner",
      "offset": [
        2214,
        2236
      ],
      "op": "DUP1",
      "path": "13"
    },
    "731": {
      "fn": "Ownable.owner",
      "offset": [
        2214,
        2236
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "738": {
      "op": "SHL"
    },
    "739": {
      "op": "SUB"
    },
    "740": {
      "op": "SWAP5"
    },
    "741": {
      "op": "DUP6"
    },
    "742": {
      "op": "AND"
    },
    "743": {
      "op": "DUP2"
    },
    "744": {
      "op": "MSTORE"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "747": {
      "op": "DUP2"
    },
    "748": {
      "op": "ADD"
    },
    "749": {
      "op": "SWAP4"
    },
    "750": {
      "op": "SWAP1"
    },
    "751": {
      "op": "SWAP4"
    },
    "752": {
      "op": "MSTORE"
    },
    "753": {
      "op": "SWAP3"
    },
    "754": {
      "op": "AND"
    },
    "755": {
      "op": "SWAP2"
    },
    "756": {
      "op": "DUP2"
    },
    "757": {
      "op": "ADD"
    },
    "758": {
      "op": "SWAP2"
    },
    "759": {
      "op": "SWAP1"
    },
    "760": {
      "op": "SWAP2"
    },
    "761": {
      "op": "MSTORE"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "764": {
      "op": "ADD"
    },
    "765": {
      "offset": [
        2214,
        2236
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x143"
    },
    "768": {
      "op": "JUMP"
    },
    "769": {
      "fn": "Lottery.getRecenetWinner",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "770": {
      "fn": "Lottery.getRecenetWinner",
      "offset": [
        7888,
        7975
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "771": {
      "fn": "Lottery.getRecenetWinner",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "13"
    },
    "772": {
      "fn": "Lottery.getRecenetWinner",
      "offset": [
        7888,
        7975
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "773": {
      "fn": "Lottery.getRecenetWinner",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x30D"
    },
    "776": {
      "fn": "Lottery.getRecenetWinner",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "777": {
      "fn": "Lottery.getRecenetWinner",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "779": {
      "fn": "Lottery.getRecenetWinner",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "13"
    },
    "780": {
      "fn": "Lottery.getRecenetWinner",
      "offset": [
        7888,
        7975
      ],
      "op": "REVERT",
      "path": "13"
    },
    "781": {
      "fn": "Lottery.getRecenetWinner",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "782": {
      "op": "POP"
    },
    "783": {
      "fn": "Lottery.getRecenetWinner",
      "offset": [
        7957,
        7971
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 4,
      "value": "0x4"
    },
    "785": {
      "fn": "Lottery.getRecenetWinner",
      "offset": [
        7957,
        7971
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "792": {
      "op": "SHL"
    },
    "793": {
      "op": "SUB"
    },
    "794": {
      "fn": "Lottery.getRecenetWinner",
      "offset": [
        7957,
        7971
      ],
      "op": "AND",
      "path": "13"
    },
    "795": {
      "fn": "Lottery.getRecenetWinner",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x29F"
    },
    "798": {
      "fn": "Lottery.getRecenetWinner",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMP",
      "path": "13"
    },
    "799": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7790,
        7885
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "800": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7790,
        7885
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "801": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7790,
        7885
      ],
      "op": "DUP1",
      "path": "13"
    },
    "802": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7790,
        7885
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "803": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7790,
        7885
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x32B"
    },
    "806": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7790,
        7885
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "807": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7790,
        7885
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "809": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7790,
        7885
      ],
      "op": "DUP1",
      "path": "13"
    },
    "810": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7790,
        7885
      ],
      "op": "REVERT",
      "path": "13"
    },
    "811": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7790,
        7885
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "812": {
      "op": "POP"
    },
    "813": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7790,
        7885
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x29F"
    },
    "816": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7790,
        7885
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x33A"
    },
    "819": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7790,
        7885
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "820": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7790,
        7885
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "822": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7790,
        7885
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1199"
    },
    "825": {
      "fn": "Lottery.getPlayer",
      "jump": "i",
      "offset": [
        7790,
        7885
      ],
      "op": "JUMP",
      "path": "13"
    },
    "826": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7790,
        7885
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "827": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7790,
        7885
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAE6"
    },
    "830": {
      "fn": "Lottery.getPlayer",
      "jump": "i",
      "offset": [
        7790,
        7885
      ],
      "op": "JUMP",
      "path": "13"
    },
    "831": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "832": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "833": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "DUP1",
      "path": "13"
    },
    "834": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "835": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x34B"
    },
    "838": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "839": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "841": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "DUP1",
      "path": "13"
    },
    "842": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "REVERT",
      "path": "13"
    },
    "843": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "844": {
      "op": "POP"
    },
    "845": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15F"
    },
    "848": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x35A"
    },
    "851": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "852": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "854": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x11B2"
    },
    "857": {
      "fn": "Lottery.setNFTValue",
      "jump": "i",
      "offset": [
        6521,
        6632
      ],
      "op": "JUMP",
      "path": "13"
    },
    "858": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "859": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB16"
    },
    "862": {
      "fn": "Lottery.setNFTValue",
      "jump": "i",
      "offset": [
        6521,
        6632
      ],
      "op": "JUMP",
      "path": "13"
    },
    "863": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "864": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "865": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "DUP1",
      "path": "0"
    },
    "866": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "867": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36B"
    },
    "870": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "871": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "873": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "DUP1",
      "path": "0"
    },
    "874": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "REVERT",
      "path": "0"
    },
    "875": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "876": {
      "op": "POP"
    },
    "877": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15F"
    },
    "880": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37A"
    },
    "883": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "884": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "886": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11E5"
    },
    "889": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "890": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "891": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB23"
    },
    "894": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "895": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "896": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8356,
        8363
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "898": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8372,
        8384
      ],
      "op": "DUP1",
      "path": "13"
    },
    "899": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8409
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "901": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8409
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "903": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8409
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "904": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8409
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "905": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8409
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "906": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8409
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "909": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8409
      ],
      "op": "EXP",
      "path": "13"
    },
    "910": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8409
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "911": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8409
      ],
      "op": "DIV",
      "path": "13"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "918": {
      "op": "SHL"
    },
    "919": {
      "op": "SUB"
    },
    "920": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8409
      ],
      "op": "AND",
      "path": "13"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "927": {
      "op": "SHL"
    },
    "928": {
      "op": "SUB"
    },
    "929": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8425
      ],
      "op": "AND",
      "path": "13"
    },
    "930": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8425
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFEAF968C"
    },
    "935": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "937": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "938": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "DUP2",
      "path": "13"
    },
    "939": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "944": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "AND",
      "path": "13"
    },
    "945": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "947": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "SHL",
      "path": "13"
    },
    "948": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "DUP2",
      "path": "13"
    },
    "949": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "950": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "952": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "ADD",
      "path": "13"
    },
    "953": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "955": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "957": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "958": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "DUP1",
      "path": "13"
    },
    "959": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "DUP4",
      "path": "13"
    },
    "960": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "SUB",
      "path": "13"
    },
    "961": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "DUP2",
      "path": "13"
    },
    "962": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "DUP7",
      "path": "13"
    },
    "963": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "GAS",
      "path": "13"
    },
    "964": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "965": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "966": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "DUP1",
      "path": "13"
    },
    "967": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "968": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3D5"
    },
    "971": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "972": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "973": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "975": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "DUP1",
      "path": "13"
    },
    "976": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "977": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "978": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "980": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "REVERT",
      "path": "13"
    },
    "981": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "982": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "POP",
      "path": "13"
    },
    "983": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "POP",
      "path": "13"
    },
    "984": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "POP",
      "path": "13"
    },
    "985": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "POP",
      "path": "13"
    },
    "986": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "988": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "989": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "990": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "992": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "NOT",
      "path": "13"
    },
    "993": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "995": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "DUP3",
      "path": "13"
    },
    "996": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "ADD",
      "path": "13"
    },
    "997": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "AND",
      "path": "13"
    },
    "998": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "DUP3",
      "path": "13"
    },
    "999": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "ADD",
      "path": "13"
    },
    "1000": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1001": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1003": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1004": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "POP",
      "path": "13"
    },
    "1005": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1006": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "ADD",
      "path": "13"
    },
    "1007": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1008": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3F9"
    },
    "1011": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1012": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1013": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1221"
    },
    "1016": {
      "fn": "Lottery.getEntranceFee",
      "jump": "i",
      "offset": [
        8394,
        8427
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1017": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8394,
        8427
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1018": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8369,
        8427
      ],
      "op": "POP",
      "path": "13"
    },
    "1019": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8369,
        8427
      ],
      "op": "POP",
      "path": "13"
    },
    "1020": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8369,
        8427
      ],
      "op": "POP",
      "path": "13"
    },
    "1021": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8369,
        8427
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1022": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8369,
        8427
      ],
      "op": "POP",
      "path": "13"
    },
    "1023": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8369,
        8427
      ],
      "op": "POP",
      "path": "13"
    },
    "1024": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8476,
        8497
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1026": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8508,
        8513
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1027": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8517,
        8523
      ],
      "op": "PUSH5",
      "path": "13",
      "value": "0x2540BE400"
    },
    "1033": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8500,
        8523
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x412"
    },
    "1036": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8500,
        8523
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1037": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8500,
        8523
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1038": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8500,
        8523
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1287"
    },
    "1041": {
      "fn": "Lottery.getEntranceFee",
      "jump": "i",
      "offset": [
        8500,
        8523
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1042": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8500,
        8523
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1043": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8476,
        8523
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1044": {
      "op": "POP"
    },
    "1045": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8583,
        8602
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1047": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8476,
        8523
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1048": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8606,
        8632
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x449"
    },
    "1051": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8606,
        8623
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x0"
    },
    "1084": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8626,
        8632
      ],
      "op": "PUSH8",
      "path": "13",
      "value": "0xDE0B6B3A7640000"
    },
    "1093": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8606,
        8632
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1287"
    },
    "1096": {
      "fn": "Lottery.getEntranceFee",
      "jump": "i",
      "offset": [
        8606,
        8632
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1097": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8606,
        8632
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1098": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8605,
        8649
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x453"
    },
    "1101": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8605,
        8649
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1102": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8605,
        8649
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1103": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8605,
        8649
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12BC"
    },
    "1106": {
      "fn": "Lottery.getEntranceFee",
      "jump": "i",
      "offset": [
        8605,
        8649
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1107": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8605,
        8649
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1108": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8583,
        8649
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "1109": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        8309,
        8724
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1110": {
      "op": "POP"
    },
    "1111": {
      "op": "POP"
    },
    "1112": {
      "op": "POP"
    },
    "1113": {
      "op": "POP"
    },
    "1114": {
      "fn": "Lottery.getEntranceFee",
      "jump": "o",
      "offset": [
        8309,
        8724
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1115": {
      "fn": "Lottery.enterLottery",
      "offset": [
        4998,
        6283
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1116": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5112,
        5132
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 5,
      "value": "0x1"
    },
    "1118": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5094,
        5108
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1120": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5094,
        5108
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1125": {
      "op": "SHL"
    },
    "1126": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5094,
        5108
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1127": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5094,
        5108
      ],
      "op": "DIV",
      "path": "13"
    },
    "1128": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5094,
        5108
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1130": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5094,
        5108
      ],
      "op": "AND",
      "path": "13"
    },
    "1131": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5094,
        5132
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1133": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5094,
        5132
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1134": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5094,
        5132
      ],
      "op": "GT",
      "path": "13"
    },
    "1135": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5094,
        5132
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1136": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5094,
        5132
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x47B"
    },
    "1139": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5094,
        5132
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1140": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5094,
        5132
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x47B"
    },
    "1143": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5094,
        5132
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1067"
    },
    "1146": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        5094,
        5132
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1147": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5094,
        5132
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1148": {
      "branch": 45,
      "fn": "Lottery.enterLottery",
      "offset": [
        5094,
        5132
      ],
      "op": "EQ",
      "path": "13"
    },
    "1149": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5090,
        5176
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1150": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5090,
        5176
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x49A"
    },
    "1153": {
      "branch": 45,
      "fn": "Lottery.enterLottery",
      "offset": [
        5090,
        5176
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1154": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5146,
        5171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1156": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5146,
        5171
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1157": {
      "op": "PUSH4",
      "value": "0x16D60D65"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1164": {
      "op": "SHL"
    },
    "1165": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5146,
        5171
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1166": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5146,
        5171
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1167": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5146,
        5171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1169": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5146,
        5171
      ],
      "op": "ADD",
      "path": "13"
    },
    "1170": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5146,
        5171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1172": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5146,
        5171
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1173": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5146,
        5171
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1174": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5146,
        5171
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1175": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5146,
        5171
      ],
      "op": "SUB",
      "path": "13"
    },
    "1176": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5146,
        5171
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1177": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5146,
        5171
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1178": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5090,
        5176
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1179": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5315,
        5320
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 6,
      "value": "0x1"
    },
    "1181": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5315,
        5350
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1182": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5315,
        5350
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1189": {
      "op": "SHL"
    },
    "1190": {
      "op": "SUB"
    },
    "1191": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5315,
        5350
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1192": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5315,
        5350
      ],
      "op": "AND",
      "path": "13"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1199": {
      "op": "SHL"
    },
    "1200": {
      "op": "SUB"
    },
    "1201": {
      "op": "NOT"
    },
    "1202": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5315,
        5350
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1203": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5315,
        5350
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1204": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5315,
        5350
      ],
      "op": "AND",
      "path": "13"
    },
    "1205": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5315,
        5350
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1206": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5315,
        5350
      ],
      "op": "OR",
      "path": "13"
    },
    "1207": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5315,
        5350
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1208": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5315,
        5350
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1209": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5315,
        5350
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1210": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5407,
        5418
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 7,
      "value": "0x6"
    },
    "1212": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5407,
        5453
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1213": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5407,
        5453
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1214": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5407,
        5453
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1215": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5407,
        5453
      ],
      "op": "AND",
      "path": "13"
    },
    "1216": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5407,
        5453
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1217": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5407,
        5453
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1218": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5407,
        5453
      ],
      "op": "OR",
      "path": "13"
    },
    "1219": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5407,
        5453
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1220": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5407,
        5453
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1221": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5407,
        5453
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1222": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5457,
        5477
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 8,
      "value": "0x7"
    },
    "1224": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5457,
        5488
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1225": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5457,
        5488
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1226": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5457,
        5488
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1227": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5492,
        5510
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 9,
      "value": "0x8"
    },
    "1229": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5492,
        5523
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1230": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5492,
        5523
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1231": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5492,
        5523
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1232": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5492,
        5523
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1233": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5492,
        5523
      ],
      "op": "AND",
      "path": "13"
    },
    "1234": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5513,
        5523
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1235": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5492,
        5523
      ],
      "op": "OR",
      "path": "13"
    },
    "1236": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5492,
        5523
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1237": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5492,
        5523
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1238": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5570,
        5579
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x9"
    },
    "1240": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5570,
        5586
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1241": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5566,
        6015
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x522"
    },
    "1244": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5566,
        6015
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1245": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5619,
        5636
      ],
      "op": "PUSH32",
      "path": "13",
      "statement": 10,
      "value": "0x0"
    },
    "1278": {
      "fn": "Lottery.getNFTValue",
      "offset": [
        8077,
        8078
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 11,
      "value": "0x1"
    },
    "1280": {
      "branch": 46,
      "fn": "Lottery.enterLottery",
      "offset": [
        5602,
        5636
      ],
      "op": "LT",
      "path": "13"
    },
    "1281": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5598,
        5682
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x51D"
    },
    "1284": {
      "branch": 46,
      "fn": "Lottery.enterLottery",
      "offset": [
        5598,
        5682
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1285": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5651,
        5676
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1287": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5651,
        5676
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1288": {
      "op": "PUSH4",
      "value": "0x1BFBB561"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1295": {
      "op": "SHL"
    },
    "1296": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5651,
        5676
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1297": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5651,
        5676
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1298": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5651,
        5676
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1300": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5651,
        5676
      ],
      "op": "ADD",
      "path": "13"
    },
    "1301": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5651,
        5676
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1303": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5651,
        5676
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1304": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5651,
        5676
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1305": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5651,
        5676
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1306": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5651,
        5676
      ],
      "op": "SUB",
      "path": "13"
    },
    "1307": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5651,
        5676
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1308": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5651,
        5676
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1309": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5598,
        5682
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1310": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5566,
        6015
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x56F"
    },
    "1313": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5566,
        6015
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1314": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5566,
        6015
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1315": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5823,
        5915
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 12,
      "value": "0x552"
    },
    "1318": {
      "fn": "Lottery.getNFTValue",
      "offset": [
        8077,
        8078
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1320": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5864,
        5880
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x52F"
    },
    "1323": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5864,
        5878
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x94F"
    },
    "1326": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        5864,
        5880
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1327": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5864,
        5880
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1328": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5859,
        5880
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x53A"
    },
    "1331": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5859,
        5880
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1332": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5859,
        5861
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x55"
    },
    "1334": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5859,
        5880
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12D0"
    },
    "1337": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        5859,
        5880
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1338": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5859,
        5880
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1339": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5893,
        5909
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x542"
    },
    "1342": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5893,
        5907
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x94F"
    },
    "1345": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        5893,
        5909
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1346": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5893,
        5909
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1347": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5887,
        5909
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x54D"
    },
    "1350": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5887,
        5909
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1351": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5887,
        5890
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x73"
    },
    "1353": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5887,
        5909
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12D0"
    },
    "1356": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        5887,
        5909
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1357": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5887,
        5909
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1358": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5823,
        5832
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB9C"
    },
    "1361": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        5823,
        5915
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1362": {
      "branch": 47,
      "fn": "Lottery.enterLottery",
      "offset": [
        5823,
        5915
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1363": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5813,
        5967
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x56F"
    },
    "1366": {
      "branch": 47,
      "fn": "Lottery.enterLottery",
      "offset": [
        5813,
        5967
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1367": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5934,
        5961
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1369": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5934,
        5961
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1370": {
      "op": "PUSH4",
      "value": "0x9FD0F743"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1377": {
      "op": "SHL"
    },
    "1378": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5934,
        5961
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1379": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5934,
        5961
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1380": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5934,
        5961
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1382": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5934,
        5961
      ],
      "op": "ADD",
      "path": "13"
    },
    "1383": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5934,
        5961
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1385": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5934,
        5961
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1386": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5934,
        5961
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1387": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5934,
        5961
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1388": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5934,
        5961
      ],
      "op": "SUB",
      "path": "13"
    },
    "1389": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5934,
        5961
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1390": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5934,
        5961
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1391": {
      "fn": "Lottery.enterLottery",
      "offset": [
        5813,
        5967
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1392": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6023
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 13,
      "value": "0x1"
    },
    "1394": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6023
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1395": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1397": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1398": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1405": {
      "op": "SHL"
    },
    "1406": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1407": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1408": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6037,
        6047
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1409": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1411": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1412": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "ADD",
      "path": "13"
    },
    "1413": {
      "op": "MSTORE"
    },
    "1414": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6057,
        6061
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1417": {
      "op": "DUP3"
    },
    "1418": {
      "op": "ADD"
    },
    "1419": {
      "op": "MSTORE"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1422": {
      "op": "DUP2"
    },
    "1423": {
      "op": "ADD"
    },
    "1424": {
      "op": "DUP4"
    },
    "1425": {
      "op": "SWAP1"
    },
    "1426": {
      "op": "MSTORE"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1433": {
      "op": "SHL"
    },
    "1434": {
      "op": "SUB"
    },
    "1435": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6023
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1436": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6023
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1437": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6023
      ],
      "op": "AND",
      "path": "13"
    },
    "1438": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6023
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1439": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6036
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x23B872DD"
    },
    "1444": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6036
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1447": {
      "op": "ADD"
    },
    "1448": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1450": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1452": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1453": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1454": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1455": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "SUB",
      "path": "13"
    },
    "1456": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1457": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1459": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "DUP8",
      "path": "13"
    },
    "1460": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1461": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "1462": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1463": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1464": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1465": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5C1"
    },
    "1468": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1469": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1471": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1472": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1473": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1474": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "POP",
      "path": "13"
    },
    "1475": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "GAS",
      "path": "13"
    },
    "1476": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "CALL",
      "path": "13"
    },
    "1477": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1478": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1479": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1480": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5D5"
    },
    "1483": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1484": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1485": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1487": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1488": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "1489": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1490": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1492": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1493": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6018,
        6073
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1494": {
      "op": "POP"
    },
    "1495": {
      "op": "POP"
    },
    "1496": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6086
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 14,
      "value": "0x9"
    },
    "1498": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1499": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1500": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1502": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1503": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1504": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "ADD",
      "path": "13"
    },
    "1505": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1506": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1507": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1508": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6092,
        6103
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x6"
    },
    "1510": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1511": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "1513": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1514": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1515": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "MUL",
      "path": "13"
    },
    "1516": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF"
    },
    "1549": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1550": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "ADD",
      "path": "13"
    },
    "1551": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1552": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1559": {
      "op": "SHL"
    },
    "1560": {
      "op": "SUB"
    },
    "1561": {
      "op": "NOT"
    },
    "1562": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1563": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1564": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "AND",
      "path": "13"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1571": {
      "op": "SHL"
    },
    "1572": {
      "op": "SUB"
    },
    "1573": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "1574": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "DUP6",
      "path": "13"
    },
    "1575": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "AND",
      "path": "13"
    },
    "1576": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "OR",
      "path": "13"
    },
    "1577": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1578": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1579": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1580": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "1582": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1583": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B0"
    },
    "1616": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1617": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "ADD",
      "path": "13"
    },
    "1618": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1619": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "1621": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1622": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B1"
    },
    "1655": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1656": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1657": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "ADD",
      "path": "13"
    },
    "1658": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1659": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1660": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1661": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "AND",
      "path": "13"
    },
    "1662": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1663": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1664": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "AND",
      "path": "13"
    },
    "1665": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1666": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1667": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1668": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "OR",
      "path": "13"
    },
    "1669": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1670": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1671": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1672": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6077,
        6104
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1674": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 15
    },
    "1675": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1676": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1677": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1678": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "ADD",
      "path": "13"
    },
    "1679": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1680": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1683": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1684": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1685": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1686": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
    },
    "1719": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1720": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1721": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "ADD",
      "path": "13"
    },
    "1722": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1723": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1724": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1725": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1726": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "AND",
      "path": "13"
    },
    "1727": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6160,
        6170
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1728": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1729": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1730": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "OR",
      "path": "13"
    },
    "1731": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1732": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1733": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6137,
        6172
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1734": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6225,
        6279
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 16,
      "value": "0x40"
    },
    "1736": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6225,
        6279
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1737": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6270,
        6278
      ],
      "op": "DUP7",
      "path": "13"
    },
    "1738": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6270,
        6278
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "1739": {
      "op": "POP"
    },
    "1740": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6225,
        6279
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1741": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6225,
        6279
      ],
      "op": "DUP8",
      "path": "13"
    },
    "1742": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6225,
        6279
      ],
      "op": "AND",
      "path": "13"
    },
    "1743": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6225,
        6279
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1744": {
      "op": "POP"
    },
    "1745": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6160,
        6170
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1746": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6225,
        6279
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x8A55A3FC25C5DA9CEE33CC44A5E2F374DA2C9CF5DEB3CE9A346AA77E464700BC"
    },
    "1779": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6225,
        6279
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1780": {
      "fn": "Lottery.enterLottery",
      "offset": [
        6225,
        6279
      ],
      "op": "LOG4",
      "path": "13"
    },
    "1781": {
      "fn": "Lottery.enterLottery",
      "offset": [
        4998,
        6283
      ],
      "op": "POP",
      "path": "13"
    },
    "1782": {
      "fn": "Lottery.enterLottery",
      "offset": [
        4998,
        6283
      ],
      "op": "POP",
      "path": "13"
    },
    "1783": {
      "fn": "Lottery.enterLottery",
      "jump": "o",
      "offset": [
        4998,
        6283
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1784": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1785": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6717,
        6727
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 17
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1792": {
      "op": "SHL"
    },
    "1793": {
      "op": "SUB"
    },
    "1794": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6731,
        6745
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1827": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6717,
        6745
      ],
      "op": "AND",
      "path": "6"
    },
    "1828": {
      "branch": 55,
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6717,
        6745
      ],
      "op": "EQ",
      "path": "6"
    },
    "1829": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6713,
        6822
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x777"
    },
    "1832": {
      "branch": 55,
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6713,
        6822
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1833": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1835": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1836": {
      "op": "PUSH4",
      "value": "0x73E64FD"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1843": {
      "op": "SHL"
    },
    "1844": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1845": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1846": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6788,
        6798
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1847": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1849": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1850": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "ADD",
      "path": "6"
    },
    "1851": {
      "op": "MSTORE"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1858": {
      "op": "SHL"
    },
    "1859": {
      "op": "SUB"
    },
    "1860": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6800,
        6814
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1893": {
      "op": "AND"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1896": {
      "op": "DUP3"
    },
    "1897": {
      "op": "ADD"
    },
    "1898": {
      "op": "MSTORE"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1901": {
      "op": "ADD"
    },
    "1902": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1903": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1905": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1906": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1907": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1908": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "SUB",
      "path": "6"
    },
    "1909": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1910": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1911": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6713,
        6822
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1912": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6827,
        6869
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 18,
      "value": "0x781"
    },
    "1915": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6846,
        6855
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1916": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6857,
        6868
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1917": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6827,
        6845
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBBF"
    },
    "1920": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "jump": "i",
      "offset": [
        6827,
        6869
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1921": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6827,
        6869
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1922": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "POP",
      "path": "6"
    },
    "1923": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "POP",
      "path": "6"
    },
    "1924": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "jump": "o",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1925": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1926": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4561,
        4573
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1928": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4561,
        4573
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1929": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4561,
        4573
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1930": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4526,
        4543
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1932": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4561,
        4573
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1933": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4561,
        4573
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1934": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4561,
        4573
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1935": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4561,
        4573
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1937": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4561,
        4573
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1938": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4561,
        4573
      ],
      "op": "ADD",
      "path": "13"
    },
    "1939": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4561,
        4573
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1940": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4561,
        4573
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1941": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4561,
        4573
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1942": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4549,
        4574
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x79E"
    },
    "1945": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4549,
        4574
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1946": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4549,
        4560
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9E7"
    },
    "1949": {
      "fn": "Lottery.performUpkeep",
      "jump": "i",
      "offset": [
        4549,
        4574
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1950": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4549,
        4574
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1951": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4525,
        4574
      ],
      "op": "POP",
      "path": "13"
    },
    "1952": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4525,
        4574
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1953": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4525,
        4574
      ],
      "op": "POP",
      "path": "13"
    },
    "1954": {
      "branch": 48,
      "fn": "Lottery.performUpkeep",
      "offset": [
        4583,
        4595
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 19
    },
    "1955": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4578,
        4787
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7F7"
    },
    "1958": {
      "branch": 48,
      "fn": "Lottery.performUpkeep",
      "offset": [
        4578,
        4787
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1959": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4710,
        4719
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x9"
    },
    "1961": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4710,
        4726
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1962": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4732,
        4741
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1964": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4732,
        4748
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1965": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4732,
        4748
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1966": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4762,
        4776
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1968": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4762,
        4776
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1969": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4732,
        4748
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1970": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4732,
        4748
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1975": {
      "op": "SHL"
    },
    "1976": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4762,
        4776
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1977": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4762,
        4776
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1978": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4762,
        4776
      ],
      "op": "DIV",
      "path": "13"
    },
    "1979": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4762,
        4776
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1981": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4762,
        4776
      ],
      "op": "AND",
      "path": "13"
    },
    "1982": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4762,
        4776
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1983": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4754,
        4777
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1984": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4754,
        4777
      ],
      "op": "GT",
      "path": "13"
    },
    "1985": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4754,
        4777
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1986": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4754,
        4777
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7CD"
    },
    "1989": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4754,
        4777
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1990": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4754,
        4777
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7CD"
    },
    "1993": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4754,
        4777
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1067"
    },
    "1996": {
      "fn": "Lottery.performUpkeep",
      "jump": "i",
      "offset": [
        4754,
        4777
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1997": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4754,
        4777
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1998": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4680,
        4782
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2000": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4680,
        4782
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2001": {
      "op": "PUSH4",
      "value": "0xA9E3CFEF"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2008": {
      "op": "SHL"
    },
    "2009": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4680,
        4782
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2010": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4680,
        4782
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2011": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4680,
        4782
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2013": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4680,
        4782
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2014": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4680,
        4782
      ],
      "op": "ADD",
      "path": "13"
    },
    "2015": {
      "op": "SWAP4"
    },
    "2016": {
      "op": "SWAP1"
    },
    "2017": {
      "op": "SWAP4"
    },
    "2018": {
      "op": "MSTORE"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2021": {
      "op": "DUP4"
    },
    "2022": {
      "op": "ADD"
    },
    "2023": {
      "op": "SWAP2"
    },
    "2024": {
      "op": "SWAP1"
    },
    "2025": {
      "op": "SWAP2"
    },
    "2026": {
      "op": "MSTORE"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2029": {
      "op": "DUP3"
    },
    "2030": {
      "op": "ADD"
    },
    "2031": {
      "op": "MSTORE"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2034": {
      "op": "ADD"
    },
    "2035": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4680,
        4782
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x76E"
    },
    "2038": {
      "op": "JUMP"
    },
    "2039": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4578,
        4787
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2040": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2042": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2043": {
      "op": "PUSH4",
      "value": "0x5D3B1D3"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "2050": {
      "op": "SHL"
    },
    "2051": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2052": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2053": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4851,
        4860
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x0"
    },
    "2086": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2088": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2089": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "ADD",
      "path": "13"
    },
    "2090": {
      "op": "MSTORE"
    },
    "2091": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2100": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4865,
        4881
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x0"
    },
    "2133": {
      "op": "AND"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2136": {
      "op": "DUP3"
    },
    "2137": {
      "op": "ADD"
    },
    "2138": {
      "op": "MSTORE"
    },
    "2139": {
      "offset": [
        1522,
        1523
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2143": {
      "op": "DUP3"
    },
    "2144": {
      "op": "ADD"
    },
    "2145": {
      "op": "MSTORE"
    },
    "2146": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "2151": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4912,
        4930
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x0"
    },
    "2184": {
      "op": "AND"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2187": {
      "op": "DUP3"
    },
    "2188": {
      "op": "ADD"
    },
    "2189": {
      "op": "MSTORE"
    },
    "2190": {
      "offset": [
        1608,
        1609
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2194": {
      "op": "DUP3"
    },
    "2195": {
      "op": "ADD"
    },
    "2196": {
      "op": "MSTORE"
    },
    "2197": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4791,
        4808
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2199": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4791,
        4808
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2200": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4827
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x0"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2239": {
      "op": "SHL"
    },
    "2240": {
      "op": "SUB"
    },
    "2241": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4846
      ],
      "op": "AND",
      "path": "13"
    },
    "2242": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4846
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2243": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4846
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x5D3B1D30"
    },
    "2248": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4846
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2249": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "2251": {
      "op": "ADD"
    },
    "2252": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2254": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2256": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2257": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2258": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2259": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "SUB",
      "path": "13"
    },
    "2260": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2261": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2263": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2264": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "GAS",
      "path": "13"
    },
    "2265": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "CALL",
      "path": "13"
    },
    "2266": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2267": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2268": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2269": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8EA"
    },
    "2272": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2273": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2274": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2276": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2277": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2278": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2279": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2281": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2282": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2283": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "POP",
      "path": "13"
    },
    "2284": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "POP",
      "path": "13"
    },
    "2285": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "POP",
      "path": "13"
    },
    "2286": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "POP",
      "path": "13"
    },
    "2287": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2289": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2290": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2291": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2293": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "NOT",
      "path": "13"
    },
    "2294": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2296": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2297": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "ADD",
      "path": "13"
    },
    "2298": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "AND",
      "path": "13"
    },
    "2299": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2300": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "ADD",
      "path": "13"
    },
    "2301": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2302": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2304": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2305": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "POP",
      "path": "13"
    },
    "2306": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2307": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "ADD",
      "path": "13"
    },
    "2308": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2309": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x90E"
    },
    "2312": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2313": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2314": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12E4"
    },
    "2317": {
      "fn": "Lottery.performUpkeep",
      "jump": "i",
      "offset": [
        4811,
        4948
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2318": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4811,
        4948
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2319": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4791,
        4948
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2320": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4791,
        4948
      ],
      "op": "POP",
      "path": "13"
    },
    "2321": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4958,
        4991
      ],
      "op": "PUSH32",
      "path": "13",
      "statement": 20,
      "value": "0x8436886E362E85384C64D5AF46721D434CB451102C48870819D9F8420F553176"
    },
    "2354": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4981,
        4990
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2355": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4958,
        4991
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2357": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4958,
        4991
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2358": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4958,
        4991
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x941"
    },
    "2361": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4958,
        4991
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2362": {
      "op": "DUP2"
    },
    "2363": {
      "op": "MSTORE"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2366": {
      "op": "ADD"
    },
    "2367": {
      "op": "SWAP1"
    },
    "2368": {
      "op": "JUMP"
    },
    "2369": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4958,
        4991
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2370": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4958,
        4991
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2372": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4958,
        4991
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2373": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4958,
        4991
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2374": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4958,
        4991
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2375": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4958,
        4991
      ],
      "op": "SUB",
      "path": "13"
    },
    "2376": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4958,
        4991
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2377": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4958,
        4991
      ],
      "op": "LOG1",
      "path": "13"
    },
    "2378": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4521,
        4995
      ],
      "op": "POP",
      "path": "13"
    },
    "2379": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4521,
        4995
      ],
      "op": "POP",
      "path": "13"
    },
    "2380": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "POP",
      "path": "13"
    },
    "2381": {
      "fn": "Lottery.performUpkeep",
      "offset": [
        4441,
        4995
      ],
      "op": "POP",
      "path": "13"
    },
    "2382": {
      "fn": "Lottery.performUpkeep",
      "jump": "o",
      "offset": [
        4441,
        4995
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2383": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7514,
        7787
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2384": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7556,
        7563
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2386": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7556,
        7563
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2387": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7556,
        7563
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2388": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7588,
        7770
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2389": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7650,
        7659
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x9"
    },
    "2391": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7650,
        7666
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2392": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7630,
        7666
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2393": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7630,
        7666
      ],
      "op": "GT",
      "path": "13"
    },
    "2394": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7588,
        7770
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9E1"
    },
    "2397": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7588,
        7770
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2398": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7722
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 21,
      "value": "0x9"
    },
    "2400": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7723,
        7739
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2401": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2402": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2403": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2404": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "LT",
      "path": "13"
    },
    "2405": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x970"
    },
    "2408": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2409": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x970"
    },
    "2412": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12FD"
    },
    "2415": {
      "fn": "Lottery.getTreasuryAvg",
      "jump": "i",
      "offset": [
        7713,
        7740
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2416": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2417": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2419": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2420": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2421": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2422": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2424": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2425": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2426": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2427": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "2429": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2430": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2431": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "MUL",
      "path": "13"
    },
    "2432": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7713,
        7740
      ],
      "op": "ADD",
      "path": "13"
    },
    "2433": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2434": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2435": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7710
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x6"
    },
    "2437": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2438": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2445": {
      "op": "SHL"
    },
    "2446": {
      "op": "SUB"
    },
    "2447": {
      "op": "NOT"
    },
    "2448": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2449": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2450": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "AND",
      "path": "13"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2457": {
      "op": "SHL"
    },
    "2458": {
      "op": "SUB"
    },
    "2459": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2460": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2461": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "AND",
      "path": "13"
    },
    "2462": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "OR",
      "path": "13"
    },
    "2463": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2464": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2465": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2466": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2468": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2469": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "ADD",
      "path": "13"
    },
    "2470": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2471": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "2473": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2474": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2476": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2477": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2478": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "ADD",
      "path": "13"
    },
    "2479": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2480": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "2482": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2483": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2484": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2485": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2486": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "AND",
      "path": "13"
    },
    "2487": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2488": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "AND",
      "path": "13"
    },
    "2489": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "OR",
      "path": "13"
    },
    "2490": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2491": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7699,
        7740
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2492": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7752,
        7765
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 22,
      "value": "0x9C3"
    },
    "2495": {
      "fn": "Lottery.getNFTValue",
      "offset": [
        8077,
        8078
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2497": {
      "fn": "Lottery.getNFTValue",
      "offset": [
        8077,
        8078
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2498": {
      "fn": "Lottery.getNFTValue",
      "offset": [
        8013,
        8082
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2499": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7752,
        7765
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2500": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7745,
        7765
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9CD"
    },
    "2503": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7745,
        7765
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2504": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7745,
        7765
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2505": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7745,
        7765
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1313"
    },
    "2508": {
      "fn": "Lottery.getTreasuryAvg",
      "jump": "i",
      "offset": [
        7745,
        7765
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2509": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7745,
        7765
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2510": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7745,
        7765
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2511": {
      "op": "POP"
    },
    "2512": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7671,
        7689
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 23
    },
    "2513": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7671,
        7689
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9D9"
    },
    "2516": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7671,
        7689
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2517": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7671,
        7689
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x132B"
    },
    "2520": {
      "fn": "Lottery.getTreasuryAvg",
      "jump": "i",
      "offset": [
        7671,
        7689
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2521": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7671,
        7689
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2522": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7671,
        7689
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2523": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7671,
        7689
      ],
      "op": "POP",
      "path": "13"
    },
    "2524": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7671,
        7689
      ],
      "op": "POP",
      "path": "13"
    },
    "2525": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7588,
        7770
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x954"
    },
    "2528": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7588,
        7770
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2529": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7588,
        7770
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2530": {
      "op": "POP"
    },
    "2531": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7780,
        7783
      ],
      "op": "SWAP2",
      "path": "13",
      "statement": 24
    },
    "2532": {
      "fn": "Lottery.getTreasuryAvg",
      "offset": [
        7514,
        7787
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2533": {
      "op": "POP"
    },
    "2534": {
      "fn": "Lottery.getTreasuryAvg",
      "jump": "o",
      "offset": [
        7514,
        7787
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2535": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2536": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3888,
        3905
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2538": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3910,
        3922
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "2540": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3888,
        3905
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2541": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3888,
        3905
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2542": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3963,
        3977
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2544": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3963,
        3977
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2549": {
      "op": "SHL"
    },
    "2550": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3963,
        3977
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2551": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3963,
        3977
      ],
      "op": "DIV",
      "path": "13"
    },
    "2552": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3963,
        3977
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "2554": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3963,
        3977
      ],
      "op": "AND",
      "path": "13"
    },
    "2555": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3963,
        3999
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2557": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3963,
        3999
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2558": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3963,
        3999
      ],
      "op": "GT",
      "path": "13"
    },
    "2559": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3963,
        3999
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2560": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3963,
        3999
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA0B"
    },
    "2563": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3963,
        3999
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2564": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3963,
        3999
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA0B"
    },
    "2567": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3963,
        3999
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1067"
    },
    "2570": {
      "fn": "Lottery.checkUpkeep",
      "jump": "i",
      "offset": [
        3963,
        3999
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2571": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3963,
        3999
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2572": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3963,
        3999
      ],
      "op": "EQ",
      "path": "13"
    },
    "2573": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3948,
        4000
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2574": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3948,
        4000
      ],
      "op": "POP",
      "path": "13"
    },
    "2575": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4004,
        4019
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2577": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4062,
        4072
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x0"
    },
    "2610": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4042,
        4057
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "2612": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4042,
        4057
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2613": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4024,
        4039
      ],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "2614": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4024,
        4057
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA3F"
    },
    "2617": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4024,
        4057
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2618": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4024,
        4057
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2619": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4024,
        4057
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1346"
    },
    "2622": {
      "fn": "Lottery.checkUpkeep",
      "jump": "i",
      "offset": [
        4024,
        4057
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2623": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4024,
        4057
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2624": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4096,
        4105
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2626": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4096,
        4112
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2627": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4140,
        4149
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x9"
    },
    "2629": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4140,
        4156
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2630": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4023,
        4072
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2631": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4023,
        4072
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2632": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4023,
        4072
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2633": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4023,
        4072
      ],
      "op": "LT",
      "path": "13"
    },
    "2634": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4023,
        4072
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2635": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4023,
        4072
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2636": {
      "op": "POP"
    },
    "2637": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4096,
        4116
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2638": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4096,
        4116
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2639": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4096,
        4116
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2640": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4140,
        4160
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2641": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4140,
        4160
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2642": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4231,
        4237
      ],
      "op": "DUP4",
      "path": "13",
      "statement": 25
    },
    "2643": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4231,
        4251
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2644": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4231,
        4251
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2645": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4231,
        4251
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA5B"
    },
    "2648": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4231,
        4251
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2649": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4231,
        4251
      ],
      "op": "POP",
      "path": "13"
    },
    "2650": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4241,
        4251
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2651": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4231,
        4251
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2652": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4231,
        4265
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2653": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4231,
        4265
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2654": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4231,
        4265
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA64"
    },
    "2657": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4231,
        4265
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2658": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4231,
        4265
      ],
      "op": "POP",
      "path": "13"
    },
    "2659": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4255,
        4265
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2660": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4231,
        4265
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2661": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4231,
        4279
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2662": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4231,
        4279
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2663": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4231,
        4279
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA6D"
    },
    "2666": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4231,
        4279
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2667": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4231,
        4279
      ],
      "op": "POP",
      "path": "13"
    },
    "2668": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4269,
        4279
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2669": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4231,
        4279
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2670": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4284,
        4311
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 26,
      "value": "0x40"
    },
    "2672": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4284,
        4311
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2673": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4284,
        4311
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2674": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4284,
        4311
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2675": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4284,
        4311
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2676": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4284,
        4311
      ],
      "op": "ADD",
      "path": "13"
    },
    "2677": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4284,
        4311
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2678": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4284,
        4311
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2679": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4284,
        4311
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2680": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4284,
        4311
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2682": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4284,
        4311
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2683": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4284,
        4311
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2684": {
      "op": "PUSH2",
      "value": "0x60F"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0xF3"
    },
    "2689": {
      "op": "SHL"
    },
    "2690": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4284,
        4311
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2692": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4284,
        4311
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2693": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4284,
        4311
      ],
      "op": "ADD",
      "path": "13"
    },
    "2694": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4284,
        4311
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2695": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4215,
        4280
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2696": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4215,
        4280
      ],
      "op": "SWAP9",
      "path": "13"
    },
    "2697": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4284,
        4311
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2698": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        4284,
        4311
      ],
      "op": "SWAP8",
      "path": "13"
    },
    "2699": {
      "op": "POP"
    },
    "2700": {
      "fn": "Lottery.checkUpkeep",
      "offset": [
        3792,
        4315
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "2701": {
      "op": "POP"
    },
    "2702": {
      "op": "POP"
    },
    "2703": {
      "op": "POP"
    },
    "2704": {
      "op": "POP"
    },
    "2705": {
      "op": "POP"
    },
    "2706": {
      "op": "POP"
    },
    "2707": {
      "fn": "Lottery.checkUpkeep",
      "jump": "o",
      "offset": [
        3792,
        4315
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2708": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2709": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9C"
    },
    "2712": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD92"
    },
    "2715": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2716": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2717": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 27,
      "value": "0xAA6"
    },
    "2720": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2722": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDEC"
    },
    "2725": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2726": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2727": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2728": {
      "offset": [
        2214,
        2236
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2729": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x9"
    },
    "2731": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2732": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2733": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2734": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2735": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "LT",
      "path": "13"
    },
    "2736": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAB8"
    },
    "2739": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2740": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2742": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2743": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2744": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2745": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2747": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2748": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2749": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2750": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2752": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2753": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2754": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2755": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "2757": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2758": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2759": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "MUL",
      "path": "13"
    },
    "2760": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "ADD",
      "path": "13"
    },
    "2761": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2762": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2763": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2765": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2766": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "ADD",
      "path": "13"
    },
    "2767": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2768": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2770": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2771": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2772": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "ADD",
      "path": "13"
    },
    "2773": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2780": {
      "op": "SHL"
    },
    "2781": {
      "op": "SUB"
    },
    "2782": {
      "offset": [
        2214,
        2236
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2783": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2784": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "AND",
      "path": "13"
    },
    "2785": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2786": {
      "op": "POP"
    },
    "2787": {
      "offset": [
        2214,
        2236
      ],
      "op": "AND",
      "path": "13"
    },
    "2788": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2214,
        2236
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2789": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        2214,
        2236
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2790": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7790,
        7885
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2791": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7845,
        7852
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2793": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7874
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 28,
      "value": "0x2"
    },
    "2795": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7875,
        7880
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2796": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2797": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2798": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2799": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "LT",
      "path": "13"
    },
    "2800": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAFB"
    },
    "2803": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2804": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAFB"
    },
    "2807": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12FD"
    },
    "2810": {
      "fn": "Lottery.getPlayer",
      "jump": "i",
      "offset": [
        7865,
        7881
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2811": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2812": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2814": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2815": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2816": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2817": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2819": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2820": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2821": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2822": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "ADD",
      "path": "13"
    },
    "2823": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2830": {
      "op": "SHL"
    },
    "2831": {
      "op": "SUB"
    },
    "2832": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "AND",
      "path": "13"
    },
    "2833": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7865,
        7881
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2834": {
      "fn": "Lottery.getPlayer",
      "offset": [
        7790,
        7885
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2835": {
      "op": "POP"
    },
    "2836": {
      "op": "POP"
    },
    "2837": {
      "fn": "Lottery.getPlayer",
      "jump": "o",
      "offset": [
        7790,
        7885
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2838": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2839": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1E"
    },
    "2842": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD92"
    },
    "2845": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2846": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2847": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "POP",
      "path": "13"
    },
    "2848": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "POP",
      "path": "13"
    },
    "2849": {
      "fn": "Lottery.setNFTValue",
      "offset": [
        6521,
        6632
      ],
      "op": "POP",
      "path": "13"
    },
    "2850": {
      "fn": "Lottery.setNFTValue",
      "jump": "o",
      "offset": [
        6521,
        6632
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2851": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2852": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2B"
    },
    "2855": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD92"
    },
    "2858": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2859": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2866": {
      "op": "SHL"
    },
    "2867": {
      "op": "SUB"
    },
    "2868": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 29
    },
    "2869": {
      "branch": 53,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "2870": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB90"
    },
    "2873": {
      "branch": 53,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2874": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2876": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2877": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2883": {
      "op": "SHL"
    },
    "2884": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2885": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2888": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2890": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2891": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "2892": {
      "op": "MSTORE"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2897": {
      "op": "DUP3"
    },
    "2898": {
      "op": "ADD"
    },
    "2899": {
      "op": "MSTORE"
    },
    "2900": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2935": {
      "op": "DUP3"
    },
    "2936": {
      "op": "ADD"
    },
    "2937": {
      "op": "MSTORE"
    },
    "2938": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2947": {
      "op": "SHL"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2950": {
      "op": "DUP3"
    },
    "2951": {
      "op": "ADD"
    },
    "2952": {
      "op": "MSTORE"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2955": {
      "op": "ADD"
    },
    "2956": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76E"
    },
    "2959": {
      "op": "JUMP"
    },
    "2960": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2961": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 30,
      "value": "0xB99"
    },
    "2964": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2965": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDEC"
    },
    "2968": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2969": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2970": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "POP",
      "path": "0"
    },
    "2971": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2972": {
      "fn": "Lottery.inBetween",
      "offset": [
        6286,
        6449
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2973": {
      "fn": "Lottery.inBetween",
      "offset": [
        6378,
        6382
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2975": {
      "fn": "Lottery.inBetween",
      "offset": [
        6402,
        6405
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 31
    },
    "2976": {
      "fn": "Lottery.inBetween",
      "offset": [
        6396,
        6399
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2977": {
      "branch": 49,
      "fn": "Lottery.inBetween",
      "offset": [
        6396,
        6405
      ],
      "op": "LT",
      "path": "13"
    },
    "2978": {
      "fn": "Lottery.inBetween",
      "offset": [
        6388,
        6406
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBAA"
    },
    "2981": {
      "branch": 49,
      "fn": "Lottery.inBetween",
      "offset": [
        6388,
        6406
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2982": {
      "fn": "Lottery.inBetween",
      "offset": [
        6388,
        6406
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2984": {
      "fn": "Lottery.inBetween",
      "offset": [
        6388,
        6406
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2985": {
      "fn": "Lottery.inBetween",
      "offset": [
        6388,
        6406
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2986": {
      "fn": "Lottery.inBetween",
      "offset": [
        6388,
        6406
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2987": {
      "fn": "Lottery.inBetween",
      "offset": [
        6426,
        6429
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 32
    },
    "2988": {
      "fn": "Lottery.inBetween",
      "offset": [
        6417,
        6422
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2989": {
      "fn": "Lottery.inBetween",
      "offset": [
        6417,
        6429
      ],
      "op": "LT",
      "path": "13"
    },
    "2990": {
      "fn": "Lottery.inBetween",
      "offset": [
        6417,
        6429
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2991": {
      "fn": "Lottery.inBetween",
      "offset": [
        6417,
        6445
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2992": {
      "fn": "Lottery.inBetween",
      "offset": [
        6417,
        6445
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2993": {
      "fn": "Lottery.inBetween",
      "offset": [
        6417,
        6445
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x453"
    },
    "2996": {
      "fn": "Lottery.inBetween",
      "offset": [
        6417,
        6445
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2997": {
      "op": "POP"
    },
    "2998": {
      "op": "POP"
    },
    "2999": {
      "fn": "Lottery.inBetween",
      "offset": [
        6433,
        6445
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3000": {
      "fn": "Lottery.inBetween",
      "offset": [
        6433,
        6445
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3001": {
      "fn": "Lottery.inBetween",
      "offset": [
        6433,
        6445
      ],
      "op": "GT",
      "path": "13"
    },
    "3002": {
      "fn": "Lottery.inBetween",
      "offset": [
        6433,
        6445
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3003": {
      "fn": "Lottery.inBetween",
      "offset": [
        6433,
        6445
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3004": {
      "fn": "Lottery.inBetween",
      "offset": [
        6410,
        6445
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3005": {
      "op": "POP"
    },
    "3006": {
      "fn": "Lottery.inBetween",
      "jump": "o",
      "offset": [
        6286,
        6449
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3007": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6635,
        7474
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3008": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6777,
        6809
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 33,
      "value": "0x2"
    },
    "3010": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6759,
        6773
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3012": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6759,
        6773
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3017": {
      "op": "SHL"
    },
    "3018": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6759,
        6773
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3019": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6759,
        6773
      ],
      "op": "DIV",
      "path": "13"
    },
    "3020": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6759,
        6773
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "3022": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6759,
        6773
      ],
      "op": "AND",
      "path": "13"
    },
    "3023": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6759,
        6809
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "3025": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6759,
        6809
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3026": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6759,
        6809
      ],
      "op": "GT",
      "path": "13"
    },
    "3027": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6759,
        6809
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3028": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6759,
        6809
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBDF"
    },
    "3031": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6759,
        6809
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3032": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6759,
        6809
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBDF"
    },
    "3035": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6759,
        6809
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1067"
    },
    "3038": {
      "fn": "Lottery.fulfillRandomWords",
      "jump": "i",
      "offset": [
        6759,
        6809
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3039": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6759,
        6809
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3040": {
      "branch": 50,
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6759,
        6809
      ],
      "op": "EQ",
      "path": "13"
    },
    "3041": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6747,
        6835
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC1E"
    },
    "3044": {
      "branch": 50,
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6747,
        6835
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3045": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6747,
        6835
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3047": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6747,
        6835
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3048": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3054": {
      "op": "SHL"
    },
    "3055": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6747,
        6835
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3056": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6747,
        6835
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3059": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6747,
        6835
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3061": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6747,
        6835
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3062": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6747,
        6835
      ],
      "op": "ADD",
      "path": "13"
    },
    "3063": {
      "op": "MSTORE"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3068": {
      "op": "DUP3"
    },
    "3069": {
      "op": "ADD"
    },
    "3070": {
      "op": "MSTORE"
    },
    "3071": {
      "op": "PUSH15",
      "value": "0x4E6F74207468657265207965742121"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "3089": {
      "op": "SHL"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3092": {
      "op": "DUP3"
    },
    "3093": {
      "op": "ADD"
    },
    "3094": {
      "op": "MSTORE"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3097": {
      "op": "ADD"
    },
    "3098": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6747,
        6835
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x76E"
    },
    "3101": {
      "op": "JUMP"
    },
    "3102": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6747,
        6835
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3103": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6869,
        6870
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 34,
      "value": "0x0"
    },
    "3105": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6847,
        6859
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3106": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6847,
        6866
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3107": {
      "branch": 51,
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6847,
        6870
      ],
      "op": "GT",
      "path": "13"
    },
    "3108": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6839,
        6892
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC63"
    },
    "3111": {
      "branch": 51,
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6839,
        6892
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3112": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6839,
        6892
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3114": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6839,
        6892
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3115": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3121": {
      "op": "SHL"
    },
    "3122": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6839,
        6892
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3123": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6839,
        6892
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3126": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6839,
        6892
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3128": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6839,
        6892
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3129": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6839,
        6892
      ],
      "op": "ADD",
      "path": "13"
    },
    "3130": {
      "op": "MSTORE"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3135": {
      "op": "DUP3"
    },
    "3136": {
      "op": "ADD"
    },
    "3137": {
      "op": "MSTORE"
    },
    "3138": {
      "op": "PUSH17",
      "value": "0x52616E646F6D206E6F7420666F756E6421"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "3158": {
      "op": "SHL"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3161": {
      "op": "DUP3"
    },
    "3162": {
      "op": "ADD"
    },
    "3163": {
      "op": "MSTORE"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3166": {
      "op": "ADD"
    },
    "3167": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6839,
        6892
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x76E"
    },
    "3170": {
      "op": "JUMP"
    },
    "3171": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6839,
        6892
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3172": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6896,
        6917
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3174": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6938,
        6947
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "3176": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6938,
        6954
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3177": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6938,
        6954
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3178": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6938,
        6954
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3179": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6938,
        6954
      ],
      "op": "POP",
      "path": "13"
    },
    "3180": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6932
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3181": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6933,
        6934
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3183": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6935
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3184": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6935
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3185": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6935
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3186": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6935
      ],
      "op": "LT",
      "path": "13"
    },
    "3187": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6935
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC7E"
    },
    "3190": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6935
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3191": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6935
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC7E"
    },
    "3194": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6935
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12FD"
    },
    "3197": {
      "fn": "Lottery.fulfillRandomWords",
      "jump": "i",
      "offset": [
        6920,
        6935
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3198": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6935
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3199": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6935
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3201": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6935
      ],
      "op": "MUL",
      "path": "13"
    },
    "3202": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6935
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3204": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6935
      ],
      "op": "ADD",
      "path": "13"
    },
    "3205": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6935
      ],
      "op": "ADD",
      "path": "13"
    },
    "3206": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6935
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3207": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6954
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC90"
    },
    "3210": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6954
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3211": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6954
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3212": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6954
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12D0"
    },
    "3215": {
      "fn": "Lottery.fulfillRandomWords",
      "jump": "i",
      "offset": [
        6920,
        6954
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3216": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6920,
        6954
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3217": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6896,
        6954
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3218": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6896,
        6954
      ],
      "op": "POP",
      "path": "13"
    },
    "3219": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6984
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 35,
      "value": "0x2"
    },
    "3221": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6985,
        6998
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3222": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3223": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3224": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3225": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "LT",
      "path": "13"
    },
    "3226": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCA5"
    },
    "3229": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3230": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCA5"
    },
    "3233": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12FD"
    },
    "3236": {
      "fn": "Lottery.fulfillRandomWords",
      "jump": "i",
      "offset": [
        6975,
        6999
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3237": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3238": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3240": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3241": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3242": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3243": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3245": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3246": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3247": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "ADD",
      "path": "13"
    },
    "3248": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3249": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6958,
        6972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3251": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6958,
        6999
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3252": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6958,
        6999
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3259": {
      "op": "SHL"
    },
    "3260": {
      "op": "SUB"
    },
    "3261": {
      "op": "NOT"
    },
    "3262": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7003,
        7038
      ],
      "op": "AND",
      "path": "13",
      "statement": 36
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3269": {
      "op": "SHL"
    },
    "3270": {
      "op": "SUB"
    },
    "3271": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3272": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3273": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "AND",
      "path": "13"
    },
    "3274": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7003,
        7038
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3275": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7003,
        7038
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3276": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7003,
        7038
      ],
      "op": "OR",
      "path": "13"
    },
    "3277": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7003,
        7038
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3278": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7003,
        7038
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "3279": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7047,
        7075
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 37,
      "value": "0x40"
    },
    "3281": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7047,
        7075
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3282": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3283": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        6975,
        6999
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3284": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7047,
        7075
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x794919B0F484B8E90B1B817AC7F880F846FBD8A9813DEE2A378E820DB094E3D1"
    },
    "3317": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7047,
        7075
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3318": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7047,
        7075
      ],
      "op": "LOG2",
      "path": "13"
    },
    "3319": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7112
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3321": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7112
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3322": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3324": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3325": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7080,
        7092
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3327": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7080,
        7092
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3334": {
      "op": "SHL"
    },
    "3335": {
      "op": "SUB"
    },
    "3336": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7112
      ],
      "op": "AND",
      "path": "13"
    },
    "3337": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7112
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3338": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7126,
        7147
      ],
      "op": "SELFBALANCE",
      "path": "13"
    },
    "3339": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7126,
        7147
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3340": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7080,
        7092
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3341": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3342": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7080,
        7092
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3343": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3344": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7126,
        7147
      ],
      "op": "DUP6",
      "path": "13"
    },
    "3345": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7112
      ],
      "op": "DUP8",
      "path": "13"
    },
    "3346": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "GAS",
      "path": "13"
    },
    "3347": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "CALL",
      "path": "13"
    },
    "3348": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3349": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "POP",
      "path": "13"
    },
    "3350": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "POP",
      "path": "13"
    },
    "3351": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "POP",
      "path": "13"
    },
    "3352": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3353": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3354": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3356": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3357": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "EQ",
      "path": "13"
    },
    "3358": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD43"
    },
    "3361": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3362": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3364": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3365": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3366": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "POP",
      "path": "13"
    },
    "3367": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3369": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "NOT",
      "path": "13"
    },
    "3370": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3F"
    },
    "3372": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3373": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "ADD",
      "path": "13"
    },
    "3374": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "AND",
      "path": "13"
    },
    "3375": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3376": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "ADD",
      "path": "13"
    },
    "3377": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3379": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3380": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3381": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3382": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3383": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3384": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3386": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3388": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3389": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "ADD",
      "path": "13"
    },
    "3390": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "3391": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD48"
    },
    "3394": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3395": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3396": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "3398": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3399": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "POP",
      "path": "13"
    },
    "3400": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3401": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7098,
        7160
      ],
      "op": "POP",
      "path": "13"
    },
    "3402": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7079,
        7160
      ],
      "op": "POP",
      "path": "13"
    },
    "3403": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7079,
        7160
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3404": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7079,
        7160
      ],
      "op": "POP",
      "path": "13"
    },
    "3405": {
      "branch": 52,
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7224,
        7231
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 38
    },
    "3406": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7219,
        7283
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD6A"
    },
    "3409": {
      "branch": 52,
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7219,
        7283
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3410": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7245,
        7278
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3412": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7245,
        7278
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3413": {
      "op": "PUSH4",
      "value": "0x9245F215"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3420": {
      "op": "SHL"
    },
    "3421": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7245,
        7278
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3422": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7245,
        7278
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3423": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7245,
        7278
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3425": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7245,
        7278
      ],
      "op": "ADD",
      "path": "13"
    },
    "3426": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7245,
        7278
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3428": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7245,
        7278
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3429": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7245,
        7278
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3430": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7245,
        7278
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3431": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7245,
        7278
      ],
      "op": "SUB",
      "path": "13"
    },
    "3432": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7245,
        7278
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3433": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7245,
        7278
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3434": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7219,
        7283
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3435": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7324,
        7348
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 39,
      "value": "0x40"
    },
    "3437": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7324,
        7348
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3438": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7324,
        7348
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3439": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7346,
        7347
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3441": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7324,
        7348
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3442": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7324,
        7348
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3443": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7324,
        7348
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3445": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7324,
        7348
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3446": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7324,
        7348
      ],
      "op": "ADD",
      "path": "13"
    },
    "3447": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7324,
        7348
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3448": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7324,
        7348
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3449": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7324,
        7348
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3450": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7324,
        7348
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3451": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7312,
        7348
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3452": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7312,
        7348
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD87"
    },
    "3455": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7312,
        7348
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3456": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7312,
        7321
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "3458": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7312,
        7321
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3459": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7312,
        7348
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE3C"
    },
    "3462": {
      "fn": "Lottery.fulfillRandomWords",
      "jump": "i",
      "offset": [
        7312,
        7348
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3463": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7312,
        7348
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3464": {
      "op": "POP"
    },
    "3465": {
      "op": "POP"
    },
    "3466": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7431,
        7446
      ],
      "op": "TIMESTAMP",
      "path": "13",
      "statement": 40
    },
    "3467": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7413,
        7428
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "3469": {
      "fn": "Lottery.fulfillRandomWords",
      "offset": [
        7413,
        7446
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "3470": {
      "op": "POP"
    },
    "3471": {
      "op": "POP"
    },
    "3472": {
      "op": "POP"
    },
    "3473": {
      "fn": "Lottery.fulfillRandomWords",
      "jump": "o",
      "offset": [
        6635,
        7474
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3474": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3475": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3477": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3484": {
      "op": "SHL"
    },
    "3485": {
      "op": "SUB"
    },
    "3486": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "3487": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 41
    },
    "3488": {
      "branch": 54,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 42
    },
    "3489": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA6"
    },
    "3492": {
      "branch": 54,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3493": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3495": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3496": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3500": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3502": {
      "op": "SHL"
    },
    "3503": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3504": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3507": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3509": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3510": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "3511": {
      "op": "DUP2"
    },
    "3512": {
      "op": "SWAP1"
    },
    "3513": {
      "op": "MSTORE"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3516": {
      "op": "DUP3"
    },
    "3517": {
      "op": "ADD"
    },
    "3518": {
      "op": "MSTORE"
    },
    "3519": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3554": {
      "op": "DUP3"
    },
    "3555": {
      "op": "ADD"
    },
    "3556": {
      "op": "MSTORE"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3559": {
      "op": "ADD"
    },
    "3560": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76E"
    },
    "3563": {
      "op": "JUMP"
    },
    "3564": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3565": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3567": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3568": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3575": {
      "op": "SHL"
    },
    "3576": {
      "op": "SUB"
    },
    "3577": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 43
    },
    "3578": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3579": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3586": {
      "op": "SHL"
    },
    "3587": {
      "op": "SUB"
    },
    "3588": {
      "op": "NOT"
    },
    "3589": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3590": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "3591": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3592": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "3593": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3594": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3595": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 44,
      "value": "0x40"
    },
    "3597": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3598": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3599": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3600": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3601": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "3602": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3603": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3604": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3605": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3638": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3639": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3640": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3641": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "3642": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "3643": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3644": {
      "op": "JUMPDEST"
    },
    "3645": {
      "op": "DUP3"
    },
    "3646": {
      "op": "DUP1"
    },
    "3647": {
      "op": "SLOAD"
    },
    "3648": {
      "op": "DUP3"
    },
    "3649": {
      "op": "DUP3"
    },
    "3650": {
      "op": "SSTORE"
    },
    "3651": {
      "op": "SWAP1"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3654": {
      "op": "MSTORE"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3659": {
      "op": "KECCAK256"
    },
    "3660": {
      "op": "SWAP1"
    },
    "3661": {
      "op": "DUP2"
    },
    "3662": {
      "op": "ADD"
    },
    "3663": {
      "op": "SWAP3"
    },
    "3664": {
      "op": "DUP3"
    },
    "3665": {
      "op": "ISZERO"
    },
    "3666": {
      "op": "PUSH2",
      "value": "0xE91"
    },
    "3669": {
      "op": "JUMPI"
    },
    "3670": {
      "op": "SWAP2"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3673": {
      "op": "MUL"
    },
    "3674": {
      "op": "DUP3"
    },
    "3675": {
      "op": "ADD"
    },
    "3676": {
      "op": "JUMPDEST"
    },
    "3677": {
      "op": "DUP3"
    },
    "3678": {
      "op": "DUP2"
    },
    "3679": {
      "op": "GT"
    },
    "3680": {
      "op": "ISZERO"
    },
    "3681": {
      "op": "PUSH2",
      "value": "0xE91"
    },
    "3684": {
      "op": "JUMPI"
    },
    "3685": {
      "op": "DUP3"
    },
    "3686": {
      "op": "MLOAD"
    },
    "3687": {
      "op": "DUP3"
    },
    "3688": {
      "op": "SLOAD"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3695": {
      "op": "SHL"
    },
    "3696": {
      "op": "SUB"
    },
    "3697": {
      "op": "NOT"
    },
    "3698": {
      "op": "AND"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3705": {
      "op": "SHL"
    },
    "3706": {
      "op": "SUB"
    },
    "3707": {
      "op": "SWAP1"
    },
    "3708": {
      "op": "SWAP2"
    },
    "3709": {
      "op": "AND"
    },
    "3710": {
      "op": "OR"
    },
    "3711": {
      "op": "DUP3"
    },
    "3712": {
      "op": "SSTORE"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3715": {
      "op": "SWAP1"
    },
    "3716": {
      "op": "SWAP3"
    },
    "3717": {
      "op": "ADD"
    },
    "3718": {
      "op": "SWAP2"
    },
    "3719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3721": {
      "op": "SWAP1"
    },
    "3722": {
      "op": "SWAP2"
    },
    "3723": {
      "op": "ADD"
    },
    "3724": {
      "op": "SWAP1"
    },
    "3725": {
      "op": "PUSH2",
      "value": "0xE5C"
    },
    "3728": {
      "op": "JUMP"
    },
    "3729": {
      "op": "JUMPDEST"
    },
    "3730": {
      "op": "POP"
    },
    "3731": {
      "op": "PUSH2",
      "value": "0xE9D"
    },
    "3734": {
      "op": "SWAP3"
    },
    "3735": {
      "op": "SWAP2"
    },
    "3736": {
      "op": "POP"
    },
    "3737": {
      "op": "PUSH2",
      "value": "0xEA1"
    },
    "3740": {
      "jump": "i",
      "op": "JUMP"
    },
    "3741": {
      "op": "JUMPDEST"
    },
    "3742": {
      "op": "POP"
    },
    "3743": {
      "op": "SWAP1"
    },
    "3744": {
      "jump": "o",
      "op": "JUMP"
    },
    "3745": {
      "op": "JUMPDEST"
    },
    "3746": {
      "op": "JUMPDEST"
    },
    "3747": {
      "op": "DUP1"
    },
    "3748": {
      "op": "DUP3"
    },
    "3749": {
      "op": "GT"
    },
    "3750": {
      "op": "ISZERO"
    },
    "3751": {
      "op": "PUSH2",
      "value": "0xE9D"
    },
    "3754": {
      "op": "JUMPI"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3757": {
      "op": "DUP2"
    },
    "3758": {
      "op": "SSTORE"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3761": {
      "op": "ADD"
    },
    "3762": {
      "op": "PUSH2",
      "value": "0xEA2"
    },
    "3765": {
      "op": "JUMP"
    },
    "3766": {
      "op": "JUMPDEST"
    },
    "3767": {
      "op": "DUP1"
    },
    "3768": {
      "op": "CALLDATALOAD"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3775": {
      "op": "SHL"
    },
    "3776": {
      "op": "SUB"
    },
    "3777": {
      "op": "DUP2"
    },
    "3778": {
      "op": "AND"
    },
    "3779": {
      "op": "DUP2"
    },
    "3780": {
      "op": "EQ"
    },
    "3781": {
      "op": "PUSH2",
      "value": "0xECD"
    },
    "3784": {
      "op": "JUMPI"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3787": {
      "op": "DUP1"
    },
    "3788": {
      "op": "REVERT"
    },
    "3789": {
      "op": "JUMPDEST"
    },
    "3790": {
      "op": "SWAP2"
    },
    "3791": {
      "op": "SWAP1"
    },
    "3792": {
      "op": "POP"
    },
    "3793": {
      "jump": "o",
      "op": "JUMP"
    },
    "3794": {
      "op": "JUMPDEST"
    },
    "3795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3797": {
      "op": "DUP1"
    },
    "3798": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3800": {
      "op": "DUP4"
    },
    "3801": {
      "op": "DUP6"
    },
    "3802": {
      "op": "SUB"
    },
    "3803": {
      "op": "SLT"
    },
    "3804": {
      "op": "ISZERO"
    },
    "3805": {
      "op": "PUSH2",
      "value": "0xEE5"
    },
    "3808": {
      "op": "JUMPI"
    },
    "3809": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3811": {
      "op": "DUP1"
    },
    "3812": {
      "op": "REVERT"
    },
    "3813": {
      "op": "JUMPDEST"
    },
    "3814": {
      "op": "PUSH2",
      "value": "0xEEE"
    },
    "3817": {
      "op": "DUP4"
    },
    "3818": {
      "op": "PUSH2",
      "value": "0xEB6"
    },
    "3821": {
      "jump": "i",
      "op": "JUMP"
    },
    "3822": {
      "op": "JUMPDEST"
    },
    "3823": {
      "op": "SWAP5"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3826": {
      "op": "SWAP4"
    },
    "3827": {
      "op": "SWAP1"
    },
    "3828": {
      "op": "SWAP4"
    },
    "3829": {
      "op": "ADD"
    },
    "3830": {
      "op": "CALLDATALOAD"
    },
    "3831": {
      "op": "SWAP4"
    },
    "3832": {
      "op": "POP"
    },
    "3833": {
      "op": "POP"
    },
    "3834": {
      "op": "POP"
    },
    "3835": {
      "jump": "o",
      "op": "JUMP"
    },
    "3836": {
      "op": "JUMPDEST"
    },
    "3837": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3844": {
      "op": "SHL"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3847": {
      "op": "MSTORE"
    },
    "3848": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3852": {
      "op": "MSTORE"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3857": {
      "op": "REVERT"
    },
    "3858": {
      "op": "JUMPDEST"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3861": {
      "op": "MLOAD"
    },
    "3862": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3864": {
      "op": "DUP3"
    },
    "3865": {
      "op": "ADD"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3868": {
      "op": "NOT"
    },
    "3869": {
      "op": "AND"
    },
    "3870": {
      "op": "DUP2"
    },
    "3871": {
      "op": "ADD"
    },
    "3872": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3881": {
      "op": "DUP2"
    },
    "3882": {
      "op": "GT"
    },
    "3883": {
      "op": "DUP3"
    },
    "3884": {
      "op": "DUP3"
    },
    "3885": {
      "op": "LT"
    },
    "3886": {
      "op": "OR"
    },
    "3887": {
      "op": "ISZERO"
    },
    "3888": {
      "op": "PUSH2",
      "value": "0xF3B"
    },
    "3891": {
      "op": "JUMPI"
    },
    "3892": {
      "op": "PUSH2",
      "value": "0xF3B"
    },
    "3895": {
      "op": "PUSH2",
      "value": "0xEFC"
    },
    "3898": {
      "jump": "i",
      "op": "JUMP"
    },
    "3899": {
      "op": "JUMPDEST"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3902": {
      "op": "MSTORE"
    },
    "3903": {
      "op": "SWAP2"
    },
    "3904": {
      "op": "SWAP1"
    },
    "3905": {
      "op": "POP"
    },
    "3906": {
      "jump": "o",
      "op": "JUMP"
    },
    "3907": {
      "op": "JUMPDEST"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3910": {
      "op": "DUP1"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3913": {
      "op": "DUP4"
    },
    "3914": {
      "op": "DUP6"
    },
    "3915": {
      "op": "SUB"
    },
    "3916": {
      "op": "SLT"
    },
    "3917": {
      "op": "ISZERO"
    },
    "3918": {
      "op": "PUSH2",
      "value": "0xF56"
    },
    "3921": {
      "op": "JUMPI"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3924": {
      "op": "DUP1"
    },
    "3925": {
      "op": "REVERT"
    },
    "3926": {
      "op": "JUMPDEST"
    },
    "3927": {
      "op": "DUP3"
    },
    "3928": {
      "op": "CALLDATALOAD"
    },
    "3929": {
      "op": "SWAP2"
    },
    "3930": {
      "op": "POP"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3933": {
      "op": "DUP1"
    },
    "3934": {
      "op": "DUP5"
    },
    "3935": {
      "op": "ADD"
    },
    "3936": {
      "op": "CALLDATALOAD"
    },
    "3937": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3946": {
      "op": "DUP1"
    },
    "3947": {
      "op": "DUP3"
    },
    "3948": {
      "op": "GT"
    },
    "3949": {
      "op": "ISZERO"
    },
    "3950": {
      "op": "PUSH2",
      "value": "0xF76"
    },
    "3953": {
      "op": "JUMPI"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3956": {
      "op": "DUP1"
    },
    "3957": {
      "op": "REVERT"
    },
    "3958": {
      "op": "JUMPDEST"
    },
    "3959": {
      "op": "DUP2"
    },
    "3960": {
      "op": "DUP7"
    },
    "3961": {
      "op": "ADD"
    },
    "3962": {
      "op": "SWAP2"
    },
    "3963": {
      "op": "POP"
    },
    "3964": {
      "op": "DUP7"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3967": {
      "op": "DUP4"
    },
    "3968": {
      "op": "ADD"
    },
    "3969": {
      "op": "SLT"
    },
    "3970": {
      "op": "PUSH2",
      "value": "0xF8A"
    },
    "3973": {
      "op": "JUMPI"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3976": {
      "op": "DUP1"
    },
    "3977": {
      "op": "REVERT"
    },
    "3978": {
      "op": "JUMPDEST"
    },
    "3979": {
      "op": "DUP2"
    },
    "3980": {
      "op": "CALLDATALOAD"
    },
    "3981": {
      "op": "DUP2"
    },
    "3982": {
      "op": "DUP2"
    },
    "3983": {
      "op": "GT"
    },
    "3984": {
      "op": "ISZERO"
    },
    "3985": {
      "op": "PUSH2",
      "value": "0xF9C"
    },
    "3988": {
      "op": "JUMPI"
    },
    "3989": {
      "op": "PUSH2",
      "value": "0xF9C"
    },
    "3992": {
      "op": "PUSH2",
      "value": "0xEFC"
    },
    "3995": {
      "jump": "i",
      "op": "JUMP"
    },
    "3996": {
      "op": "JUMPDEST"
    },
    "3997": {
      "op": "DUP1"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4000": {
      "op": "SHL"
    },
    "4001": {
      "op": "SWAP2"
    },
    "4002": {
      "op": "POP"
    },
    "4003": {
      "op": "PUSH2",
      "value": "0xFAD"
    },
    "4006": {
      "op": "DUP5"
    },
    "4007": {
      "op": "DUP4"
    },
    "4008": {
      "op": "ADD"
    },
    "4009": {
      "op": "PUSH2",
      "value": "0xF12"
    },
    "4012": {
      "jump": "i",
      "op": "JUMP"
    },
    "4013": {
      "op": "JUMPDEST"
    },
    "4014": {
      "op": "DUP2"
    },
    "4015": {
      "op": "DUP2"
    },
    "4016": {
      "op": "MSTORE"
    },
    "4017": {
      "op": "SWAP2"
    },
    "4018": {
      "op": "DUP4"
    },
    "4019": {
      "op": "ADD"
    },
    "4020": {
      "op": "DUP5"
    },
    "4021": {
      "op": "ADD"
    },
    "4022": {
      "op": "SWAP2"
    },
    "4023": {
      "op": "DUP5"
    },
    "4024": {
      "op": "DUP2"
    },
    "4025": {
      "op": "ADD"
    },
    "4026": {
      "op": "SWAP1"
    },
    "4027": {
      "op": "DUP10"
    },
    "4028": {
      "op": "DUP5"
    },
    "4029": {
      "op": "GT"
    },
    "4030": {
      "op": "ISZERO"
    },
    "4031": {
      "op": "PUSH2",
      "value": "0xFC7"
    },
    "4034": {
      "op": "JUMPI"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4037": {
      "op": "DUP1"
    },
    "4038": {
      "op": "REVERT"
    },
    "4039": {
      "op": "JUMPDEST"
    },
    "4040": {
      "op": "SWAP4"
    },
    "4041": {
      "op": "DUP6"
    },
    "4042": {
      "op": "ADD"
    },
    "4043": {
      "op": "SWAP4"
    },
    "4044": {
      "op": "JUMPDEST"
    },
    "4045": {
      "op": "DUP4"
    },
    "4046": {
      "op": "DUP6"
    },
    "4047": {
      "op": "LT"
    },
    "4048": {
      "op": "ISZERO"
    },
    "4049": {
      "op": "PUSH2",
      "value": "0xFE5"
    },
    "4052": {
      "op": "JUMPI"
    },
    "4053": {
      "op": "DUP5"
    },
    "4054": {
      "op": "CALLDATALOAD"
    },
    "4055": {
      "op": "DUP3"
    },
    "4056": {
      "op": "MSTORE"
    },
    "4057": {
      "op": "SWAP4"
    },
    "4058": {
      "op": "DUP6"
    },
    "4059": {
      "op": "ADD"
    },
    "4060": {
      "op": "SWAP4"
    },
    "4061": {
      "op": "SWAP1"
    },
    "4062": {
      "op": "DUP6"
    },
    "4063": {
      "op": "ADD"
    },
    "4064": {
      "op": "SWAP1"
    },
    "4065": {
      "op": "PUSH2",
      "value": "0xFCC"
    },
    "4068": {
      "op": "JUMP"
    },
    "4069": {
      "op": "JUMPDEST"
    },
    "4070": {
      "op": "DUP1"
    },
    "4071": {
      "op": "SWAP7"
    },
    "4072": {
      "op": "POP"
    },
    "4073": {
      "op": "POP"
    },
    "4074": {
      "op": "POP"
    },
    "4075": {
      "op": "POP"
    },
    "4076": {
      "op": "POP"
    },
    "4077": {
      "op": "POP"
    },
    "4078": {
      "op": "POP"
    },
    "4079": {
      "op": "SWAP3"
    },
    "4080": {
      "op": "POP"
    },
    "4081": {
      "op": "SWAP3"
    },
    "4082": {
      "op": "SWAP1"
    },
    "4083": {
      "op": "POP"
    },
    "4084": {
      "jump": "o",
      "op": "JUMP"
    },
    "4085": {
      "op": "JUMPDEST"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4088": {
      "op": "DUP1"
    },
    "4089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4091": {
      "op": "DUP4"
    },
    "4092": {
      "op": "DUP6"
    },
    "4093": {
      "op": "SUB"
    },
    "4094": {
      "op": "SLT"
    },
    "4095": {
      "op": "ISZERO"
    },
    "4096": {
      "op": "PUSH2",
      "value": "0x1008"
    },
    "4099": {
      "op": "JUMPI"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4102": {
      "op": "DUP1"
    },
    "4103": {
      "op": "REVERT"
    },
    "4104": {
      "op": "JUMPDEST"
    },
    "4105": {
      "op": "DUP3"
    },
    "4106": {
      "op": "CALLDATALOAD"
    },
    "4107": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4116": {
      "op": "DUP1"
    },
    "4117": {
      "op": "DUP3"
    },
    "4118": {
      "op": "GT"
    },
    "4119": {
      "op": "ISZERO"
    },
    "4120": {
      "op": "PUSH2",
      "value": "0x1020"
    },
    "4123": {
      "op": "JUMPI"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4126": {
      "op": "DUP1"
    },
    "4127": {
      "op": "REVERT"
    },
    "4128": {
      "op": "JUMPDEST"
    },
    "4129": {
      "op": "DUP2"
    },
    "4130": {
      "op": "DUP6"
    },
    "4131": {
      "op": "ADD"
    },
    "4132": {
      "op": "SWAP2"
    },
    "4133": {
      "op": "POP"
    },
    "4134": {
      "op": "DUP6"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4137": {
      "op": "DUP4"
    },
    "4138": {
      "op": "ADD"
    },
    "4139": {
      "op": "SLT"
    },
    "4140": {
      "op": "PUSH2",
      "value": "0x1034"
    },
    "4143": {
      "op": "JUMPI"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4146": {
      "op": "DUP1"
    },
    "4147": {
      "op": "REVERT"
    },
    "4148": {
      "op": "JUMPDEST"
    },
    "4149": {
      "op": "DUP2"
    },
    "4150": {
      "op": "CALLDATALOAD"
    },
    "4151": {
      "op": "DUP2"
    },
    "4152": {
      "op": "DUP2"
    },
    "4153": {
      "op": "GT"
    },
    "4154": {
      "op": "ISZERO"
    },
    "4155": {
      "op": "PUSH2",
      "value": "0x1043"
    },
    "4158": {
      "op": "JUMPI"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4161": {
      "op": "DUP1"
    },
    "4162": {
      "op": "REVERT"
    },
    "4163": {
      "op": "JUMPDEST"
    },
    "4164": {
      "op": "DUP7"
    },
    "4165": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4167": {
      "op": "DUP3"
    },
    "4168": {
      "op": "DUP6"
    },
    "4169": {
      "op": "ADD"
    },
    "4170": {
      "op": "ADD"
    },
    "4171": {
      "op": "GT"
    },
    "4172": {
      "op": "ISZERO"
    },
    "4173": {
      "op": "PUSH2",
      "value": "0x1055"
    },
    "4176": {
      "op": "JUMPI"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4179": {
      "op": "DUP1"
    },
    "4180": {
      "op": "REVERT"
    },
    "4181": {
      "op": "JUMPDEST"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4184": {
      "op": "SWAP3"
    },
    "4185": {
      "op": "SWAP1"
    },
    "4186": {
      "op": "SWAP3"
    },
    "4187": {
      "op": "ADD"
    },
    "4188": {
      "op": "SWAP7"
    },
    "4189": {
      "op": "SWAP2"
    },
    "4190": {
      "op": "SWAP6"
    },
    "4191": {
      "op": "POP"
    },
    "4192": {
      "op": "SWAP1"
    },
    "4193": {
      "op": "SWAP4"
    },
    "4194": {
      "op": "POP"
    },
    "4195": {
      "op": "POP"
    },
    "4196": {
      "op": "POP"
    },
    "4197": {
      "op": "POP"
    },
    "4198": {
      "jump": "o",
      "op": "JUMP"
    },
    "4199": {
      "op": "JUMPDEST"
    },
    "4200": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4207": {
      "op": "SHL"
    },
    "4208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4210": {
      "op": "MSTORE"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4215": {
      "op": "MSTORE"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4220": {
      "op": "REVERT"
    },
    "4221": {
      "op": "JUMPDEST"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4224": {
      "op": "DUP2"
    },
    "4225": {
      "op": "ADD"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4228": {
      "op": "DUP4"
    },
    "4229": {
      "op": "LT"
    },
    "4230": {
      "op": "PUSH2",
      "value": "0x109F"
    },
    "4233": {
      "op": "JUMPI"
    },
    "4234": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4241": {
      "op": "SHL"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4244": {
      "op": "MSTORE"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4249": {
      "op": "MSTORE"
    },
    "4250": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4254": {
      "op": "REVERT"
    },
    "4255": {
      "op": "JUMPDEST"
    },
    "4256": {
      "op": "SWAP2"
    },
    "4257": {
      "op": "SWAP1"
    },
    "4258": {
      "op": "MSTORE"
    },
    "4259": {
      "op": "SWAP1"
    },
    "4260": {
      "jump": "o",
      "op": "JUMP"
    },
    "4261": {
      "op": "JUMPDEST"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4266": {
      "op": "DUP1"
    },
    "4267": {
      "op": "DUP4"
    },
    "4268": {
      "op": "DUP6"
    },
    "4269": {
      "op": "SUB"
    },
    "4270": {
      "op": "SLT"
    },
    "4271": {
      "op": "ISZERO"
    },
    "4272": {
      "op": "PUSH2",
      "value": "0x10B8"
    },
    "4275": {
      "op": "JUMPI"
    },
    "4276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4278": {
      "op": "DUP1"
    },
    "4279": {
      "op": "REVERT"
    },
    "4280": {
      "op": "JUMPDEST"
    },
    "4281": {
      "op": "DUP3"
    },
    "4282": {
      "op": "CALLDATALOAD"
    },
    "4283": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4292": {
      "op": "DUP1"
    },
    "4293": {
      "op": "DUP3"
    },
    "4294": {
      "op": "GT"
    },
    "4295": {
      "op": "ISZERO"
    },
    "4296": {
      "op": "PUSH2",
      "value": "0x10D0"
    },
    "4299": {
      "op": "JUMPI"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4302": {
      "op": "DUP1"
    },
    "4303": {
      "op": "REVERT"
    },
    "4304": {
      "op": "JUMPDEST"
    },
    "4305": {
      "op": "DUP2"
    },
    "4306": {
      "op": "DUP6"
    },
    "4307": {
      "op": "ADD"
    },
    "4308": {
      "op": "SWAP2"
    },
    "4309": {
      "op": "POP"
    },
    "4310": {
      "op": "DUP6"
    },
    "4311": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4313": {
      "op": "DUP4"
    },
    "4314": {
      "op": "ADD"
    },
    "4315": {
      "op": "SLT"
    },
    "4316": {
      "op": "PUSH2",
      "value": "0x10E4"
    },
    "4319": {
      "op": "JUMPI"
    },
    "4320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4322": {
      "op": "DUP1"
    },
    "4323": {
      "op": "REVERT"
    },
    "4324": {
      "op": "JUMPDEST"
    },
    "4325": {
      "op": "DUP2"
    },
    "4326": {
      "op": "CALLDATALOAD"
    },
    "4327": {
      "op": "DUP2"
    },
    "4328": {
      "op": "DUP2"
    },
    "4329": {
      "op": "GT"
    },
    "4330": {
      "op": "ISZERO"
    },
    "4331": {
      "op": "PUSH2",
      "value": "0x10F6"
    },
    "4334": {
      "op": "JUMPI"
    },
    "4335": {
      "op": "PUSH2",
      "value": "0x10F6"
    },
    "4338": {
      "op": "PUSH2",
      "value": "0xEFC"
    },
    "4341": {
      "jump": "i",
      "op": "JUMP"
    },
    "4342": {
      "op": "JUMPDEST"
    },
    "4343": {
      "op": "PUSH2",
      "value": "0x1108"
    },
    "4346": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4348": {
      "op": "DUP3"
    },
    "4349": {
      "op": "ADD"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4352": {
      "op": "NOT"
    },
    "4353": {
      "op": "AND"
    },
    "4354": {
      "op": "DUP6"
    },
    "4355": {
      "op": "ADD"
    },
    "4356": {
      "op": "PUSH2",
      "value": "0xF12"
    },
    "4359": {
      "jump": "i",
      "op": "JUMP"
    },
    "4360": {
      "op": "JUMPDEST"
    },
    "4361": {
      "op": "SWAP2"
    },
    "4362": {
      "op": "POP"
    },
    "4363": {
      "op": "DUP1"
    },
    "4364": {
      "op": "DUP3"
    },
    "4365": {
      "op": "MSTORE"
    },
    "4366": {
      "op": "DUP7"
    },
    "4367": {
      "op": "DUP5"
    },
    "4368": {
      "op": "DUP3"
    },
    "4369": {
      "op": "DUP6"
    },
    "4370": {
      "op": "ADD"
    },
    "4371": {
      "op": "ADD"
    },
    "4372": {
      "op": "GT"
    },
    "4373": {
      "op": "ISZERO"
    },
    "4374": {
      "op": "PUSH2",
      "value": "0x111E"
    },
    "4377": {
      "op": "JUMPI"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4380": {
      "op": "DUP1"
    },
    "4381": {
      "op": "REVERT"
    },
    "4382": {
      "op": "JUMPDEST"
    },
    "4383": {
      "op": "DUP1"
    },
    "4384": {
      "op": "DUP5"
    },
    "4385": {
      "op": "DUP5"
    },
    "4386": {
      "op": "ADD"
    },
    "4387": {
      "op": "DUP6"
    },
    "4388": {
      "op": "DUP5"
    },
    "4389": {
      "op": "ADD"
    },
    "4390": {
      "op": "CALLDATACOPY"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4393": {
      "op": "SWAP1"
    },
    "4394": {
      "op": "DUP3"
    },
    "4395": {
      "op": "ADD"
    },
    "4396": {
      "op": "SWAP1"
    },
    "4397": {
      "op": "SWAP4"
    },
    "4398": {
      "op": "ADD"
    },
    "4399": {
      "op": "SWAP3"
    },
    "4400": {
      "op": "SWAP1"
    },
    "4401": {
      "op": "SWAP3"
    },
    "4402": {
      "op": "MSTORE"
    },
    "4403": {
      "op": "POP"
    },
    "4404": {
      "op": "SWAP4"
    },
    "4405": {
      "op": "SWAP3"
    },
    "4406": {
      "op": "POP"
    },
    "4407": {
      "op": "POP"
    },
    "4408": {
      "op": "POP"
    },
    "4409": {
      "jump": "o",
      "op": "JUMP"
    },
    "4410": {
      "op": "JUMPDEST"
    },
    "4411": {
      "op": "DUP3"
    },
    "4412": {
      "op": "ISZERO"
    },
    "4413": {
      "op": "ISZERO"
    },
    "4414": {
      "op": "DUP2"
    },
    "4415": {
      "op": "MSTORE"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4422": {
      "op": "DUP2"
    },
    "4423": {
      "op": "DUP5"
    },
    "4424": {
      "op": "ADD"
    },
    "4425": {
      "op": "MSTORE"
    },
    "4426": {
      "op": "DUP4"
    },
    "4427": {
      "op": "MLOAD"
    },
    "4428": {
      "op": "DUP1"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4431": {
      "op": "DUP6"
    },
    "4432": {
      "op": "ADD"
    },
    "4433": {
      "op": "MSTORE"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4436": {
      "op": "JUMPDEST"
    },
    "4437": {
      "op": "DUP2"
    },
    "4438": {
      "op": "DUP2"
    },
    "4439": {
      "op": "LT"
    },
    "4440": {
      "op": "ISZERO"
    },
    "4441": {
      "op": "PUSH2",
      "value": "0x1170"
    },
    "4444": {
      "op": "JUMPI"
    },
    "4445": {
      "op": "DUP6"
    },
    "4446": {
      "op": "DUP2"
    },
    "4447": {
      "op": "ADD"
    },
    "4448": {
      "op": "DUP4"
    },
    "4449": {
      "op": "ADD"
    },
    "4450": {
      "op": "MLOAD"
    },
    "4451": {
      "op": "DUP6"
    },
    "4452": {
      "op": "DUP3"
    },
    "4453": {
      "op": "ADD"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4456": {
      "op": "ADD"
    },
    "4457": {
      "op": "MSTORE"
    },
    "4458": {
      "op": "DUP3"
    },
    "4459": {
      "op": "ADD"
    },
    "4460": {
      "op": "PUSH2",
      "value": "0x1154"
    },
    "4463": {
      "op": "JUMP"
    },
    "4464": {
      "op": "JUMPDEST"
    },
    "4465": {
      "op": "DUP2"
    },
    "4466": {
      "op": "DUP2"
    },
    "4467": {
      "op": "GT"
    },
    "4468": {
      "op": "ISZERO"
    },
    "4469": {
      "op": "PUSH2",
      "value": "0x1182"
    },
    "4472": {
      "op": "JUMPI"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4477": {
      "op": "DUP4"
    },
    "4478": {
      "op": "DUP8"
    },
    "4479": {
      "op": "ADD"
    },
    "4480": {
      "op": "ADD"
    },
    "4481": {
      "op": "MSTORE"
    },
    "4482": {
      "op": "JUMPDEST"
    },
    "4483": {
      "op": "POP"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4486": {
      "op": "ADD"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4489": {
      "op": "NOT"
    },
    "4490": {
      "op": "AND"
    },
    "4491": {
      "op": "SWAP3"
    },
    "4492": {
      "op": "SWAP1"
    },
    "4493": {
      "op": "SWAP3"
    },
    "4494": {
      "op": "ADD"
    },
    "4495": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4497": {
      "op": "ADD"
    },
    "4498": {
      "op": "SWAP5"
    },
    "4499": {
      "op": "SWAP4"
    },
    "4500": {
      "op": "POP"
    },
    "4501": {
      "op": "POP"
    },
    "4502": {
      "op": "POP"
    },
    "4503": {
      "op": "POP"
    },
    "4504": {
      "jump": "o",
      "op": "JUMP"
    },
    "4505": {
      "op": "JUMPDEST"
    },
    "4506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4510": {
      "op": "DUP3"
    },
    "4511": {
      "op": "DUP5"
    },
    "4512": {
      "op": "SUB"
    },
    "4513": {
      "op": "SLT"
    },
    "4514": {
      "op": "ISZERO"
    },
    "4515": {
      "op": "PUSH2",
      "value": "0x11AB"
    },
    "4518": {
      "op": "JUMPI"
    },
    "4519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4521": {
      "op": "DUP1"
    },
    "4522": {
      "op": "REVERT"
    },
    "4523": {
      "op": "JUMPDEST"
    },
    "4524": {
      "op": "POP"
    },
    "4525": {
      "op": "CALLDATALOAD"
    },
    "4526": {
      "op": "SWAP2"
    },
    "4527": {
      "op": "SWAP1"
    },
    "4528": {
      "op": "POP"
    },
    "4529": {
      "jump": "o",
      "op": "JUMP"
    },
    "4530": {
      "op": "JUMPDEST"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4533": {
      "op": "DUP1"
    },
    "4534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4538": {
      "op": "DUP5"
    },
    "4539": {
      "op": "DUP7"
    },
    "4540": {
      "op": "SUB"
    },
    "4541": {
      "op": "SLT"
    },
    "4542": {
      "op": "ISZERO"
    },
    "4543": {
      "op": "PUSH2",
      "value": "0x11C7"
    },
    "4546": {
      "op": "JUMPI"
    },
    "4547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4549": {
      "op": "DUP1"
    },
    "4550": {
      "op": "REVERT"
    },
    "4551": {
      "op": "JUMPDEST"
    },
    "4552": {
      "op": "PUSH2",
      "value": "0x11D0"
    },
    "4555": {
      "op": "DUP5"
    },
    "4556": {
      "op": "PUSH2",
      "value": "0xEB6"
    },
    "4559": {
      "jump": "i",
      "op": "JUMP"
    },
    "4560": {
      "op": "JUMPDEST"
    },
    "4561": {
      "op": "SWAP6"
    },
    "4562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4564": {
      "op": "DUP6"
    },
    "4565": {
      "op": "ADD"
    },
    "4566": {
      "op": "CALLDATALOAD"
    },
    "4567": {
      "op": "SWAP6"
    },
    "4568": {
      "op": "POP"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4571": {
      "op": "SWAP1"
    },
    "4572": {
      "op": "SWAP5"
    },
    "4573": {
      "op": "ADD"
    },
    "4574": {
      "op": "CALLDATALOAD"
    },
    "4575": {
      "op": "SWAP4"
    },
    "4576": {
      "op": "SWAP3"
    },
    "4577": {
      "op": "POP"
    },
    "4578": {
      "op": "POP"
    },
    "4579": {
      "op": "POP"
    },
    "4580": {
      "jump": "o",
      "op": "JUMP"
    },
    "4581": {
      "op": "JUMPDEST"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4586": {
      "op": "DUP3"
    },
    "4587": {
      "op": "DUP5"
    },
    "4588": {
      "op": "SUB"
    },
    "4589": {
      "op": "SLT"
    },
    "4590": {
      "op": "ISZERO"
    },
    "4591": {
      "op": "PUSH2",
      "value": "0x11F7"
    },
    "4594": {
      "op": "JUMPI"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4597": {
      "op": "DUP1"
    },
    "4598": {
      "op": "REVERT"
    },
    "4599": {
      "op": "JUMPDEST"
    },
    "4600": {
      "op": "PUSH2",
      "value": "0x1200"
    },
    "4603": {
      "op": "DUP3"
    },
    "4604": {
      "op": "PUSH2",
      "value": "0xEB6"
    },
    "4607": {
      "jump": "i",
      "op": "JUMP"
    },
    "4608": {
      "op": "JUMPDEST"
    },
    "4609": {
      "op": "SWAP4"
    },
    "4610": {
      "op": "SWAP3"
    },
    "4611": {
      "op": "POP"
    },
    "4612": {
      "op": "POP"
    },
    "4613": {
      "op": "POP"
    },
    "4614": {
      "jump": "o",
      "op": "JUMP"
    },
    "4615": {
      "op": "JUMPDEST"
    },
    "4616": {
      "op": "DUP1"
    },
    "4617": {
      "op": "MLOAD"
    },
    "4618": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "4629": {
      "op": "DUP2"
    },
    "4630": {
      "op": "AND"
    },
    "4631": {
      "op": "DUP2"
    },
    "4632": {
      "op": "EQ"
    },
    "4633": {
      "op": "PUSH2",
      "value": "0xECD"
    },
    "4636": {
      "op": "JUMPI"
    },
    "4637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4639": {
      "op": "DUP1"
    },
    "4640": {
      "op": "REVERT"
    },
    "4641": {
      "op": "JUMPDEST"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4644": {
      "op": "DUP1"
    },
    "4645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4647": {
      "op": "DUP1"
    },
    "4648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4652": {
      "op": "DUP7"
    },
    "4653": {
      "op": "DUP9"
    },
    "4654": {
      "op": "SUB"
    },
    "4655": {
      "op": "SLT"
    },
    "4656": {
      "op": "ISZERO"
    },
    "4657": {
      "op": "PUSH2",
      "value": "0x1239"
    },
    "4660": {
      "op": "JUMPI"
    },
    "4661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4663": {
      "op": "DUP1"
    },
    "4664": {
      "op": "REVERT"
    },
    "4665": {
      "op": "JUMPDEST"
    },
    "4666": {
      "op": "PUSH2",
      "value": "0x1242"
    },
    "4669": {
      "op": "DUP7"
    },
    "4670": {
      "op": "PUSH2",
      "value": "0x1207"
    },
    "4673": {
      "jump": "i",
      "op": "JUMP"
    },
    "4674": {
      "op": "JUMPDEST"
    },
    "4675": {
      "op": "SWAP5"
    },
    "4676": {
      "op": "POP"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4679": {
      "op": "DUP7"
    },
    "4680": {
      "op": "ADD"
    },
    "4681": {
      "op": "MLOAD"
    },
    "4682": {
      "op": "SWAP4"
    },
    "4683": {
      "op": "POP"
    },
    "4684": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4686": {
      "op": "DUP7"
    },
    "4687": {
      "op": "ADD"
    },
    "4688": {
      "op": "MLOAD"
    },
    "4689": {
      "op": "SWAP3"
    },
    "4690": {
      "op": "POP"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4693": {
      "op": "DUP7"
    },
    "4694": {
      "op": "ADD"
    },
    "4695": {
      "op": "MLOAD"
    },
    "4696": {
      "op": "SWAP2"
    },
    "4697": {
      "op": "POP"
    },
    "4698": {
      "op": "PUSH2",
      "value": "0x1265"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4703": {
      "op": "DUP8"
    },
    "4704": {
      "op": "ADD"
    },
    "4705": {
      "op": "PUSH2",
      "value": "0x1207"
    },
    "4708": {
      "jump": "i",
      "op": "JUMP"
    },
    "4709": {
      "op": "JUMPDEST"
    },
    "4710": {
      "op": "SWAP1"
    },
    "4711": {
      "op": "POP"
    },
    "4712": {
      "op": "SWAP3"
    },
    "4713": {
      "op": "SWAP6"
    },
    "4714": {
      "op": "POP"
    },
    "4715": {
      "op": "SWAP3"
    },
    "4716": {
      "op": "SWAP6"
    },
    "4717": {
      "op": "SWAP1"
    },
    "4718": {
      "op": "SWAP4"
    },
    "4719": {
      "op": "POP"
    },
    "4720": {
      "jump": "o",
      "op": "JUMP"
    },
    "4721": {
      "op": "JUMPDEST"
    },
    "4722": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4729": {
      "op": "SHL"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4732": {
      "op": "MSTORE"
    },
    "4733": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4737": {
      "op": "MSTORE"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4742": {
      "op": "REVERT"
    },
    "4743": {
      "op": "JUMPDEST"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4746": {
      "op": "DUP2"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4749": {
      "op": "NOT"
    },
    "4750": {
      "op": "DIV"
    },
    "4751": {
      "op": "DUP4"
    },
    "4752": {
      "op": "GT"
    },
    "4753": {
      "op": "DUP3"
    },
    "4754": {
      "op": "ISZERO"
    },
    "4755": {
      "op": "ISZERO"
    },
    "4756": {
      "op": "AND"
    },
    "4757": {
      "op": "ISZERO"
    },
    "4758": {
      "op": "PUSH2",
      "value": "0x12A1"
    },
    "4761": {
      "op": "JUMPI"
    },
    "4762": {
      "op": "PUSH2",
      "value": "0x12A1"
    },
    "4765": {
      "op": "PUSH2",
      "value": "0x1271"
    },
    "4768": {
      "jump": "i",
      "op": "JUMP"
    },
    "4769": {
      "op": "JUMPDEST"
    },
    "4770": {
      "op": "POP"
    },
    "4771": {
      "op": "MUL"
    },
    "4772": {
      "op": "SWAP1"
    },
    "4773": {
      "jump": "o",
      "op": "JUMP"
    },
    "4774": {
      "op": "JUMPDEST"
    },
    "4775": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4782": {
      "op": "SHL"
    },
    "4783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4785": {
      "op": "MSTORE"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4788": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4790": {
      "op": "MSTORE"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4795": {
      "op": "REVERT"
    },
    "4796": {
      "op": "JUMPDEST"
    },
    "4797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4799": {
      "op": "DUP3"
    },
    "4800": {
      "op": "PUSH2",
      "value": "0x12CB"
    },
    "4803": {
      "op": "JUMPI"
    },
    "4804": {
      "op": "PUSH2",
      "value": "0x12CB"
    },
    "4807": {
      "op": "PUSH2",
      "value": "0x12A6"
    },
    "4810": {
      "jump": "i",
      "op": "JUMP"
    },
    "4811": {
      "op": "JUMPDEST"
    },
    "4812": {
      "op": "POP"
    },
    "4813": {
      "op": "DIV"
    },
    "4814": {
      "op": "SWAP1"
    },
    "4815": {
      "jump": "o",
      "op": "JUMP"
    },
    "4816": {
      "op": "JUMPDEST"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4819": {
      "op": "DUP3"
    },
    "4820": {
      "op": "PUSH2",
      "value": "0x12DF"
    },
    "4823": {
      "op": "JUMPI"
    },
    "4824": {
      "op": "PUSH2",
      "value": "0x12DF"
    },
    "4827": {
      "op": "PUSH2",
      "value": "0x12A6"
    },
    "4830": {
      "jump": "i",
      "op": "JUMP"
    },
    "4831": {
      "op": "JUMPDEST"
    },
    "4832": {
      "op": "POP"
    },
    "4833": {
      "op": "MOD"
    },
    "4834": {
      "op": "SWAP1"
    },
    "4835": {
      "jump": "o",
      "op": "JUMP"
    },
    "4836": {
      "op": "JUMPDEST"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4841": {
      "op": "DUP3"
    },
    "4842": {
      "op": "DUP5"
    },
    "4843": {
      "op": "SUB"
    },
    "4844": {
      "op": "SLT"
    },
    "4845": {
      "op": "ISZERO"
    },
    "4846": {
      "op": "PUSH2",
      "value": "0x12F6"
    },
    "4849": {
      "op": "JUMPI"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4852": {
      "op": "DUP1"
    },
    "4853": {
      "op": "REVERT"
    },
    "4854": {
      "op": "JUMPDEST"
    },
    "4855": {
      "op": "POP"
    },
    "4856": {
      "op": "MLOAD"
    },
    "4857": {
      "op": "SWAP2"
    },
    "4858": {
      "op": "SWAP1"
    },
    "4859": {
      "op": "POP"
    },
    "4860": {
      "jump": "o",
      "op": "JUMP"
    },
    "4861": {
      "op": "JUMPDEST"
    },
    "4862": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4869": {
      "op": "SHL"
    },
    "4870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4872": {
      "op": "MSTORE"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4877": {
      "op": "MSTORE"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4882": {
      "op": "REVERT"
    },
    "4883": {
      "op": "JUMPDEST"
    },
    "4884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4886": {
      "op": "DUP3"
    },
    "4887": {
      "op": "NOT"
    },
    "4888": {
      "op": "DUP3"
    },
    "4889": {
      "op": "GT"
    },
    "4890": {
      "op": "ISZERO"
    },
    "4891": {
      "op": "PUSH2",
      "value": "0x1326"
    },
    "4894": {
      "op": "JUMPI"
    },
    "4895": {
      "op": "PUSH2",
      "value": "0x1326"
    },
    "4898": {
      "op": "PUSH2",
      "value": "0x1271"
    },
    "4901": {
      "jump": "i",
      "op": "JUMP"
    },
    "4902": {
      "op": "JUMPDEST"
    },
    "4903": {
      "op": "POP"
    },
    "4904": {
      "op": "ADD"
    },
    "4905": {
      "op": "SWAP1"
    },
    "4906": {
      "jump": "o",
      "op": "JUMP"
    },
    "4907": {
      "op": "JUMPDEST"
    },
    "4908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4912": {
      "op": "NOT"
    },
    "4913": {
      "op": "DUP3"
    },
    "4914": {
      "op": "EQ"
    },
    "4915": {
      "op": "ISZERO"
    },
    "4916": {
      "op": "PUSH2",
      "value": "0x133F"
    },
    "4919": {
      "op": "JUMPI"
    },
    "4920": {
      "op": "PUSH2",
      "value": "0x133F"
    },
    "4923": {
      "op": "PUSH2",
      "value": "0x1271"
    },
    "4926": {
      "jump": "i",
      "op": "JUMP"
    },
    "4927": {
      "op": "JUMPDEST"
    },
    "4928": {
      "op": "POP"
    },
    "4929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4931": {
      "op": "ADD"
    },
    "4932": {
      "op": "SWAP1"
    },
    "4933": {
      "jump": "o",
      "op": "JUMP"
    },
    "4934": {
      "op": "JUMPDEST"
    },
    "4935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4937": {
      "op": "DUP3"
    },
    "4938": {
      "op": "DUP3"
    },
    "4939": {
      "op": "LT"
    },
    "4940": {
      "op": "ISZERO"
    },
    "4941": {
      "op": "PUSH2",
      "value": "0x1358"
    },
    "4944": {
      "op": "JUMPI"
    },
    "4945": {
      "op": "PUSH2",
      "value": "0x1358"
    },
    "4948": {
      "op": "PUSH2",
      "value": "0x1271"
    },
    "4951": {
      "jump": "i",
      "op": "JUMP"
    },
    "4952": {
      "op": "JUMPDEST"
    },
    "4953": {
      "op": "POP"
    },
    "4954": {
      "op": "SUB"
    },
    "4955": {
      "op": "SWAP1"
    },
    "4956": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "74f6f505254e9080cd3610d30928a3d4ee5e587c",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\npragma experimental ABIEncoderV2;\n\n/** @title A Simple NFT Lottery Contract\n * @author Yoaz Shmider\n * @notice This contract implements Chainlink's V3Aggregator and VRF Consumer Base V2\n * @dev There are few features that needs to be fixed\n */\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\";\nimport \"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\";\n\nerror Lottery__NftValueTooLow();\nerror Lottery__transferTreasuryFailed();\nerror Lottery__CantJoinClosed();\nerror Lottery__UpKeepNotNeeded(\n\tuint256 treasuryBalance,\n\tuint256 playersLength,\n\tuint256 lotteryState\n);\nerror Lottery__NFTValueNotMatch();\n\ncontract Lottery is VRFConsumerBaseV2, Ownable, KeeperCompatibleInterface {\n\t/* --- Types --- */\n\tenum LOTTERY_STATE {\n\t\tOPEN,\n\t\tCLOSED,\n\t\tCALCULATING_WINNER\n\t}\n\n\t// Will hold item information (collection addresss + token id)\n\tstruct nft {\n\t\taddress _tokenAddress;\n\t\tuint256 _tokenId;\n\t\taddress _owner;\n\t}\n\n\t/* --- State Varaibels --- */\n\n\t// Chainlink VRF Varibles\n\tbytes32 private immutable i_gasLane;\n\tuint64 private immutable i_subscriptionId;\n\tuint16 private constant REQUEST_CONFIRMATIONS = 3;\n\tuint32 private immutable i_callbackGasLimit;\n\tuint32 private constant NUM_WORDS = 1;\n\tVRFCoordinatorV2Interface private immutable i_vrfCoordinator;\n\n\t// Lottery Variables\n\tIERC721 internal token;\n\taddress payable[] private s_players; // To keep track of the participants\n\tuint256 private immutable i_initialNFTValue;\n\tAggregatorV3Interface internal ethUsdPriceFeed;\n\taddress payable private s_recentWinner;\n\tLOTTERY_STATE private s_lotteryState;\n\tuint256 private s_lastTimeStamp;\n\tuint256 private immutable i_interval;\n\tnft s_tempToken; // This will be to hold NFT token to evulate rather for evulations of requirements.\n\n\t// Will hold current lottery treasury (all NFTs in lottery pot)\n\tnft[] public s_tresury;\n\t// To keep track of nft's array index to actual NFT item\n\tmapping(bytes32 => nft) private indexToNFT;\n\n\t/* --- Events --- */\n\tevent LotteryEnter(\n\t\taddress indexed player,\n\t\taddress indexed collectionAddress,\n\t\tuint256 indexed tokenId\n\t);\n\tevent requestedLotteryWinner(uint256 requestId);\n\tevent winnerPicked(address indexed winner);\n\n\t/* --- Functions --- */\n\tconstructor(\n\t\taddress _priceFeedAddress,\n\t\taddress _vrfCoordinatorV2,\n\t\tbytes32 _gasLane,\n\t\tuint64 _subscriptionId,\n\t\tuint32 _callbackGasLimit,\n\t\tuint256 _interval\n\t) VRFConsumerBaseV2(_vrfCoordinatorV2) {\n\t\ti_initialNFTValue = 20 * (10**18); // 18 decimals for our starting nft value which is 20 usd\n\t\tethUsdPriceFeed = AggregatorV3Interface(_priceFeedAddress); // get eth to usd price feed instance\n\t\ti_vrfCoordinator = VRFCoordinatorV2Interface(_vrfCoordinatorV2); // get vrfcoordinator instance\n\t\ts_lotteryState = LOTTERY_STATE.CLOSED;\n\t\ti_gasLane = _gasLane;\n\t\ti_subscriptionId = _subscriptionId;\n\t\ti_callbackGasLimit = _callbackGasLimit;\n\t\ts_lastTimeStamp = block.timestamp; // Initiate last block time stamp to the current one when deploying contract\n\t\ti_interval = _interval; // Initate interval based on deplyoing interval logic\n\t}\n\n\t/**\n\t * dev: This is the function that the chainlink keeper will look to return true to update state\n\t * The following should be true in order to return true:\n\t * 1. The time Interval should have passed\n\t * 2. The Lottery should have at least one NFT added to treasury and 1 player\n\t * 3. The Chainlink subscription is funded with Link Token\n\t */\n\tfunction checkUpkeep(\n\t\tbytes memory /*checkData*/\n\t)\n\t\tpublic\n\t\tview\n\t\toverride\n\t\treturns (\n\t\t\tbool upKeepNeeded,\n\t\t\tbytes memory /*performData*/\n\t\t)\n\t{\n\t\tbool isOpen = (s_lotteryState == LOTTERY_STATE.OPEN);\n\t\tbool timePassed = ((block.timestamp - s_lastTimeStamp) >= i_interval);\n\t\tbool hasPlayers = (s_players.length > 0);\n\t\tbool hasBalance = (s_tresury.length > 0); // Check for at least one NFT in Lottery treasury\n\t\tupKeepNeeded = (isOpen && timePassed && hasPlayers && hasBalance);\n\t\treturn (upKeepNeeded, \"0x\");\n\t}\n\n\t/**\n\t * dev: This the function that will perform the upkeep based upon interval and is acting as endLottery function\n\t */\n\tfunction performUpkeep(\n\t\tbytes calldata /* performData */\n\t) external override {\n\t\t(bool upKeepNeeded, ) = checkUpkeep(new bytes(0));\n\t\tif (!upKeepNeeded) {\n\t\t\t// error with information to understand why up keep is not required\n\t\t\trevert Lottery__UpKeepNotNeeded(\n\t\t\t\ts_tresury.length,\n\t\t\t\ts_players.length,\n\t\t\t\tuint256(s_lotteryState)\n\t\t\t);\n\t\t}\n\n\t\tuint256 requestId = i_vrfCoordinator.requestRandomWords(\n\t\t\ti_gasLane,\n\t\t\ti_subscriptionId,\n\t\t\tREQUEST_CONFIRMATIONS,\n\t\t\ti_callbackGasLimit,\n\t\t\tNUM_WORDS\n\t\t);\n\n\t\temit requestedLotteryWinner(requestId);\n\t}\n\n\tfunction enterLottery(address _collectionAddress, uint256 _tokenId)\n\t\tpublic\n\t\tpayable\n\t{\n\t\tif (s_lotteryState == LOTTERY_STATE.CLOSED) {\n\t\t\trevert Lottery__CantJoinClosed();\n\t\t}\n\t\t// require(\n\t\t// \ttoken._isApprovedOrOwner(_msgSender(), _tokenId),\n\t\t// \t\"ERC721: transfer caller is not owner nor approved\"\n\t\t// );\n\t\ttoken = IERC721(_collectionAddress);\n\t\t// Assign storage tempToken var with current stats\n\t\ts_tempToken._tokenAddress = _collectionAddress;\n\t\ts_tempToken._tokenId = _tokenId;\n\t\ts_tempToken._owner = msg.sender;\n\t\t// 1st added NFT to lottery treasury\n\t\tif (s_tresury.length <= 0) {\n\t\t\tif (getNFTValue() >= i_initialNFTValue) {\n\t\t\t\trevert Lottery__NftValueTooLow();\n\t\t\t}\n\t\t}\n\t\t// Not 1st added NFT to lottery treasury\n\t\telse {\n\t\t\t// NFT Value should be in lottery pot range (15% margin up or down)\n\t\t\tif (\n\t\t\t\t!inBetween(\n\t\t\t\t\tgetNFTValue(),\n\t\t\t\t\t85 % getTreasuryAvg(),\n\t\t\t\t\t115 % getTreasuryAvg()\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\trevert Lottery__NFTValueNotMatch();\n\t\t\t} //To implement getNFTValue & getTreasuryAvg\n\t\t}\n\t\ttoken.transferFrom(msg.sender, address(this), _tokenId);\n\t\ts_tresury.push(s_tempToken); //push to NFT Treasury array\n\t\ts_players.push(payable(msg.sender)); // push current player to our players array\n\t\temit LotteryEnter(msg.sender, _collectionAddress, _tokenId);\n\t}\n\n\tfunction inBetween(\n\t\tuint256 value,\n\t\tuint256 min,\n\t\tuint256 max\n\t) internal pure returns (bool) {\n\t\trequire(min < max);\n\t\treturn value >= min && value <= max;\n\t}\n\n\t// Client will send token value using Moralis api and set NFT value\n\tfunction setNFTValue(\n\t\taddress _collectionAddress,\n\t\tuint256 _tokenId,\n\t\tuint256 _value\n\t) public onlyOwner {}\n\n\tfunction fulfillRandomWords(\n\t\tuint256, /*_requestId*/\n\t\tuint256[] memory _randomWords\n\t) internal override {\n\t\trequire(\n\t\t\ts_lotteryState == LOTTERY_STATE.CALCULATING_WINNER,\n\t\t\t\"Not there yet!!\"\n\t\t);\n\t\trequire(_randomWords.length > 0, \"Random not found!\");\n\t\tuint256 indexOfWinner = _randomWords[0] % s_players.length;\n\t\ts_recentWinner = s_players[indexOfWinner];\n\t\ts_lotteryState = LOTTERY_STATE.OPEN;\n\t\temit winnerPicked(s_recentWinner);\n\t\t(bool success, ) = s_recentWinner.call{ value: address(this).balance }(\n\t\t\t\"\"\n\t\t); // transfer the latest winner with the lottery balance\n\t\tif (!success) {\n\t\t\trevert Lottery__transferTreasuryFailed();\n\t\t}\n\n\t\t// reset lottery stats\n\t\ts_players = new address payable[](0); // reset players array size 0\n\t\t// s_tresury = new nft[](0);\n\t\ts_lastTimeStamp = block.timestamp; //reset last time stamp\n\t}\n\n\t/* --- View / Pure Functions --- */\n\tfunction getTreasuryAvg() public returns (uint256) {\n\t\tuint256 avg = 0;\n\t\tfor (\n\t\t\tuint256 nftTreasuryIndex = 0;\n\t\t\tnftTreasuryIndex <= s_tresury.length;\n\t\t\tnftTreasuryIndex++\n\t\t) {\n\t\t\ts_tempToken = s_tresury[nftTreasuryIndex];\n\t\t\tavg += getNFTValue();\n\t\t}\n\t\treturn avg;\n\t}\n\n\tfunction getPlayer(uint256 index) public view returns (address) {\n\t\treturn s_players[index];\n\t}\n\n\tfunction getRecenetWinner() public view returns (address) {\n\t\treturn s_recentWinner;\n\t}\n\n\t// Returns value in USD of an NFT\n\tfunction getNFTValue() public pure returns (uint256) {\n\t\treturn 1;\n\t}\n\n\tfunction getLotteryTreasury() public view returns (uint256) {\n\t\tuint256 balance = address(this).balance;\n\t\treturn balance;\n\t}\n\n\tfunction getNumOfParticipants() public view returns (uint256) {\n\t\treturn s_players.length;\n\t}\n\n\tfunction getEntranceFee() public view returns (uint256) {\n\t\t(, int256 price, , , ) = ethUsdPriceFeed.latestRoundData(); // fetching current eth usd price 8 decimals\n\t\tuint256 adjustedPrice = uint256(price) * 10**10; // now price will be represented in 18 decimals as well\n\t\tuint256 costToEnter = (i_initialNFTValue * 10**18) / adjustedPrice; // math to get our result in 18 decimals as well\n\t\treturn costToEnter;\n\t}\n\n\tfunction getLotteryState() public view returns (LOTTERY_STATE) {\n\t\treturn s_lotteryState;\n\t}\n\n\tfunction getNumWords() public pure returns (uint256) {\n\t\treturn NUM_WORDS;\n\t}\n\n\tfunction getRequestConfirmations() public pure returns (uint256) {\n\t\treturn REQUEST_CONFIRMATIONS;\n\t}\n\n\tfunction getLatestTimeStamp() public view returns (uint256) {\n\t\treturn s_lastTimeStamp;\n\t}\n}\n",
  "sourceMap": "1025:8073:13:-:0;;;2600:841;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5599:32:6;;;;936::0;719:10:2;936:18:0;:32::i;:::-;2829:13:13::1;2809:33;::::0;2904:15:::1;:58:::0;;-1:-1:-1;;;;;;2904:58:13::1;-1:-1:-1::0;;;;;2904:58:13;;::::1;;::::0;;3004:63;;;::::1;2904:58;3004:63:::0;3102:14:::1;:37:::0;;-1:-1:-1;;;;3102:37:13::1;-1:-1:-1::0;;;3102:37:13::1;::::0;;3143:20:::1;::::0;;;;-1:-1:-1;;;;;3167:34:13::1;;::::0;3205:38:::1;::::0;;::::1;;::::0;3265:15:::1;3247;:33:::0;3361:22:::1;::::0;1025:8073;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:177:15:-;93:13;;-1:-1:-1;;;;;135:31:15;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:748::-;309:6;317;325;333;341;349;402:3;390:9;381:7;377:23;373:33;370:53;;;419:1;416;409:12;370:53;442:40;472:9;442:40;:::i;:::-;432:50;;501:49;546:2;535:9;531:18;501:49;:::i;:::-;590:2;575:18;;569:25;637:2;622:18;;616:25;491:59;;-1:-1:-1;569:25:15;-1:-1:-1;;;;;;670:30:15;;660:41;;650:69;;715:1;712;705:12;650:69;788:3;773:19;;767:26;738:5;;-1:-1:-1;837:10:15;824:24;;812:37;;802:65;;863:1;860;853:12;802:65;886:7;876:17;;;933:3;922:9;918:19;912:26;902:36;;196:748;;;;;;;;:::o;949:127::-;1025:8073:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Lottery.sol",
  "type": "contract"
}